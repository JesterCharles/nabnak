[INFO ] 2022-08-12 16:25:44.981 [http-nio-8080-exec-2] MemberServlet - Email entered ar@mail.com
[INFO ] 2022-08-12 16:25:45.981 [http-nio-8080-exec-4] MemberServlet - Email entered ar@mail.com
[INFO ] 2022-08-12 16:25:47.961 [http-nio-8080-exec-6] MemberServlet - Email entered ar@mail.com
[DEBUG] 2022-08-15 15:55:06.500 [main] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 15:55:06.507 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 15:55:06.508 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 15:55:06.511 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 15:55:06.524 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-08-15 15:55:06.525 [main] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.postgresql.Driver, hibernate.show_sql=true, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 15:55:06.631 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 15:55:06.631 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 15:55:06.631 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 15:55:06.635 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 15:55:06.635 [main] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 15:55:06.642 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 15:55:06.642 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 15:55:06.653 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 15:55:06.675 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 15:55:06.676 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 15:55:06.676 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 15:55:06.676 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@cd1d761
[DEBUG] 2022-08-15 15:55:06.676 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b8d96d9
[DEBUG] 2022-08-15 15:55:06.677 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@ebaa6cb
[DEBUG] 2022-08-15 15:55:06.677 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 15:55:06.678 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 15:55:06.678 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 15:55:06.678 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 15:55:06.678 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 15:55:06.679 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 15:55:06.679 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 15:55:06.679 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 15:55:06.679 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 15:55:06.680 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 15:55:06.680 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 15:55:06.680 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 15:55:06.681 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 15:55:06.681 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 15:55:06.681 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 15:55:06.682 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 15:55:06.682 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 15:55:06.682 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 15:55:06.683 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 15:55:06.683 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 15:55:06.683 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 15:55:06.683 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@663411de
[DEBUG] 2022-08-15 15:55:06.684 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@663411de
[DEBUG] 2022-08-15 15:55:06.684 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5b202a3a
[DEBUG] 2022-08-15 15:55:06.684 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5b202a3a
[DEBUG] 2022-08-15 15:55:06.685 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@305a0c5f
[DEBUG] 2022-08-15 15:55:06.685 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@305a0c5f
[DEBUG] 2022-08-15 15:55:06.685 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4372b9b6
[DEBUG] 2022-08-15 15:55:06.686 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@22ffa91a
[DEBUG] 2022-08-15 15:55:06.687 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5b619d14
[DEBUG] 2022-08-15 15:55:06.688 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5b619d14
[DEBUG] 2022-08-15 15:55:06.688 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6d23017e
[DEBUG] 2022-08-15 15:55:06.688 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6d23017e
[DEBUG] 2022-08-15 15:55:06.694 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6d9f7a80
[DEBUG] 2022-08-15 15:55:06.695 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6d9f7a80
[DEBUG] 2022-08-15 15:55:06.696 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@542e560f
[DEBUG] 2022-08-15 15:55:06.696 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@542e560f
[DEBUG] 2022-08-15 15:55:06.696 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b00856b
[DEBUG] 2022-08-15 15:55:06.697 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b00856b
[DEBUG] 2022-08-15 15:55:06.697 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6b3e12b5
[DEBUG] 2022-08-15 15:55:06.697 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6b3e12b5
[DEBUG] 2022-08-15 15:55:06.698 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61f05988
[DEBUG] 2022-08-15 15:55:06.698 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61f05988
[DEBUG] 2022-08-15 15:55:06.699 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@613a8ee1
[DEBUG] 2022-08-15 15:55:06.699 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@613a8ee1
[DEBUG] 2022-08-15 15:55:06.701 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5911e990
[DEBUG] 2022-08-15 15:55:06.701 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5911e990
[DEBUG] 2022-08-15 15:55:06.701 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2d1dee39
[DEBUG] 2022-08-15 15:55:06.702 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d1dee39
[DEBUG] 2022-08-15 15:55:06.702 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4af0df05
[DEBUG] 2022-08-15 15:55:06.702 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4af0df05
[DEBUG] 2022-08-15 15:55:06.703 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 15:55:06.703 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 15:55:06.703 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 15:55:06.704 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2072acb2
[DEBUG] 2022-08-15 15:55:06.705 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 15:55:06.705 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 15:55:06.705 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 15:55:06.705 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@299321e2
[DEBUG] 2022-08-15 15:55:06.706 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5e1fa5b1
[DEBUG] 2022-08-15 15:55:06.706 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@71cf1b07
[DEBUG] 2022-08-15 15:55:06.706 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@71cf1b07
[DEBUG] 2022-08-15 15:55:06.707 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@260e86a1
[DEBUG] 2022-08-15 15:55:06.707 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@260e86a1
[DEBUG] 2022-08-15 15:55:06.708 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@ebb6851
[DEBUG] 2022-08-15 15:55:06.708 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@ebb6851
[DEBUG] 2022-08-15 15:55:06.708 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@13518f37
[DEBUG] 2022-08-15 15:55:06.708 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@13518f37
[DEBUG] 2022-08-15 15:55:06.709 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b2a01d4
[DEBUG] 2022-08-15 15:55:06.709 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b2a01d4
[DEBUG] 2022-08-15 15:55:06.709 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2f48b3d2
[DEBUG] 2022-08-15 15:55:06.710 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 15:55:06.710 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 15:55:06.710 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 15:55:06.711 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 15:55:06.711 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 15:55:06.711 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 15:55:06.712 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@68ead359
[DEBUG] 2022-08-15 15:55:06.712 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@a43ce46
[DEBUG] 2022-08-15 15:55:06.713 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 15:55:06.713 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 15:55:06.713 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 15:55:06.713 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 15:55:06.714 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 15:55:06.714 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 15:55:06.714 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7e5d9a50
[DEBUG] 2022-08-15 15:55:06.714 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@fcb4004
[DEBUG] 2022-08-15 15:55:06.715 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7966baa7
[DEBUG] 2022-08-15 15:55:06.715 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7966baa7
[DEBUG] 2022-08-15 15:55:06.716 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d36e77e
[DEBUG] 2022-08-15 15:55:06.716 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@8c11eee
[DEBUG] 2022-08-15 15:55:06.716 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8c11eee
[DEBUG] 2022-08-15 15:55:06.717 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5829e4f4
[DEBUG] 2022-08-15 15:55:06.717 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5829e4f4
[DEBUG] 2022-08-15 15:55:06.718 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b2c4efb
[DEBUG] 2022-08-15 15:55:06.718 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3cc41abc
[DEBUG] 2022-08-15 15:55:06.718 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4c2cc639
[DEBUG] 2022-08-15 15:55:06.720 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@35e5d0e5
[DEBUG] 2022-08-15 15:55:06.720 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35e5d0e5
[DEBUG] 2022-08-15 15:55:06.721 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@655ef322
[DEBUG] 2022-08-15 15:55:06.721 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7e276594
[DEBUG] 2022-08-15 15:55:06.721 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3401a114
[DEBUG] 2022-08-15 15:55:06.721 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5066d65f
[DEBUG] 2022-08-15 15:55:06.721 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4233e892
[DEBUG] 2022-08-15 15:55:06.721 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@77d2e85
[DEBUG] 2022-08-15 15:55:06.721 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3ecd267f
[DEBUG] 2022-08-15 15:55:06.722 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58ffcbd7
[DEBUG] 2022-08-15 15:55:06.758 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 15:55:06.758 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 15:55:06.759 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 15:55:06.759 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 15:55:06.759 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 15:55:06.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 15:55:06.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 15:55:06.761 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 15:55:06.761 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 15:55:06.761 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 15:55:06.762 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 15:55:06.762 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 15:55:06.762 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 15:55:06.763 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 15:55:06.765 [main] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 15:55:06.772 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 15:55:48.381 [main] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 15:55:48.387 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 15:55:48.388 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 15:55:48.390 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 15:55:48.401 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-08-15 15:55:48.402 [main] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.postgresql.Driver, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 15:55:48.487 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 15:55:48.487 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 15:55:48.487 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 15:55:48.490 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 15:55:48.490 [main] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 15:55:48.496 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 15:55:48.496 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 15:55:48.505 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 15:55:48.525 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 15:55:48.525 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 15:55:48.525 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 15:55:48.526 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@cd1d761
[DEBUG] 2022-08-15 15:55:48.526 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b8d96d9
[DEBUG] 2022-08-15 15:55:48.526 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@ebaa6cb
[DEBUG] 2022-08-15 15:55:48.527 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 15:55:48.527 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 15:55:48.527 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 15:55:48.528 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 15:55:48.528 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 15:55:48.528 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 15:55:48.529 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 15:55:48.529 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 15:55:48.529 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 15:55:48.530 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 15:55:48.530 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 15:55:48.530 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 15:55:48.531 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 15:55:48.531 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 15:55:48.531 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 15:55:48.531 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 15:55:48.532 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 15:55:48.532 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 15:55:48.532 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 15:55:48.532 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 15:55:48.533 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 15:55:48.533 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@663411de
[DEBUG] 2022-08-15 15:55:48.533 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@663411de
[DEBUG] 2022-08-15 15:55:48.534 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5b202a3a
[DEBUG] 2022-08-15 15:55:48.534 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5b202a3a
[DEBUG] 2022-08-15 15:55:48.534 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@305a0c5f
[DEBUG] 2022-08-15 15:55:48.535 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@305a0c5f
[DEBUG] 2022-08-15 15:55:48.535 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4372b9b6
[DEBUG] 2022-08-15 15:55:48.535 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@22ffa91a
[DEBUG] 2022-08-15 15:55:48.536 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5b619d14
[DEBUG] 2022-08-15 15:55:48.537 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5b619d14
[DEBUG] 2022-08-15 15:55:48.538 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6d23017e
[DEBUG] 2022-08-15 15:55:48.538 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6d23017e
[DEBUG] 2022-08-15 15:55:48.543 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6d9f7a80
[DEBUG] 2022-08-15 15:55:48.543 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6d9f7a80
[DEBUG] 2022-08-15 15:55:48.544 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@542e560f
[DEBUG] 2022-08-15 15:55:48.544 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@542e560f
[DEBUG] 2022-08-15 15:55:48.545 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b00856b
[DEBUG] 2022-08-15 15:55:48.545 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b00856b
[DEBUG] 2022-08-15 15:55:48.546 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6b3e12b5
[DEBUG] 2022-08-15 15:55:48.546 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6b3e12b5
[DEBUG] 2022-08-15 15:55:48.547 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61f05988
[DEBUG] 2022-08-15 15:55:48.547 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61f05988
[DEBUG] 2022-08-15 15:55:48.548 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@613a8ee1
[DEBUG] 2022-08-15 15:55:48.548 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@613a8ee1
[DEBUG] 2022-08-15 15:55:48.549 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5911e990
[DEBUG] 2022-08-15 15:55:48.549 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5911e990
[DEBUG] 2022-08-15 15:55:48.550 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2d1dee39
[DEBUG] 2022-08-15 15:55:48.550 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d1dee39
[DEBUG] 2022-08-15 15:55:48.551 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4af0df05
[DEBUG] 2022-08-15 15:55:48.551 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4af0df05
[DEBUG] 2022-08-15 15:55:48.552 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 15:55:48.552 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 15:55:48.552 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 15:55:48.553 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2072acb2
[DEBUG] 2022-08-15 15:55:48.553 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 15:55:48.553 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 15:55:48.553 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 15:55:48.554 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@299321e2
[DEBUG] 2022-08-15 15:55:48.554 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5e1fa5b1
[DEBUG] 2022-08-15 15:55:48.555 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@71cf1b07
[DEBUG] 2022-08-15 15:55:48.555 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@71cf1b07
[DEBUG] 2022-08-15 15:55:48.555 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@260e86a1
[DEBUG] 2022-08-15 15:55:48.556 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@260e86a1
[DEBUG] 2022-08-15 15:55:48.556 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@ebb6851
[DEBUG] 2022-08-15 15:55:48.556 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@ebb6851
[DEBUG] 2022-08-15 15:55:48.557 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@13518f37
[DEBUG] 2022-08-15 15:55:48.557 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@13518f37
[DEBUG] 2022-08-15 15:55:48.557 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b2a01d4
[DEBUG] 2022-08-15 15:55:48.557 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b2a01d4
[DEBUG] 2022-08-15 15:55:48.558 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2f48b3d2
[DEBUG] 2022-08-15 15:55:48.558 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 15:55:48.558 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 15:55:48.559 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 15:55:48.559 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 15:55:48.559 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 15:55:48.559 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 15:55:48.560 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@68ead359
[DEBUG] 2022-08-15 15:55:48.560 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@a43ce46
[DEBUG] 2022-08-15 15:55:48.561 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 15:55:48.561 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 15:55:48.561 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 15:55:48.561 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 15:55:48.562 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 15:55:48.562 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 15:55:48.562 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7e5d9a50
[DEBUG] 2022-08-15 15:55:48.562 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@fcb4004
[DEBUG] 2022-08-15 15:55:48.563 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7966baa7
[DEBUG] 2022-08-15 15:55:48.563 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7966baa7
[DEBUG] 2022-08-15 15:55:48.563 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d36e77e
[DEBUG] 2022-08-15 15:55:48.564 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@8c11eee
[DEBUG] 2022-08-15 15:55:48.564 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8c11eee
[DEBUG] 2022-08-15 15:55:48.565 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5829e4f4
[DEBUG] 2022-08-15 15:55:48.565 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5829e4f4
[DEBUG] 2022-08-15 15:55:48.565 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b2c4efb
[DEBUG] 2022-08-15 15:55:48.566 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3cc41abc
[DEBUG] 2022-08-15 15:55:48.566 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4c2cc639
[DEBUG] 2022-08-15 15:55:48.568 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@35e5d0e5
[DEBUG] 2022-08-15 15:55:48.568 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35e5d0e5
[DEBUG] 2022-08-15 15:55:48.568 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@655ef322
[DEBUG] 2022-08-15 15:55:48.568 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7e276594
[DEBUG] 2022-08-15 15:55:48.568 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3401a114
[DEBUG] 2022-08-15 15:55:48.569 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5066d65f
[DEBUG] 2022-08-15 15:55:48.569 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4233e892
[DEBUG] 2022-08-15 15:55:48.569 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@77d2e85
[DEBUG] 2022-08-15 15:55:48.569 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3ecd267f
[DEBUG] 2022-08-15 15:55:48.569 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58ffcbd7
[DEBUG] 2022-08-15 15:55:48.605 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 15:55:48.606 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 15:55:48.606 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 15:55:48.606 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 15:55:48.607 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 15:55:48.607 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 15:55:48.607 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 15:55:48.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 15:55:48.609 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 15:55:48.609 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 15:55:48.609 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 15:55:48.609 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 15:55:48.610 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 15:55:48.610 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 15:55:48.613 [main] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 15:55:48.623 [main] pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak]
[INFO ] 2022-08-15 15:55:48.624 [main] pooling - HHH10001001: Connection properties: {user=postgres, password=javaReact1000}
[INFO ] 2022-08-15 15:55:48.624 [main] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2022-08-15 15:55:48.627 [main] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2022-08-15 15:55:48.627 [main] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2022-08-15 15:55:48.956 [main] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4
      major : 13
      minor : 4
[DEBUG] 2022-08-15 15:55:48.956 [main] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
[DEBUG] 2022-08-15 15:55:48.957 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-08-15 15:55:48.963 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 15:55:48.970 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-08-15 15:55:49.016 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37eeec90
[DEBUG] 2022-08-15 15:55:49.016 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37eeec90
[DEBUG] 2022-08-15 15:55:49.016 [main] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4b2a01d4
[DEBUG] 2022-08-15 15:55:49.017 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21694e53] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@72b16078]
[DEBUG] 2022-08-15 15:55:49.034 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-08-15 15:55:49.041 [main] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 15:55:49.049 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 15:55:49.051 [main] EntityBinder - Import with entity name Member
[DEBUG] 2022-08-15 15:55:49.054 [main] EntityBinder - Bind entity com.revature.nabnak.member.Member on table Member
[DEBUG] 2022-08-15 15:56:56.017 [main] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 15:56:56.025 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 15:56:56.026 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 15:56:56.029 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 15:56:56.040 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-08-15 15:56:56.042 [main] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.postgresql.Driver, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 15:56:56.124 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 15:56:56.124 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 15:56:56.124 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 15:56:56.127 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 15:56:56.127 [main] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 15:56:56.133 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 15:56:56.133 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 15:56:56.142 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 15:56:56.161 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 15:56:56.161 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 15:56:56.161 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 15:56:56.162 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@cd1d761
[DEBUG] 2022-08-15 15:56:56.162 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b8d96d9
[DEBUG] 2022-08-15 15:56:56.162 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@ebaa6cb
[DEBUG] 2022-08-15 15:56:56.163 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 15:56:56.163 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 15:56:56.163 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 15:56:56.164 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 15:56:56.164 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 15:56:56.164 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 15:56:56.164 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 15:56:56.165 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 15:56:56.165 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 15:56:56.165 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 15:56:56.165 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 15:56:56.166 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 15:56:56.166 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 15:56:56.166 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 15:56:56.166 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 15:56:56.167 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 15:56:56.167 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 15:56:56.167 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 15:56:56.168 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 15:56:56.168 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 15:56:56.168 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 15:56:56.168 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@663411de
[DEBUG] 2022-08-15 15:56:56.169 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@663411de
[DEBUG] 2022-08-15 15:56:56.169 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5b202a3a
[DEBUG] 2022-08-15 15:56:56.169 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5b202a3a
[DEBUG] 2022-08-15 15:56:56.170 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@305a0c5f
[DEBUG] 2022-08-15 15:56:56.170 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@305a0c5f
[DEBUG] 2022-08-15 15:56:56.170 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4372b9b6
[DEBUG] 2022-08-15 15:56:56.170 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@22ffa91a
[DEBUG] 2022-08-15 15:56:56.171 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5b619d14
[DEBUG] 2022-08-15 15:56:56.172 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5b619d14
[DEBUG] 2022-08-15 15:56:56.173 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6d23017e
[DEBUG] 2022-08-15 15:56:56.173 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6d23017e
[DEBUG] 2022-08-15 15:56:56.178 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6d9f7a80
[DEBUG] 2022-08-15 15:56:56.178 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6d9f7a80
[DEBUG] 2022-08-15 15:56:56.179 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@542e560f
[DEBUG] 2022-08-15 15:56:56.179 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@542e560f
[DEBUG] 2022-08-15 15:56:56.180 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b00856b
[DEBUG] 2022-08-15 15:56:56.180 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b00856b
[DEBUG] 2022-08-15 15:56:56.181 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6b3e12b5
[DEBUG] 2022-08-15 15:56:56.181 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6b3e12b5
[DEBUG] 2022-08-15 15:56:56.182 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61f05988
[DEBUG] 2022-08-15 15:56:56.182 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61f05988
[DEBUG] 2022-08-15 15:56:56.182 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@613a8ee1
[DEBUG] 2022-08-15 15:56:56.183 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@613a8ee1
[DEBUG] 2022-08-15 15:56:56.184 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5911e990
[DEBUG] 2022-08-15 15:56:56.184 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5911e990
[DEBUG] 2022-08-15 15:56:56.185 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2d1dee39
[DEBUG] 2022-08-15 15:56:56.185 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d1dee39
[DEBUG] 2022-08-15 15:56:56.185 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4af0df05
[DEBUG] 2022-08-15 15:56:56.186 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4af0df05
[DEBUG] 2022-08-15 15:56:56.186 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 15:56:56.186 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 15:56:56.186 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 15:56:56.187 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2072acb2
[DEBUG] 2022-08-15 15:56:56.188 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 15:56:56.188 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 15:56:56.188 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 15:56:56.188 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@299321e2
[DEBUG] 2022-08-15 15:56:56.189 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5e1fa5b1
[DEBUG] 2022-08-15 15:56:56.189 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@71cf1b07
[DEBUG] 2022-08-15 15:56:56.189 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@71cf1b07
[DEBUG] 2022-08-15 15:56:56.190 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@260e86a1
[DEBUG] 2022-08-15 15:56:56.190 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@260e86a1
[DEBUG] 2022-08-15 15:56:56.191 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@ebb6851
[DEBUG] 2022-08-15 15:56:56.191 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@ebb6851
[DEBUG] 2022-08-15 15:56:56.191 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@13518f37
[DEBUG] 2022-08-15 15:56:56.191 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@13518f37
[DEBUG] 2022-08-15 15:56:56.192 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b2a01d4
[DEBUG] 2022-08-15 15:56:56.192 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b2a01d4
[DEBUG] 2022-08-15 15:56:56.192 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2f48b3d2
[DEBUG] 2022-08-15 15:56:56.193 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 15:56:56.193 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 15:56:56.193 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 15:56:56.193 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 15:56:56.194 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 15:56:56.194 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 15:56:56.194 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@68ead359
[DEBUG] 2022-08-15 15:56:56.195 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@a43ce46
[DEBUG] 2022-08-15 15:56:56.195 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 15:56:56.195 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 15:56:56.195 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 15:56:56.196 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 15:56:56.196 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 15:56:56.196 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 15:56:56.196 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7e5d9a50
[DEBUG] 2022-08-15 15:56:56.196 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@fcb4004
[DEBUG] 2022-08-15 15:56:56.197 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7966baa7
[DEBUG] 2022-08-15 15:56:56.197 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7966baa7
[DEBUG] 2022-08-15 15:56:56.198 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d36e77e
[DEBUG] 2022-08-15 15:56:56.198 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@8c11eee
[DEBUG] 2022-08-15 15:56:56.198 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8c11eee
[DEBUG] 2022-08-15 15:56:56.199 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5829e4f4
[DEBUG] 2022-08-15 15:56:56.199 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5829e4f4
[DEBUG] 2022-08-15 15:56:56.199 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b2c4efb
[DEBUG] 2022-08-15 15:56:56.200 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3cc41abc
[DEBUG] 2022-08-15 15:56:56.200 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4c2cc639
[DEBUG] 2022-08-15 15:56:56.202 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@35e5d0e5
[DEBUG] 2022-08-15 15:56:56.202 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35e5d0e5
[DEBUG] 2022-08-15 15:56:56.202 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@655ef322
[DEBUG] 2022-08-15 15:56:56.202 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7e276594
[DEBUG] 2022-08-15 15:56:56.202 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3401a114
[DEBUG] 2022-08-15 15:56:56.203 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5066d65f
[DEBUG] 2022-08-15 15:56:56.203 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4233e892
[DEBUG] 2022-08-15 15:56:56.203 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@77d2e85
[DEBUG] 2022-08-15 15:56:56.203 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3ecd267f
[DEBUG] 2022-08-15 15:56:56.203 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58ffcbd7
[DEBUG] 2022-08-15 15:56:56.235 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 15:56:56.235 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 15:56:56.236 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 15:56:56.236 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 15:56:56.236 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 15:56:56.237 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 15:56:56.237 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 15:56:56.238 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 15:56:56.238 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 15:56:56.238 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 15:56:56.239 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 15:56:56.239 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 15:56:56.239 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 15:56:56.239 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 15:56:56.242 [main] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 15:56:56.244 [main] pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak]
[INFO ] 2022-08-15 15:56:56.245 [main] pooling - HHH10001001: Connection properties: {user=postgres, password=javaReact1000}
[INFO ] 2022-08-15 15:56:56.245 [main] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2022-08-15 15:56:56.246 [main] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2022-08-15 15:56:56.247 [main] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2022-08-15 15:56:56.540 [main] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4
      major : 13
      minor : 4
[DEBUG] 2022-08-15 15:56:56.540 [main] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
[DEBUG] 2022-08-15 15:56:56.540 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-08-15 15:56:56.546 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 15:56:56.552 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-08-15 15:56:56.600 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37eeec90
[DEBUG] 2022-08-15 15:56:56.600 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37eeec90
[DEBUG] 2022-08-15 15:56:56.601 [main] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4b2a01d4
[DEBUG] 2022-08-15 15:56:56.601 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21694e53] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@72b16078]
[DEBUG] 2022-08-15 15:56:56.617 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-08-15 15:56:56.623 [main] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 15:56:56.632 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 15:56:56.634 [main] EntityBinder - Import with entity name Member
[DEBUG] 2022-08-15 15:56:56.635 [main] EntityBinder - Bind entity com.revature.nabnak.member.Member on table members
[DEBUG] 2022-08-15 15:57:42.658 [main] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 15:57:42.665 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 15:57:42.666 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 15:57:42.668 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 15:57:42.680 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-08-15 15:57:42.682 [main] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.postgresql.Driver, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 15:57:42.779 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 15:57:42.779 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 15:57:42.779 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 15:57:42.782 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 15:57:42.783 [main] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 15:57:42.788 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 15:57:42.788 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 15:57:42.797 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 15:57:42.816 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 15:57:42.816 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 15:57:42.817 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 15:57:42.817 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@cd1d761
[DEBUG] 2022-08-15 15:57:42.817 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b8d96d9
[DEBUG] 2022-08-15 15:57:42.818 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@ebaa6cb
[DEBUG] 2022-08-15 15:57:42.818 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 15:57:42.818 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 15:57:42.818 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 15:57:42.819 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 15:57:42.819 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 15:57:42.819 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 15:57:42.820 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 15:57:42.820 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 15:57:42.820 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 15:57:42.821 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 15:57:42.821 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 15:57:42.821 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 15:57:42.821 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 15:57:42.822 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 15:57:42.822 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 15:57:42.822 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 15:57:42.822 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 15:57:42.823 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 15:57:42.823 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 15:57:42.823 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 15:57:42.823 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 15:57:42.824 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@663411de
[DEBUG] 2022-08-15 15:57:42.824 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@663411de
[DEBUG] 2022-08-15 15:57:42.824 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5b202a3a
[DEBUG] 2022-08-15 15:57:42.825 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5b202a3a
[DEBUG] 2022-08-15 15:57:42.825 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@305a0c5f
[DEBUG] 2022-08-15 15:57:42.825 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@305a0c5f
[DEBUG] 2022-08-15 15:57:42.826 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4372b9b6
[DEBUG] 2022-08-15 15:57:42.826 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@22ffa91a
[DEBUG] 2022-08-15 15:57:42.828 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5b619d14
[DEBUG] 2022-08-15 15:57:42.828 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5b619d14
[DEBUG] 2022-08-15 15:57:42.828 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6d23017e
[DEBUG] 2022-08-15 15:57:42.828 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6d23017e
[DEBUG] 2022-08-15 15:57:42.834 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6d9f7a80
[DEBUG] 2022-08-15 15:57:42.834 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6d9f7a80
[DEBUG] 2022-08-15 15:57:42.834 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@542e560f
[DEBUG] 2022-08-15 15:57:42.835 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@542e560f
[DEBUG] 2022-08-15 15:57:42.835 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b00856b
[DEBUG] 2022-08-15 15:57:42.835 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b00856b
[DEBUG] 2022-08-15 15:57:42.836 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6b3e12b5
[DEBUG] 2022-08-15 15:57:42.836 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6b3e12b5
[DEBUG] 2022-08-15 15:57:42.837 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61f05988
[DEBUG] 2022-08-15 15:57:42.837 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61f05988
[DEBUG] 2022-08-15 15:57:42.838 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@613a8ee1
[DEBUG] 2022-08-15 15:57:42.838 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@613a8ee1
[DEBUG] 2022-08-15 15:57:42.839 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5911e990
[DEBUG] 2022-08-15 15:57:42.839 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5911e990
[DEBUG] 2022-08-15 15:57:42.840 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2d1dee39
[DEBUG] 2022-08-15 15:57:42.840 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d1dee39
[DEBUG] 2022-08-15 15:57:42.841 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4af0df05
[DEBUG] 2022-08-15 15:57:42.841 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4af0df05
[DEBUG] 2022-08-15 15:57:42.842 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 15:57:42.842 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 15:57:42.842 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 15:57:42.843 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2072acb2
[DEBUG] 2022-08-15 15:57:42.843 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 15:57:42.843 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 15:57:42.843 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 15:57:42.844 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@299321e2
[DEBUG] 2022-08-15 15:57:42.844 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5e1fa5b1
[DEBUG] 2022-08-15 15:57:42.845 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@71cf1b07
[DEBUG] 2022-08-15 15:57:42.845 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@71cf1b07
[DEBUG] 2022-08-15 15:57:42.845 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@260e86a1
[DEBUG] 2022-08-15 15:57:42.845 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@260e86a1
[DEBUG] 2022-08-15 15:57:42.846 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@ebb6851
[DEBUG] 2022-08-15 15:57:42.846 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@ebb6851
[DEBUG] 2022-08-15 15:57:42.846 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@13518f37
[DEBUG] 2022-08-15 15:57:42.847 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@13518f37
[DEBUG] 2022-08-15 15:57:42.847 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b2a01d4
[DEBUG] 2022-08-15 15:57:42.847 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b2a01d4
[DEBUG] 2022-08-15 15:57:42.847 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2f48b3d2
[DEBUG] 2022-08-15 15:57:42.848 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 15:57:42.848 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 15:57:42.848 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 15:57:42.849 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 15:57:42.849 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 15:57:42.849 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 15:57:42.850 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@68ead359
[DEBUG] 2022-08-15 15:57:42.850 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@a43ce46
[DEBUG] 2022-08-15 15:57:42.850 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 15:57:42.850 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 15:57:42.851 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 15:57:42.851 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 15:57:42.851 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 15:57:42.851 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 15:57:42.852 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7e5d9a50
[DEBUG] 2022-08-15 15:57:42.852 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@fcb4004
[DEBUG] 2022-08-15 15:57:42.853 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7966baa7
[DEBUG] 2022-08-15 15:57:42.853 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7966baa7
[DEBUG] 2022-08-15 15:57:42.853 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d36e77e
[DEBUG] 2022-08-15 15:57:42.854 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@8c11eee
[DEBUG] 2022-08-15 15:57:42.854 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8c11eee
[DEBUG] 2022-08-15 15:57:42.854 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5829e4f4
[DEBUG] 2022-08-15 15:57:42.855 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5829e4f4
[DEBUG] 2022-08-15 15:57:42.855 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b2c4efb
[DEBUG] 2022-08-15 15:57:42.855 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3cc41abc
[DEBUG] 2022-08-15 15:57:42.856 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4c2cc639
[DEBUG] 2022-08-15 15:57:42.857 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@35e5d0e5
[DEBUG] 2022-08-15 15:57:42.857 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35e5d0e5
[DEBUG] 2022-08-15 15:57:42.858 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@655ef322
[DEBUG] 2022-08-15 15:57:42.858 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7e276594
[DEBUG] 2022-08-15 15:57:42.858 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3401a114
[DEBUG] 2022-08-15 15:57:42.858 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5066d65f
[DEBUG] 2022-08-15 15:57:42.858 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4233e892
[DEBUG] 2022-08-15 15:57:42.858 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@77d2e85
[DEBUG] 2022-08-15 15:57:42.858 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3ecd267f
[DEBUG] 2022-08-15 15:57:42.859 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58ffcbd7
[DEBUG] 2022-08-15 15:57:42.895 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 15:57:42.896 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 15:57:42.896 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 15:57:42.896 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 15:57:42.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 15:57:42.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 15:57:42.898 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 15:57:42.898 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 15:57:42.899 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 15:57:42.899 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 15:57:42.900 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 15:57:42.900 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 15:57:42.900 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 15:57:42.901 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 15:57:42.905 [main] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 15:57:42.907 [main] pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak]
[INFO ] 2022-08-15 15:57:42.908 [main] pooling - HHH10001001: Connection properties: {user=postgres, password=javaReact1000}
[INFO ] 2022-08-15 15:57:42.908 [main] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2022-08-15 15:57:42.910 [main] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2022-08-15 15:57:42.910 [main] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2022-08-15 15:57:43.204 [main] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4
      major : 13
      minor : 4
[DEBUG] 2022-08-15 15:57:43.204 [main] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
[DEBUG] 2022-08-15 15:57:43.204 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-08-15 15:57:43.210 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 15:57:43.217 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-08-15 15:57:43.265 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37eeec90
[DEBUG] 2022-08-15 15:57:43.265 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37eeec90
[DEBUG] 2022-08-15 15:57:43.265 [main] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4b2a01d4
[DEBUG] 2022-08-15 15:57:43.266 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21694e53] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@72b16078]
[DEBUG] 2022-08-15 15:57:43.281 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-08-15 15:57:43.287 [main] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 15:57:43.296 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 15:57:43.298 [main] EntityBinder - Import with entity name Member
[DEBUG] 2022-08-15 15:57:43.299 [main] EntityBinder - Bind entity com.revature.nabnak.member.Member on table members
[DEBUG] 2022-08-15 15:57:43.309 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 15:57:43.310 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 15:57:43.310 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 15:57:43.310 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2022-08-15 15:57:43.311 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:email]
[DEBUG] 2022-08-15 15:57:43.312 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2022-08-15 15:57:43.313 [main] PropertyBinder - Building property email
[DEBUG] 2022-08-15 15:57:43.314 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
[DEBUG] 2022-08-15 15:57:43.315 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=experienceMonths, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 15:57:43.315 [main] PropertyBinder - MetadataSourceProcessor property experienceMonths with lazy=false
[DEBUG] 2022-08-15 15:57:43.315 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:experienceMonths]
[DEBUG] 2022-08-15 15:57:43.315 [main] SimpleValueBinder - building SimpleValue for experienceMonths
[DEBUG] 2022-08-15 15:57:43.315 [main] PropertyBinder - Building property experienceMonths
[DEBUG] 2022-08-15 15:57:43.315 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=fullName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 15:57:43.316 [main] PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
[DEBUG] 2022-08-15 15:57:43.316 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:fullName]
[DEBUG] 2022-08-15 15:57:43.316 [main] SimpleValueBinder - building SimpleValue for fullName
[DEBUG] 2022-08-15 15:57:43.316 [main] PropertyBinder - Building property fullName
[DEBUG] 2022-08-15 15:57:43.316 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 15:57:43.316 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2022-08-15 15:57:43.316 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:password]
[DEBUG] 2022-08-15 15:57:43.316 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2022-08-15 15:57:43.317 [main] PropertyBinder - Building property password
[DEBUG] 2022-08-15 15:57:43.317 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=registrationDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 15:57:43.317 [main] PropertyBinder - MetadataSourceProcessor property registrationDate with lazy=false
[DEBUG] 2022-08-15 15:57:43.317 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:registrationDate]
[DEBUG] 2022-08-15 15:57:43.317 [main] SimpleValueBinder - building SimpleValue for registrationDate
[DEBUG] 2022-08-15 15:57:43.318 [main] PropertyBinder - Building property registrationDate
[DEBUG] 2022-08-15 15:57:43.329 [main] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 15:57:43.329 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 15:57:43.329 [main] EntityBinder - Import with entity name Card
[DEBUG] 2022-08-15 15:57:43.329 [main] EntityBinder - Bind entity com.revature.nabnak.card.Card on table cards
[DEBUG] 2022-08-15 15:57:43.330 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=cardId, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 15:57:43.330 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 15:57:43.330 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 15:57:43.330 [main] PropertyBinder - MetadataSourceProcessor property cardId with lazy=false
[DEBUG] 2022-08-15 15:57:43.330 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:cardId]
[DEBUG] 2022-08-15 15:57:43.330 [main] SimpleValueBinder - building SimpleValue for cardId
[DEBUG] 2022-08-15 15:57:43.330 [main] PropertyBinder - Building property cardId
[DEBUG] 2022-08-15 15:57:43.331 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cardId)]), cardId, assigned, , ...)
[DEBUG] 2022-08-15 15:57:43.331 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 15:57:43.331 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2022-08-15 15:57:43.331 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:description]
[DEBUG] 2022-08-15 15:57:43.332 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2022-08-15 15:57:43.332 [main] PropertyBinder - Building property description
[DEBUG] 2022-08-15 15:57:43.332 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=memberEmail, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 15:57:43.332 [main] PropertyBinder - MetadataSourceProcessor property memberEmail with lazy=false
[DEBUG] 2022-08-15 15:57:43.332 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:memberEmail]
[DEBUG] 2022-08-15 15:57:43.332 [main] SimpleValueBinder - building SimpleValue for memberEmail
[DEBUG] 2022-08-15 15:57:43.332 [main] PropertyBinder - Building property memberEmail
[DEBUG] 2022-08-15 15:57:43.332 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=points, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 15:57:43.333 [main] PropertyBinder - MetadataSourceProcessor property points with lazy=false
[DEBUG] 2022-08-15 15:57:43.333 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:points]
[DEBUG] 2022-08-15 15:57:43.333 [main] SimpleValueBinder - building SimpleValue for points
[DEBUG] 2022-08-15 15:57:43.333 [main] PropertyBinder - Building property points
[DEBUG] 2022-08-15 15:57:43.333 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 15:57:43.333 [main] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2022-08-15 15:57:43.333 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:status]
[DEBUG] 2022-08-15 15:57:43.333 [main] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2022-08-15 15:57:43.333 [main] PropertyBinder - Building property status
[DEBUG] 2022-08-15 15:57:43.334 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=tech, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 15:57:43.334 [main] PropertyBinder - MetadataSourceProcessor property tech with lazy=false
[DEBUG] 2022-08-15 15:57:43.334 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:tech]
[DEBUG] 2022-08-15 15:57:43.334 [main] SimpleValueBinder - building SimpleValue for tech
[DEBUG] 2022-08-15 15:57:43.334 [main] PropertyBinder - Building property tech
[DEBUG] 2022-08-15 15:57:43.334 [main] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 15:57:43.335 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 15:57:43.335 [main] EntityBinder - Import with entity name Team
[DEBUG] 2022-08-15 15:57:43.335 [main] EntityBinder - Bind entity com.revature.nabnak.team.Team on table teams
[DEBUG] 2022-08-15 15:57:43.335 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 15:57:43.335 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 15:57:43.335 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 15:57:43.335 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2022-08-15 15:57:43.336 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamName]
[DEBUG] 2022-08-15 15:57:43.336 [main] SimpleValueBinder - building SimpleValue for teamName
[DEBUG] 2022-08-15 15:57:43.336 [main] PropertyBinder - Building property teamName
[DEBUG] 2022-08-15 15:57:43.336 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(teamName)]), teamName, assigned, , ...)
[DEBUG] 2022-08-15 15:57:43.336 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamSize, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 15:57:43.336 [main] PropertyBinder - MetadataSourceProcessor property teamSize with lazy=false
[DEBUG] 2022-08-15 15:57:43.336 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamSize]
[DEBUG] 2022-08-15 15:57:43.336 [main] SimpleValueBinder - building SimpleValue for teamSize
[DEBUG] 2022-08-15 15:57:43.337 [main] PropertyBinder - Building property teamSize
[DEBUG] 2022-08-15 15:57:43.337 [main] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 15:57:43.337 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 15:57:43.337 [main] EntityBinder - Import with entity name Board
[DEBUG] 2022-08-15 15:57:43.337 [main] EntityBinder - Bind entity com.revature.nabnak.board.Board on table boards
[DEBUG] 2022-08-15 15:57:43.337 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(boards), mappingColumn=board_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 15:57:43.337 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 15:57:43.338 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 15:57:43.338 [main] PropertyBinder - MetadataSourceProcessor property board_id with lazy=false
[DEBUG] 2022-08-15 15:57:43.338 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.board.Board:board_id]
[DEBUG] 2022-08-15 15:57:43.338 [main] SimpleValueBinder - building SimpleValue for board_id
[DEBUG] 2022-08-15 15:57:43.338 [main] PropertyBinder - Building property board_id
[DEBUG] 2022-08-15 15:57:43.338 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(board_id)]), board_id, assigned, , ...)
[DEBUG] 2022-08-15 15:57:43.339 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2022-08-15 15:57:43.339 [main] SimpleValueBinder - Starting fillSimpleValue for experienceMonths
[DEBUG] 2022-08-15 15:57:43.339 [main] SimpleValueBinder - Starting fillSimpleValue for fullName
[DEBUG] 2022-08-15 15:57:43.339 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2022-08-15 15:57:43.339 [main] SimpleValueBinder - Starting fillSimpleValue for registrationDate
[DEBUG] 2022-08-15 15:57:43.339 [main] SimpleValueBinder - Starting fillSimpleValue for cardId
[DEBUG] 2022-08-15 15:57:43.340 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2022-08-15 15:57:43.340 [main] SimpleValueBinder - Starting fillSimpleValue for memberEmail
[DEBUG] 2022-08-15 15:57:43.340 [main] SimpleValueBinder - Starting fillSimpleValue for points
[DEBUG] 2022-08-15 15:57:43.340 [main] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2022-08-15 15:57:43.340 [main] SimpleValueBinder - Starting fillSimpleValue for tech
[DEBUG] 2022-08-15 15:57:43.340 [main] SimpleValueBinder - Starting fillSimpleValue for teamName
[DEBUG] 2022-08-15 15:57:43.340 [main] SimpleValueBinder - Starting fillSimpleValue for teamSize
[DEBUG] 2022-08-15 15:57:43.340 [main] SimpleValueBinder - Starting fillSimpleValue for board_id
[DEBUG] 2022-08-15 15:57:43.341 [main] PrimaryKey - Forcing column [email] to be non-null as it is part of the primary key for table [members]
[DEBUG] 2022-08-15 15:57:43.341 [main] PrimaryKey - Forcing column [cardid] to be non-null as it is part of the primary key for table [cards]
[DEBUG] 2022-08-15 15:57:43.341 [main] PrimaryKey - Forcing column [teamname] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2022-08-15 15:57:43.341 [main] PrimaryKey - Forcing column [board_id] to be non-null as it is part of the primary key for table [boards]
[DEBUG] 2022-08-15 15:57:43.356 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2022-08-15 15:57:43.357 [main] Settings - SessionFactory name : null
[DEBUG] 2022-08-15 15:57:43.357 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-08-15 15:57:43.357 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-08-15 15:57:43.357 [main] Settings - Statistics: disabled
[DEBUG] 2022-08-15 15:57:43.357 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-08-15 15:57:43.357 [main] Settings - Default entity-mode: pojo
[DEBUG] 2022-08-15 15:57:43.358 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-08-15 15:57:43.358 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-08-15 15:57:43.358 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-08-15 15:57:43.358 [main] Settings - Default batch fetch size: -1
[DEBUG] 2022-08-15 15:57:43.358 [main] Settings - Maximum outer join fetch depth: null
[DEBUG] 2022-08-15 15:57:43.358 [main] Settings - Default null ordering: NONE
[DEBUG] 2022-08-15 15:57:43.358 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-08-15 15:57:43.358 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-08-15 15:57:43.358 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-08-15 15:57:43.358 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-08-15 15:57:43.358 [main] Settings - Query language substitutions: {}
[DEBUG] 2022-08-15 15:57:43.358 [main] Settings - Named query checking : enabled
[DEBUG] 2022-08-15 15:57:43.358 [main] Settings - Second-level cache: disabled
[DEBUG] 2022-08-15 15:57:43.359 [main] Settings - Second-level query cache: disabled
[DEBUG] 2022-08-15 15:57:43.359 [main] Settings - Second-level query cache factory: null
[DEBUG] 2022-08-15 15:57:43.359 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2022-08-15 15:57:43.359 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-08-15 15:57:43.359 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-08-15 15:57:43.359 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-08-15 15:57:43.359 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-08-15 15:57:43.359 [main] Settings - JDBC batch size: 15
[DEBUG] 2022-08-15 15:57:43.359 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-08-15 15:57:43.359 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2022-08-15 15:57:43.359 [main] Settings - Wrap result sets: disabled
[DEBUG] 2022-08-15 15:57:43.359 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-08-15 15:57:43.359 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2022-08-15 15:57:43.360 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-08-15 15:57:43.360 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-08-15 15:57:43.360 [main] Settings - JPA compliance - query : disabled
[DEBUG] 2022-08-15 15:57:43.360 [main] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2022-08-15 15:57:43.360 [main] Settings - JPA compliance - lists : disabled
[DEBUG] 2022-08-15 15:57:43.360 [main] Settings - JPA compliance - transactions : disabled
[DEBUG] 2022-08-15 15:57:43.384 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 15:57:43.385 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 15:57:43.391 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-08-15 15:57:43.391 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, java.class.path=/home/cjester/.m2/repository/org/junit/platform/junit-platform-launcher/1.8.2/junit-platform-launcher-1.8.2.jar:/home/cjester/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:/home/cjester/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/snap/intellij-idea-community/381/lib/idea_rt.jar:/snap/intellij-idea-community/381/plugins/junit/lib/junit5-rt.jar:/snap/intellij-idea-community/381/plugins/junit/lib/junit-rt.jar:/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/ext/cldrdata.jar:/opt/jdk8u332-b09/jre/lib/ext/dnsns.jar:/opt/jdk8u332-b09/jre/lib/ext/jaccess.jar:/opt/jdk8u332-b09/jre/lib/ext/localedata.jar:/opt/jdk8u332-b09/jre/lib/ext/nashorn.jar:/opt/jdk8u332-b09/jre/lib/ext/sunec.jar:/opt/jdk8u332-b09/jre/lib/ext/sunjce_provider.jar:/opt/jdk8u332-b09/jre/lib/ext/sunpkcs11.jar:/opt/jdk8u332-b09/jre/lib/ext/zipfs.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/management-agent.jar:/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/target/test-classes:/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/target/classes:/home/cjester/.m2/repository/org/postgresql/postgresql/42.3.3/postgresql-42.3.3.jar:/home/cjester/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/home/cjester/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/home/cjester/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/cjester/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/home/cjester/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/cjester/.m2/repository/org/mockito/mockito-core/4.6.1/mockito-core-4.6.1.jar:/home/cjester/.m2/repository/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10.jar:/home/cjester/.m2/repository/net/bytebuddy/byte-buddy-agent/1.12.10/byte-buddy-agent-1.12.10.jar:/home/cjester/.m2/repository/org/objenesis/objenesis/3.2/objenesis-3.2.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.23/tomcat-embed-core-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.23/tomcat-annotations-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.23/tomcat-embed-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.23/tomcat-embed-el-8.5.23.jar:/home/cjester/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper/8.5.23/tomcat-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.5.23/tomcat-servlet-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-juli/8.5.23/tomcat-juli-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-el-api/8.5.23/tomcat-el-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-api/8.5.23/tomcat-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util-scan/8.5.23/tomcat-util-scan-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util/8.5.23/tomcat-util-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper-el/8.5.23/tomcat-jasper-el-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jsp-api/8.5.23/tomcat-jsp-api-8.5.23.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/home/cjester/.m2/repository/org/hibernate/hibernate-core/5.6.9.Final/hibernate-core-5.6.9.Final.jar:/home/cjester/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/home/cjester/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/cjester/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/cjester/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/cjester/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/home/cjester/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/cjester/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/cjester/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/home/cjester/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/cjester/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/cjester/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/cjester/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/snap/intellij-idea-community/381/lib/idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/opt/jdk8u332-b09/jre/lib/amd64, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.revature.nabnak.util.HibernateUtilTestSuite, sun.cpu.endian=little, user.home=/home/cjester, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/opt/jdk8u332-b09/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/opt/jdk8u332-b09/jre/lib/sunrsasign.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_332-b09, user.name=cjester, path.separator=:, hibernate.connection.username=****, os.version=5.15.0-46-generic, java.endorsed.dirs=/opt/jdk8u332-b09/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/tmp, java.version=1.8.0_332, user.dir=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3249a1ce, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Temurin, java.vm.version=25.332-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/opt/jdk8u332-b09/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[DEBUG] 2022-08-15 15:57:43.398 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-08-15 15:57:43.399 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-08-15 15:57:43.399 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21694e53] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@89c65d5]
[DEBUG] 2022-08-15 15:57:43.434 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 15:57:43.434 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 15:57:43.533 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 15:57:43.533 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 15:57:43.537 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 15:57:43.538 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 15:57:43.547 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 15:57:43.548 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 15:57:43.554 [main] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 15:57:43.554 [main] AbstractEntityPersister -  Version select: select email from members where email =?
[DEBUG] 2022-08-15 15:57:43.554 [main] AbstractEntityPersister -  Snapshot select: select member_.email, member_.experienceMonths as experien2_2_, member_.fullName as fullname3_2_, member_.password as password4_2_, member_.registrationDate as registra5_2_ from members member_ where member_.email=?
[DEBUG] 2022-08-15 15:57:43.554 [main] AbstractEntityPersister -  Insert 0: insert into members (experienceMonths, fullName, password, registrationDate, email) values (?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 15:57:43.555 [main] AbstractEntityPersister -  Update 0: update members set experienceMonths=?, fullName=?, password=?, registrationDate=? where email=?
[DEBUG] 2022-08-15 15:57:43.555 [main] AbstractEntityPersister -  Delete 0: delete from members where email=?
[DEBUG] 2022-08-15 15:57:43.566 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a262d6]
[DEBUG] 2022-08-15 15:57:43.567 [main] MetamodelGraphWalker - Visiting attribute path : experienceMonths
[DEBUG] 2022-08-15 15:57:43.567 [main] MetamodelGraphWalker - Visiting attribute path : fullName
[DEBUG] 2022-08-15 15:57:43.568 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-08-15 15:57:43.568 [main] MetamodelGraphWalker - Visiting attribute path : registrationDate
[DEBUG] 2022-08-15 15:57:43.568 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 15:57:43.573 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 15:57:43.576 [main] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.member.Member)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.member.Member, querySpaceUid=<gen:0>, path=com.revature.nabnak.member.Member)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.member.Member)
          - SQL table alias mapping - member0_
          - alias suffix - 0_
          - suffixed key columns - {email1_2_0_}

[DEBUG] 2022-08-15 15:57:43.577 [main] EntityLoader - Static select for entity com.revature.nabnak.member.Member [NONE]: select member0_.email as email1_2_0_, member0_.experienceMonths as experien2_2_0_, member0_.fullName as fullname3_2_0_, member0_.password as password4_2_0_, member0_.registrationDate as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 15:57:43.577 [main] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 15:57:43.577 [main] AbstractEntityPersister -  Version select: select teamName from teams where teamName =?
[DEBUG] 2022-08-15 15:57:43.577 [main] AbstractEntityPersister -  Snapshot select: select team_.teamName, team_.teamSize as teamsize2_3_ from teams team_ where team_.teamName=?
[DEBUG] 2022-08-15 15:57:43.577 [main] AbstractEntityPersister -  Insert 0: insert into teams (teamSize, teamName) values (?, ?)
[DEBUG] 2022-08-15 15:57:43.577 [main] AbstractEntityPersister -  Update 0: update teams set teamSize=? where teamName=?
[DEBUG] 2022-08-15 15:57:43.577 [main] AbstractEntityPersister -  Delete 0: delete from teams where teamName=?
[DEBUG] 2022-08-15 15:57:43.578 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a480135]
[DEBUG] 2022-08-15 15:57:43.578 [main] MetamodelGraphWalker - Visiting attribute path : teamSize
[DEBUG] 2022-08-15 15:57:43.578 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 15:57:43.578 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 15:57:43.578 [main] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.team.Team)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.team.Team, querySpaceUid=<gen:0>, path=com.revature.nabnak.team.Team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.team.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamname1_3_0_}

[DEBUG] 2022-08-15 15:57:43.578 [main] EntityLoader - Static select for entity com.revature.nabnak.team.Team [NONE]: select team0_.teamName as teamname1_3_0_, team0_.teamSize as teamsize2_3_0_ from teams team0_ where team0_.teamName=?
[DEBUG] 2022-08-15 15:57:43.579 [main] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 15:57:43.579 [main] AbstractEntityPersister -  Version select: select cardId from cards where cardId =?
[DEBUG] 2022-08-15 15:57:43.579 [main] AbstractEntityPersister -  Snapshot select: select card_.cardId, card_.description as descript2_1_, card_.memberEmail as memberem3_1_, card_.points as points4_1_, card_.status as status5_1_, card_.tech as tech6_1_ from cards card_ where card_.cardId=?
[DEBUG] 2022-08-15 15:57:43.579 [main] AbstractEntityPersister -  Insert 0: insert into cards (description, memberEmail, points, status, tech, cardId) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 15:57:43.579 [main] AbstractEntityPersister -  Update 0: update cards set description=?, memberEmail=?, points=?, status=?, tech=? where cardId=?
[DEBUG] 2022-08-15 15:57:43.579 [main] AbstractEntityPersister -  Delete 0: delete from cards where cardId=?
[DEBUG] 2022-08-15 15:57:43.579 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@681e144]
[DEBUG] 2022-08-15 15:57:43.579 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-08-15 15:57:43.579 [main] MetamodelGraphWalker - Visiting attribute path : memberEmail
[DEBUG] 2022-08-15 15:57:43.579 [main] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2022-08-15 15:57:43.579 [main] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2022-08-15 15:57:43.580 [main] MetamodelGraphWalker - Visiting attribute path : tech
[DEBUG] 2022-08-15 15:57:43.580 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 15:57:43.580 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 15:57:43.580 [main] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.card.Card)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.card.Card, querySpaceUid=<gen:0>, path=com.revature.nabnak.card.Card)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.card.Card)
          - SQL table alias mapping - card0_
          - alias suffix - 0_
          - suffixed key columns - {cardid1_1_0_}

[DEBUG] 2022-08-15 15:57:43.580 [main] EntityLoader - Static select for entity com.revature.nabnak.card.Card [NONE]: select card0_.cardId as cardid1_1_0_, card0_.description as descript2_1_0_, card0_.memberEmail as memberem3_1_0_, card0_.points as points4_1_0_, card0_.status as status5_1_0_, card0_.tech as tech6_1_0_ from cards card0_ where card0_.cardId=?
[DEBUG] 2022-08-15 15:57:43.580 [main] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 15:57:43.580 [main] AbstractEntityPersister -  Version select: select board_id from boards where board_id =?
[DEBUG] 2022-08-15 15:57:43.580 [main] AbstractEntityPersister -  Snapshot select: select board_.board_id from boards board_ where board_.board_id=?
[DEBUG] 2022-08-15 15:57:43.581 [main] AbstractEntityPersister -  Insert 0: insert into boards (board_id) values (?)
[DEBUG] 2022-08-15 15:57:43.581 [main] AbstractEntityPersister -  Update 0: null
[DEBUG] 2022-08-15 15:57:43.581 [main] AbstractEntityPersister -  Delete 0: delete from boards where board_id=?
[DEBUG] 2022-08-15 15:57:43.581 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72ee5d84]
[DEBUG] 2022-08-15 15:57:43.581 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 15:57:43.581 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 15:57:43.581 [main] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.board.Board)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.board.Board, querySpaceUid=<gen:0>, path=com.revature.nabnak.board.Board)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.board.Board)
          - SQL table alias mapping - board0_
          - alias suffix - 0_
          - suffixed key columns - {board_id1_0_0_}

[DEBUG] 2022-08-15 15:57:43.581 [main] EntityLoader - Static select for entity com.revature.nabnak.board.Board [NONE]: select board0_.board_id as board_id1_0_0_ from boards board0_ where board0_.board_id=?
[INFO ] 2022-08-15 15:57:43.604 [main] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@9d7ccfe] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 2022-08-15 15:57:43.657 [main] SQL - create table boards (board_id int4 not null, primary key (board_id))
[DEBUG] 2022-08-15 15:57:43.684 [main] SQL - create table cards (cardId int4 not null, description varchar(255), memberEmail varchar(255), points int4 not null, status varchar(255), tech varchar(255), primary key (cardId))
[DEBUG] 2022-08-15 15:57:43.702 [main] SQL - alter table if exists members add column experienceMonths int4 not null
[WARN ] 2022-08-15 15:57:43.715 [main] ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table if exists members add column experienceMonths int4 not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table if exists members add column experienceMonths int4 not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:581) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:602) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:314) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:78) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:728) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at com.revature.nabnak.util.HibernateUtil.getSession(HibernateUtil.java:39) ~[classes/:?]
	at com.revature.nabnak.util.HibernateUtilTestSuite.test_getConnection_returnValidConnection_givenProvidedCredentialsAreCorrect(HibernateUtilTestSuite.java:17) ~[test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_332]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_332]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_332]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_332]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725) ~[junit-platform-commons-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1259) ~[?:1.8.0_332]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1259) ~[?:1.8.0_332]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107) ~[junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) [junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) [junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53) [junit-platform-launcher-1.8.2.jar:1.8.2]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
Caused by: org.postgresql.util.PSQLException: ERROR: column "experiencemonths" of relation "members" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:329) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:315) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:291) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:286) ~[postgresql-42.3.3.jar:42.3.3]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	... 82 more
[DEBUG] 2022-08-15 15:57:43.719 [main] SQL - alter table if exists members add column fullName varchar(255)
[DEBUG] 2022-08-15 15:57:43.731 [main] SQL - alter table if exists members add column registrationDate date
[DEBUG] 2022-08-15 15:57:43.742 [main] SQL - create table teams (teamName varchar(255) not null, teamSize int4 not null, primary key (teamName))
[DEBUG] 2022-08-15 15:57:43.758 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-08-15 15:57:43.759 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-08-15 15:57:43.761 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-08-15 15:57:43.761 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-08-15 15:57:43.761 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-08-15 15:57:43.761 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-08-15 15:57:43.763 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 15:57:43.766 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@59c33386
[DEBUG] 2022-08-15 15:57:43.767 [main] SessionFactoryRegistry - Registering SessionFactory: 3953ad74-f635-450b-9570-f02193e3fd40 (<unnamed>)
[DEBUG] 2022-08-15 15:57:43.767 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-08-15 15:57:43.837 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-08-15 16:57:28.238 [main] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 16:57:28.244 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 16:57:28.245 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 16:57:28.247 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 16:57:28.259 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-08-15 16:57:28.260 [main] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.postgresql.Driver, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 16:57:28.343 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 16:57:28.344 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 16:57:28.344 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 16:57:28.347 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 16:57:28.347 [main] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 16:57:28.352 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 16:57:28.353 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 16:57:28.362 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 16:57:28.381 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 16:57:28.382 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 16:57:28.382 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a2e526
[DEBUG] 2022-08-15 16:57:28.382 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@cd1d761
[DEBUG] 2022-08-15 16:57:28.382 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b8d96d9
[DEBUG] 2022-08-15 16:57:28.383 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@ebaa6cb
[DEBUG] 2022-08-15 16:57:28.383 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 16:57:28.383 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 16:57:28.384 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c5de8
[DEBUG] 2022-08-15 16:57:28.384 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 16:57:28.384 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 16:57:28.384 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a640157
[DEBUG] 2022-08-15 16:57:28.385 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 16:57:28.385 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 16:57:28.385 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2dca0d64
[DEBUG] 2022-08-15 16:57:28.386 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 16:57:28.386 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 16:57:28.386 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55dfebeb
[DEBUG] 2022-08-15 16:57:28.387 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 16:57:28.387 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 16:57:28.387 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e8ce150
[DEBUG] 2022-08-15 16:57:28.387 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 16:57:28.388 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 16:57:28.388 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b84fcf8
[DEBUG] 2022-08-15 16:57:28.388 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 16:57:28.388 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 16:57:28.389 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@56f0cc85
[DEBUG] 2022-08-15 16:57:28.389 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@663411de
[DEBUG] 2022-08-15 16:57:28.389 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@663411de
[DEBUG] 2022-08-15 16:57:28.390 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5b202a3a
[DEBUG] 2022-08-15 16:57:28.390 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5b202a3a
[DEBUG] 2022-08-15 16:57:28.390 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@305a0c5f
[DEBUG] 2022-08-15 16:57:28.391 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@305a0c5f
[DEBUG] 2022-08-15 16:57:28.391 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4372b9b6
[DEBUG] 2022-08-15 16:57:28.393 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@22ffa91a
[DEBUG] 2022-08-15 16:57:28.393 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5b619d14
[DEBUG] 2022-08-15 16:57:28.393 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5b619d14
[DEBUG] 2022-08-15 16:57:28.394 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6d23017e
[DEBUG] 2022-08-15 16:57:28.394 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6d23017e
[DEBUG] 2022-08-15 16:57:28.399 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6d9f7a80
[DEBUG] 2022-08-15 16:57:28.400 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6d9f7a80
[DEBUG] 2022-08-15 16:57:28.400 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@542e560f
[DEBUG] 2022-08-15 16:57:28.400 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@542e560f
[DEBUG] 2022-08-15 16:57:28.401 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b00856b
[DEBUG] 2022-08-15 16:57:28.401 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b00856b
[DEBUG] 2022-08-15 16:57:28.402 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6b3e12b5
[DEBUG] 2022-08-15 16:57:28.402 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6b3e12b5
[DEBUG] 2022-08-15 16:57:28.403 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61f05988
[DEBUG] 2022-08-15 16:57:28.403 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61f05988
[DEBUG] 2022-08-15 16:57:28.404 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@613a8ee1
[DEBUG] 2022-08-15 16:57:28.404 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@613a8ee1
[DEBUG] 2022-08-15 16:57:28.405 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5911e990
[DEBUG] 2022-08-15 16:57:28.405 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5911e990
[DEBUG] 2022-08-15 16:57:28.406 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2d1dee39
[DEBUG] 2022-08-15 16:57:28.406 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d1dee39
[DEBUG] 2022-08-15 16:57:28.407 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4af0df05
[DEBUG] 2022-08-15 16:57:28.407 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4af0df05
[DEBUG] 2022-08-15 16:57:28.407 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 16:57:28.408 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 16:57:28.408 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2ceb80a1
[DEBUG] 2022-08-15 16:57:28.408 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2072acb2
[DEBUG] 2022-08-15 16:57:28.409 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 16:57:28.409 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 16:57:28.409 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@732f29af
[DEBUG] 2022-08-15 16:57:28.410 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@299321e2
[DEBUG] 2022-08-15 16:57:28.410 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5e1fa5b1
[DEBUG] 2022-08-15 16:57:28.411 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@71cf1b07
[DEBUG] 2022-08-15 16:57:28.411 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@71cf1b07
[DEBUG] 2022-08-15 16:57:28.411 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@260e86a1
[DEBUG] 2022-08-15 16:57:28.411 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@260e86a1
[DEBUG] 2022-08-15 16:57:28.412 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@ebb6851
[DEBUG] 2022-08-15 16:57:28.412 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@ebb6851
[DEBUG] 2022-08-15 16:57:28.413 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@13518f37
[DEBUG] 2022-08-15 16:57:28.413 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@13518f37
[DEBUG] 2022-08-15 16:57:28.413 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b2a01d4
[DEBUG] 2022-08-15 16:57:28.413 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b2a01d4
[DEBUG] 2022-08-15 16:57:28.414 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2f48b3d2
[DEBUG] 2022-08-15 16:57:28.414 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 16:57:28.414 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 16:57:28.414 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@44e3a2b2
[DEBUG] 2022-08-15 16:57:28.415 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 16:57:28.415 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 16:57:28.415 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@65fe9e33
[DEBUG] 2022-08-15 16:57:28.416 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@68ead359
[DEBUG] 2022-08-15 16:57:28.416 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@a43ce46
[DEBUG] 2022-08-15 16:57:28.416 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 16:57:28.417 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 16:57:28.417 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7a560583
[DEBUG] 2022-08-15 16:57:28.417 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 16:57:28.417 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 16:57:28.417 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@616fe72b
[DEBUG] 2022-08-15 16:57:28.418 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7e5d9a50
[DEBUG] 2022-08-15 16:57:28.418 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@fcb4004
[DEBUG] 2022-08-15 16:57:28.419 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7966baa7
[DEBUG] 2022-08-15 16:57:28.419 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7966baa7
[DEBUG] 2022-08-15 16:57:28.419 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d36e77e
[DEBUG] 2022-08-15 16:57:28.420 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@8c11eee
[DEBUG] 2022-08-15 16:57:28.420 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8c11eee
[DEBUG] 2022-08-15 16:57:28.421 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5829e4f4
[DEBUG] 2022-08-15 16:57:28.421 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5829e4f4
[DEBUG] 2022-08-15 16:57:28.421 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b2c4efb
[DEBUG] 2022-08-15 16:57:28.421 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3cc41abc
[DEBUG] 2022-08-15 16:57:28.422 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4c2cc639
[DEBUG] 2022-08-15 16:57:28.424 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@35e5d0e5
[DEBUG] 2022-08-15 16:57:28.424 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35e5d0e5
[DEBUG] 2022-08-15 16:57:28.424 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@655ef322
[DEBUG] 2022-08-15 16:57:28.424 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7e276594
[DEBUG] 2022-08-15 16:57:28.424 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3401a114
[DEBUG] 2022-08-15 16:57:28.424 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5066d65f
[DEBUG] 2022-08-15 16:57:28.425 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4233e892
[DEBUG] 2022-08-15 16:57:28.425 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@77d2e85
[DEBUG] 2022-08-15 16:57:28.425 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3ecd267f
[DEBUG] 2022-08-15 16:57:28.425 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58ffcbd7
[DEBUG] 2022-08-15 16:57:28.459 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 16:57:28.460 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 16:57:28.460 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 16:57:28.461 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 16:57:28.461 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 16:57:28.462 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 16:57:28.462 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 16:57:28.463 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 16:57:28.463 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 16:57:28.464 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 16:57:28.464 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 16:57:28.464 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 16:57:28.465 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 16:57:28.465 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 16:57:28.469 [main] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 16:57:28.471 [main] pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak]
[INFO ] 2022-08-15 16:57:28.472 [main] pooling - HHH10001001: Connection properties: {user=postgres, password=javaReact1000}
[INFO ] 2022-08-15 16:57:28.472 [main] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2022-08-15 16:57:28.474 [main] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2022-08-15 16:57:28.474 [main] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2022-08-15 16:57:28.816 [main] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4
      major : 13
      minor : 4
[DEBUG] 2022-08-15 16:57:28.816 [main] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
[DEBUG] 2022-08-15 16:57:28.816 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-08-15 16:57:28.822 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 16:57:28.829 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-08-15 16:57:28.872 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37eeec90
[DEBUG] 2022-08-15 16:57:28.873 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@37eeec90
[DEBUG] 2022-08-15 16:57:28.873 [main] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4b2a01d4
[DEBUG] 2022-08-15 16:57:28.873 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21694e53] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@72b16078]
[DEBUG] 2022-08-15 16:57:28.888 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-08-15 16:57:28.894 [main] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 16:57:28.902 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 16:57:28.905 [main] EntityBinder - Import with entity name Member
[DEBUG] 2022-08-15 16:57:28.906 [main] EntityBinder - Bind entity com.revature.nabnak.member.Member on table members
[DEBUG] 2022-08-15 16:57:28.915 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 16:57:28.916 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 16:57:28.917 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 16:57:28.917 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2022-08-15 16:57:28.918 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:email]
[DEBUG] 2022-08-15 16:57:28.919 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2022-08-15 16:57:28.920 [main] PropertyBinder - Building property email
[DEBUG] 2022-08-15 16:57:28.921 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
[DEBUG] 2022-08-15 16:57:28.921 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=experienceMonths, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 16:57:28.921 [main] PropertyBinder - MetadataSourceProcessor property experienceMonths with lazy=false
[DEBUG] 2022-08-15 16:57:28.921 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:experienceMonths]
[DEBUG] 2022-08-15 16:57:28.921 [main] SimpleValueBinder - building SimpleValue for experienceMonths
[DEBUG] 2022-08-15 16:57:28.922 [main] PropertyBinder - Building property experienceMonths
[DEBUG] 2022-08-15 16:57:28.922 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=fullName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 16:57:28.922 [main] PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
[DEBUG] 2022-08-15 16:57:28.922 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:fullName]
[DEBUG] 2022-08-15 16:57:28.922 [main] SimpleValueBinder - building SimpleValue for fullName
[DEBUG] 2022-08-15 16:57:28.922 [main] PropertyBinder - Building property fullName
[DEBUG] 2022-08-15 16:57:28.922 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 16:57:28.922 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2022-08-15 16:57:28.923 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:password]
[DEBUG] 2022-08-15 16:57:28.923 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2022-08-15 16:57:28.923 [main] PropertyBinder - Building property password
[DEBUG] 2022-08-15 16:57:28.923 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=registrationDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 16:57:28.924 [main] PropertyBinder - MetadataSourceProcessor property registrationDate with lazy=false
[DEBUG] 2022-08-15 16:57:28.924 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:registrationDate]
[DEBUG] 2022-08-15 16:57:28.924 [main] SimpleValueBinder - building SimpleValue for registrationDate
[DEBUG] 2022-08-15 16:57:28.924 [main] PropertyBinder - Building property registrationDate
[DEBUG] 2022-08-15 16:57:28.926 [main] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 16:57:28.927 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 16:57:28.927 [main] EntityBinder - Import with entity name Card
[DEBUG] 2022-08-15 16:57:28.927 [main] EntityBinder - Bind entity com.revature.nabnak.card.Card on table cards
[DEBUG] 2022-08-15 16:57:28.927 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=cardId, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 16:57:28.928 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 16:57:28.928 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 16:57:28.928 [main] PropertyBinder - MetadataSourceProcessor property cardId with lazy=false
[DEBUG] 2022-08-15 16:57:28.928 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:cardId]
[DEBUG] 2022-08-15 16:57:28.928 [main] SimpleValueBinder - building SimpleValue for cardId
[DEBUG] 2022-08-15 16:57:28.928 [main] PropertyBinder - Building property cardId
[DEBUG] 2022-08-15 16:57:28.929 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cardId)]), cardId, assigned, , ...)
[DEBUG] 2022-08-15 16:57:28.929 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 16:57:28.929 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2022-08-15 16:57:28.929 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:description]
[DEBUG] 2022-08-15 16:57:28.929 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2022-08-15 16:57:28.929 [main] PropertyBinder - Building property description
[DEBUG] 2022-08-15 16:57:28.929 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=memberEmail, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 16:57:28.930 [main] PropertyBinder - MetadataSourceProcessor property memberEmail with lazy=false
[DEBUG] 2022-08-15 16:57:28.930 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:memberEmail]
[DEBUG] 2022-08-15 16:57:28.930 [main] SimpleValueBinder - building SimpleValue for memberEmail
[DEBUG] 2022-08-15 16:57:28.930 [main] PropertyBinder - Building property memberEmail
[DEBUG] 2022-08-15 16:57:28.930 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=points, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 16:57:28.930 [main] PropertyBinder - MetadataSourceProcessor property points with lazy=false
[DEBUG] 2022-08-15 16:57:28.930 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:points]
[DEBUG] 2022-08-15 16:57:28.930 [main] SimpleValueBinder - building SimpleValue for points
[DEBUG] 2022-08-15 16:57:28.930 [main] PropertyBinder - Building property points
[DEBUG] 2022-08-15 16:57:28.931 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 16:57:28.931 [main] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2022-08-15 16:57:28.931 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:status]
[DEBUG] 2022-08-15 16:57:28.931 [main] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2022-08-15 16:57:28.931 [main] PropertyBinder - Building property status
[DEBUG] 2022-08-15 16:57:28.931 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=tech, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 16:57:28.931 [main] PropertyBinder - MetadataSourceProcessor property tech with lazy=false
[DEBUG] 2022-08-15 16:57:28.931 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:tech]
[DEBUG] 2022-08-15 16:57:28.931 [main] SimpleValueBinder - building SimpleValue for tech
[DEBUG] 2022-08-15 16:57:28.932 [main] PropertyBinder - Building property tech
[DEBUG] 2022-08-15 16:57:28.932 [main] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 16:57:28.932 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 16:57:28.932 [main] EntityBinder - Import with entity name Team
[DEBUG] 2022-08-15 16:57:28.932 [main] EntityBinder - Bind entity com.revature.nabnak.team.Team on table teams
[DEBUG] 2022-08-15 16:57:28.933 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 16:57:28.933 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 16:57:28.933 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 16:57:28.933 [main] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2022-08-15 16:57:28.933 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamName]
[DEBUG] 2022-08-15 16:57:28.933 [main] SimpleValueBinder - building SimpleValue for teamName
[DEBUG] 2022-08-15 16:57:28.933 [main] PropertyBinder - Building property teamName
[DEBUG] 2022-08-15 16:57:28.934 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(teamName)]), teamName, assigned, , ...)
[DEBUG] 2022-08-15 16:57:28.934 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamSize, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 16:57:28.934 [main] PropertyBinder - MetadataSourceProcessor property teamSize with lazy=false
[DEBUG] 2022-08-15 16:57:28.934 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamSize]
[DEBUG] 2022-08-15 16:57:28.934 [main] SimpleValueBinder - building SimpleValue for teamSize
[DEBUG] 2022-08-15 16:57:28.934 [main] PropertyBinder - Building property teamSize
[DEBUG] 2022-08-15 16:57:28.934 [main] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 16:57:28.934 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 16:57:28.935 [main] EntityBinder - Import with entity name Board
[DEBUG] 2022-08-15 16:57:28.935 [main] EntityBinder - Bind entity com.revature.nabnak.board.Board on table boards
[DEBUG] 2022-08-15 16:57:28.935 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(boards), mappingColumn=board_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 16:57:28.935 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 16:57:28.935 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 16:57:28.935 [main] PropertyBinder - MetadataSourceProcessor property board_id with lazy=false
[DEBUG] 2022-08-15 16:57:28.935 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.board.Board:board_id]
[DEBUG] 2022-08-15 16:57:28.935 [main] SimpleValueBinder - building SimpleValue for board_id
[DEBUG] 2022-08-15 16:57:28.936 [main] PropertyBinder - Building property board_id
[DEBUG] 2022-08-15 16:57:28.936 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(board_id)]), board_id, assigned, , ...)
[DEBUG] 2022-08-15 16:57:28.936 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2022-08-15 16:57:28.936 [main] SimpleValueBinder - Starting fillSimpleValue for experienceMonths
[DEBUG] 2022-08-15 16:57:28.937 [main] SimpleValueBinder - Starting fillSimpleValue for fullName
[DEBUG] 2022-08-15 16:57:28.937 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2022-08-15 16:57:28.937 [main] SimpleValueBinder - Starting fillSimpleValue for registrationDate
[DEBUG] 2022-08-15 16:57:28.937 [main] SimpleValueBinder - Starting fillSimpleValue for cardId
[DEBUG] 2022-08-15 16:57:28.937 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2022-08-15 16:57:28.937 [main] SimpleValueBinder - Starting fillSimpleValue for memberEmail
[DEBUG] 2022-08-15 16:57:28.937 [main] SimpleValueBinder - Starting fillSimpleValue for points
[DEBUG] 2022-08-15 16:57:28.937 [main] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2022-08-15 16:57:28.937 [main] SimpleValueBinder - Starting fillSimpleValue for tech
[DEBUG] 2022-08-15 16:57:28.937 [main] SimpleValueBinder - Starting fillSimpleValue for teamName
[DEBUG] 2022-08-15 16:57:28.938 [main] SimpleValueBinder - Starting fillSimpleValue for teamSize
[DEBUG] 2022-08-15 16:57:28.938 [main] SimpleValueBinder - Starting fillSimpleValue for board_id
[DEBUG] 2022-08-15 16:57:28.938 [main] PrimaryKey - Forcing column [email] to be non-null as it is part of the primary key for table [members]
[DEBUG] 2022-08-15 16:57:28.938 [main] PrimaryKey - Forcing column [cardid] to be non-null as it is part of the primary key for table [cards]
[DEBUG] 2022-08-15 16:57:28.939 [main] PrimaryKey - Forcing column [teamname] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2022-08-15 16:57:28.939 [main] PrimaryKey - Forcing column [board_id] to be non-null as it is part of the primary key for table [boards]
[DEBUG] 2022-08-15 16:57:28.953 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2022-08-15 16:57:28.954 [main] Settings - SessionFactory name : null
[DEBUG] 2022-08-15 16:57:28.954 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-08-15 16:57:28.954 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-08-15 16:57:28.954 [main] Settings - Statistics: disabled
[DEBUG] 2022-08-15 16:57:28.954 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-08-15 16:57:28.954 [main] Settings - Default entity-mode: pojo
[DEBUG] 2022-08-15 16:57:28.954 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-08-15 16:57:28.954 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-08-15 16:57:28.954 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-08-15 16:57:28.954 [main] Settings - Default batch fetch size: -1
[DEBUG] 2022-08-15 16:57:28.954 [main] Settings - Maximum outer join fetch depth: null
[DEBUG] 2022-08-15 16:57:28.955 [main] Settings - Default null ordering: NONE
[DEBUG] 2022-08-15 16:57:28.955 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-08-15 16:57:28.955 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-08-15 16:57:28.955 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-08-15 16:57:28.955 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-08-15 16:57:28.955 [main] Settings - Query language substitutions: {}
[DEBUG] 2022-08-15 16:57:28.955 [main] Settings - Named query checking : enabled
[DEBUG] 2022-08-15 16:57:28.955 [main] Settings - Second-level cache: disabled
[DEBUG] 2022-08-15 16:57:28.955 [main] Settings - Second-level query cache: disabled
[DEBUG] 2022-08-15 16:57:28.955 [main] Settings - Second-level query cache factory: null
[DEBUG] 2022-08-15 16:57:28.955 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2022-08-15 16:57:28.955 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-08-15 16:57:28.955 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-08-15 16:57:28.956 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-08-15 16:57:28.956 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-08-15 16:57:28.956 [main] Settings - JDBC batch size: 15
[DEBUG] 2022-08-15 16:57:28.956 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-08-15 16:57:28.956 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2022-08-15 16:57:28.956 [main] Settings - Wrap result sets: disabled
[DEBUG] 2022-08-15 16:57:28.956 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-08-15 16:57:28.956 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2022-08-15 16:57:28.956 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-08-15 16:57:28.956 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-08-15 16:57:28.956 [main] Settings - JPA compliance - query : disabled
[DEBUG] 2022-08-15 16:57:28.956 [main] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2022-08-15 16:57:28.956 [main] Settings - JPA compliance - lists : disabled
[DEBUG] 2022-08-15 16:57:28.956 [main] Settings - JPA compliance - transactions : disabled
[DEBUG] 2022-08-15 16:57:28.978 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 16:57:28.979 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 16:57:28.985 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-08-15 16:57:28.985 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, java.class.path=/home/cjester/.m2/repository/org/junit/platform/junit-platform-launcher/1.8.2/junit-platform-launcher-1.8.2.jar:/home/cjester/.m2/repository/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar:/home/cjester/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar:/snap/intellij-idea-community/381/lib/idea_rt.jar:/snap/intellij-idea-community/381/plugins/junit/lib/junit5-rt.jar:/snap/intellij-idea-community/381/plugins/junit/lib/junit-rt.jar:/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/ext/cldrdata.jar:/opt/jdk8u332-b09/jre/lib/ext/dnsns.jar:/opt/jdk8u332-b09/jre/lib/ext/jaccess.jar:/opt/jdk8u332-b09/jre/lib/ext/localedata.jar:/opt/jdk8u332-b09/jre/lib/ext/nashorn.jar:/opt/jdk8u332-b09/jre/lib/ext/sunec.jar:/opt/jdk8u332-b09/jre/lib/ext/sunjce_provider.jar:/opt/jdk8u332-b09/jre/lib/ext/sunpkcs11.jar:/opt/jdk8u332-b09/jre/lib/ext/zipfs.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/management-agent.jar:/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/target/test-classes:/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/target/classes:/home/cjester/.m2/repository/org/postgresql/postgresql/42.3.3/postgresql-42.3.3.jar:/home/cjester/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/home/cjester/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar:/home/cjester/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/cjester/.m2/repository/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar:/home/cjester/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/cjester/.m2/repository/org/mockito/mockito-core/4.6.1/mockito-core-4.6.1.jar:/home/cjester/.m2/repository/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10.jar:/home/cjester/.m2/repository/net/bytebuddy/byte-buddy-agent/1.12.10/byte-buddy-agent-1.12.10.jar:/home/cjester/.m2/repository/org/objenesis/objenesis/3.2/objenesis-3.2.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.23/tomcat-embed-core-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.23/tomcat-annotations-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.23/tomcat-embed-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.23/tomcat-embed-el-8.5.23.jar:/home/cjester/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper/8.5.23/tomcat-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.5.23/tomcat-servlet-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-juli/8.5.23/tomcat-juli-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-el-api/8.5.23/tomcat-el-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-api/8.5.23/tomcat-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util-scan/8.5.23/tomcat-util-scan-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util/8.5.23/tomcat-util-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper-el/8.5.23/tomcat-jasper-el-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jsp-api/8.5.23/tomcat-jsp-api-8.5.23.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/home/cjester/.m2/repository/org/hibernate/hibernate-core/5.6.9.Final/hibernate-core-5.6.9.Final.jar:/home/cjester/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/home/cjester/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/cjester/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/cjester/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/cjester/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/home/cjester/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/cjester/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/cjester/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/home/cjester/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/cjester/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/cjester/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/cjester/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/snap/intellij-idea-community/381/lib/idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://adoptium.net/, user.timezone=America/New_York, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/opt/jdk8u332-b09/jre/lib/amd64, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.revature.nabnak.util.HibernateUtilTestSuite, sun.cpu.endian=little, user.home=/home/cjester, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/opt/jdk8u332-b09/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/opt/jdk8u332-b09/jre/lib/sunrsasign.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_332-b09, user.name=cjester, path.separator=:, hibernate.connection.username=****, os.version=5.15.0-46-generic, java.endorsed.dirs=/opt/jdk8u332-b09/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/tmp, java.version=1.8.0_332, user.dir=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3249a1ce, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Temurin, java.vm.version=25.332-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/opt/jdk8u332-b09/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[DEBUG] 2022-08-15 16:57:28.991 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-08-15 16:57:28.991 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-08-15 16:57:28.991 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21694e53] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@89c65d5]
[DEBUG] 2022-08-15 16:57:29.020 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 16:57:29.020 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 16:57:29.108 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 16:57:29.108 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 16:57:29.112 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 16:57:29.112 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 16:57:29.121 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 16:57:29.121 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 16:57:29.127 [main] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 16:57:29.127 [main] AbstractEntityPersister -  Version select: select email from members where email =?
[DEBUG] 2022-08-15 16:57:29.127 [main] AbstractEntityPersister -  Snapshot select: select member_.email, member_.experienceMonths as experien2_2_, member_.fullName as fullname3_2_, member_.password as password4_2_, member_.registrationDate as registra5_2_ from members member_ where member_.email=?
[DEBUG] 2022-08-15 16:57:29.127 [main] AbstractEntityPersister -  Insert 0: insert into members (experienceMonths, fullName, password, registrationDate, email) values (?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 16:57:29.128 [main] AbstractEntityPersister -  Update 0: update members set experienceMonths=?, fullName=?, password=?, registrationDate=? where email=?
[DEBUG] 2022-08-15 16:57:29.128 [main] AbstractEntityPersister -  Delete 0: delete from members where email=?
[DEBUG] 2022-08-15 16:57:29.139 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a262d6]
[DEBUG] 2022-08-15 16:57:29.140 [main] MetamodelGraphWalker - Visiting attribute path : experienceMonths
[DEBUG] 2022-08-15 16:57:29.140 [main] MetamodelGraphWalker - Visiting attribute path : fullName
[DEBUG] 2022-08-15 16:57:29.140 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-08-15 16:57:29.140 [main] MetamodelGraphWalker - Visiting attribute path : registrationDate
[DEBUG] 2022-08-15 16:57:29.140 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 16:57:29.145 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 16:57:29.147 [main] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.member.Member)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.member.Member, querySpaceUid=<gen:0>, path=com.revature.nabnak.member.Member)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.member.Member)
          - SQL table alias mapping - member0_
          - alias suffix - 0_
          - suffixed key columns - {email1_2_0_}

[DEBUG] 2022-08-15 16:57:29.148 [main] EntityLoader - Static select for entity com.revature.nabnak.member.Member [NONE]: select member0_.email as email1_2_0_, member0_.experienceMonths as experien2_2_0_, member0_.fullName as fullname3_2_0_, member0_.password as password4_2_0_, member0_.registrationDate as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 16:57:29.148 [main] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 16:57:29.148 [main] AbstractEntityPersister -  Version select: select teamName from teams where teamName =?
[DEBUG] 2022-08-15 16:57:29.148 [main] AbstractEntityPersister -  Snapshot select: select team_.teamName, team_.teamSize as teamsize2_3_ from teams team_ where team_.teamName=?
[DEBUG] 2022-08-15 16:57:29.149 [main] AbstractEntityPersister -  Insert 0: insert into teams (teamSize, teamName) values (?, ?)
[DEBUG] 2022-08-15 16:57:29.149 [main] AbstractEntityPersister -  Update 0: update teams set teamSize=? where teamName=?
[DEBUG] 2022-08-15 16:57:29.149 [main] AbstractEntityPersister -  Delete 0: delete from teams where teamName=?
[DEBUG] 2022-08-15 16:57:29.149 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a480135]
[DEBUG] 2022-08-15 16:57:29.149 [main] MetamodelGraphWalker - Visiting attribute path : teamSize
[DEBUG] 2022-08-15 16:57:29.149 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 16:57:29.149 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 16:57:29.149 [main] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.team.Team)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.team.Team, querySpaceUid=<gen:0>, path=com.revature.nabnak.team.Team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.team.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamname1_3_0_}

[DEBUG] 2022-08-15 16:57:29.150 [main] EntityLoader - Static select for entity com.revature.nabnak.team.Team [NONE]: select team0_.teamName as teamname1_3_0_, team0_.teamSize as teamsize2_3_0_ from teams team0_ where team0_.teamName=?
[DEBUG] 2022-08-15 16:57:29.150 [main] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 16:57:29.150 [main] AbstractEntityPersister -  Version select: select cardId from cards where cardId =?
[DEBUG] 2022-08-15 16:57:29.150 [main] AbstractEntityPersister -  Snapshot select: select card_.cardId, card_.description as descript2_1_, card_.memberEmail as memberem3_1_, card_.points as points4_1_, card_.status as status5_1_, card_.tech as tech6_1_ from cards card_ where card_.cardId=?
[DEBUG] 2022-08-15 16:57:29.150 [main] AbstractEntityPersister -  Insert 0: insert into cards (description, memberEmail, points, status, tech, cardId) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 16:57:29.150 [main] AbstractEntityPersister -  Update 0: update cards set description=?, memberEmail=?, points=?, status=?, tech=? where cardId=?
[DEBUG] 2022-08-15 16:57:29.150 [main] AbstractEntityPersister -  Delete 0: delete from cards where cardId=?
[DEBUG] 2022-08-15 16:57:29.150 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@681e144]
[DEBUG] 2022-08-15 16:57:29.150 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-08-15 16:57:29.150 [main] MetamodelGraphWalker - Visiting attribute path : memberEmail
[DEBUG] 2022-08-15 16:57:29.151 [main] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2022-08-15 16:57:29.151 [main] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2022-08-15 16:57:29.151 [main] MetamodelGraphWalker - Visiting attribute path : tech
[DEBUG] 2022-08-15 16:57:29.151 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 16:57:29.151 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 16:57:29.151 [main] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.card.Card)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.card.Card, querySpaceUid=<gen:0>, path=com.revature.nabnak.card.Card)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.card.Card)
          - SQL table alias mapping - card0_
          - alias suffix - 0_
          - suffixed key columns - {cardid1_1_0_}

[DEBUG] 2022-08-15 16:57:29.151 [main] EntityLoader - Static select for entity com.revature.nabnak.card.Card [NONE]: select card0_.cardId as cardid1_1_0_, card0_.description as descript2_1_0_, card0_.memberEmail as memberem3_1_0_, card0_.points as points4_1_0_, card0_.status as status5_1_0_, card0_.tech as tech6_1_0_ from cards card0_ where card0_.cardId=?
[DEBUG] 2022-08-15 16:57:29.151 [main] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 16:57:29.151 [main] AbstractEntityPersister -  Version select: select board_id from boards where board_id =?
[DEBUG] 2022-08-15 16:57:29.152 [main] AbstractEntityPersister -  Snapshot select: select board_.board_id from boards board_ where board_.board_id=?
[DEBUG] 2022-08-15 16:57:29.152 [main] AbstractEntityPersister -  Insert 0: insert into boards (board_id) values (?)
[DEBUG] 2022-08-15 16:57:29.152 [main] AbstractEntityPersister -  Update 0: null
[DEBUG] 2022-08-15 16:57:29.152 [main] AbstractEntityPersister -  Delete 0: delete from boards where board_id=?
[DEBUG] 2022-08-15 16:57:29.152 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72ee5d84]
[DEBUG] 2022-08-15 16:57:29.152 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 16:57:29.152 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 16:57:29.152 [main] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.board.Board)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.board.Board, querySpaceUid=<gen:0>, path=com.revature.nabnak.board.Board)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.board.Board)
          - SQL table alias mapping - board0_
          - alias suffix - 0_
          - suffixed key columns - {board_id1_0_0_}

[DEBUG] 2022-08-15 16:57:29.152 [main] EntityLoader - Static select for entity com.revature.nabnak.board.Board [NONE]: select board0_.board_id as board_id1_0_0_ from boards board0_ where board0_.board_id=?
[INFO ] 2022-08-15 16:57:29.173 [main] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@9d7ccfe] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 2022-08-15 16:57:29.226 [main] Table - No alter strings for table : boards
[DEBUG] 2022-08-15 16:57:29.226 [main] Table - No alter strings for table : cards
[DEBUG] 2022-08-15 16:57:29.227 [main] SQL - alter table if exists members add column experienceMonths int4 not null
[WARN ] 2022-08-15 16:57:29.241 [main] ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table if exists members add column experienceMonths int4 not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table if exists members add column experienceMonths int4 not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:581) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:602) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:314) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:78) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:728) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at com.revature.nabnak.util.HibernateUtil.getSession(HibernateUtil.java:39) ~[classes/:?]
	at com.revature.nabnak.util.HibernateUtilTestSuite.test_getConnection_returnValidConnection_givenProvidedCredentialsAreCorrect(HibernateUtilTestSuite.java:17) ~[test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_332]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_332]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_332]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_332]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725) ~[junit-platform-commons-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1259) ~[?:1.8.0_332]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1259) ~[?:1.8.0_332]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107) ~[junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) [junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) [junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) [junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) [junit-platform-launcher-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53) [junit-platform-launcher-1.8.2.jar:1.8.2]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
Caused by: org.postgresql.util.PSQLException: ERROR: column "experiencemonths" of relation "members" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:329) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:315) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:291) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:286) ~[postgresql-42.3.3.jar:42.3.3]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	... 82 more
[DEBUG] 2022-08-15 16:57:29.245 [main] Table - No alter strings for table : teams
[DEBUG] 2022-08-15 16:57:29.245 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-08-15 16:57:29.246 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-08-15 16:57:29.248 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-08-15 16:57:29.248 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-08-15 16:57:29.248 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-08-15 16:57:29.248 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-08-15 16:57:29.250 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 16:57:29.253 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@59c33386
[DEBUG] 2022-08-15 16:57:29.254 [main] SessionFactoryRegistry - Registering SessionFactory: 889202d1-20aa-4623-9852-8117a51fecc0 (<unnamed>)
[DEBUG] 2022-08-15 16:57:29.254 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-08-15 16:57:29.326 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-08-15 17:14:53.301 [http-nio-8080-exec-1] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 17:14:53.306 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:14:53.307 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:14:53.308 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 17:14:53.318 [http-nio-8080-exec-1] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-08-15 17:14:53.319 [http-nio-8080-exec-1] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.postgresql.Driver, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 17:14:53.387 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:14:53.387 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:14:53.387 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 17:14:53.390 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 17:14:53.390 [http-nio-8080-exec-1] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 17:14:53.394 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 17:14:53.395 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 17:14:53.402 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 17:14:53.416 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6ffaee28
[DEBUG] 2022-08-15 17:14:53.417 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6ffaee28
[DEBUG] 2022-08-15 17:14:53.417 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6ffaee28
[DEBUG] 2022-08-15 17:14:53.417 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b1894ef
[DEBUG] 2022-08-15 17:14:53.417 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@23bc7f75
[DEBUG] 2022-08-15 17:14:53.418 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@37ab7195
[DEBUG] 2022-08-15 17:14:53.418 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5f475a2f
[DEBUG] 2022-08-15 17:14:53.418 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5f475a2f
[DEBUG] 2022-08-15 17:14:53.418 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5f475a2f
[DEBUG] 2022-08-15 17:14:53.419 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@431d45aa
[DEBUG] 2022-08-15 17:14:53.419 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@431d45aa
[DEBUG] 2022-08-15 17:14:53.419 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@431d45aa
[DEBUG] 2022-08-15 17:14:53.420 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67b7eb54
[DEBUG] 2022-08-15 17:14:53.420 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67b7eb54
[DEBUG] 2022-08-15 17:14:53.420 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67b7eb54
[DEBUG] 2022-08-15 17:14:53.420 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6e97086f
[DEBUG] 2022-08-15 17:14:53.420 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6e97086f
[DEBUG] 2022-08-15 17:14:53.421 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6e97086f
[DEBUG] 2022-08-15 17:14:53.421 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7f66ab36
[DEBUG] 2022-08-15 17:14:53.421 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7f66ab36
[DEBUG] 2022-08-15 17:14:53.421 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f66ab36
[DEBUG] 2022-08-15 17:14:53.422 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@56854fa5
[DEBUG] 2022-08-15 17:14:53.422 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@56854fa5
[DEBUG] 2022-08-15 17:14:53.422 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56854fa5
[DEBUG] 2022-08-15 17:14:53.422 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@b6d923a
[DEBUG] 2022-08-15 17:14:53.422 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@b6d923a
[DEBUG] 2022-08-15 17:14:53.423 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@b6d923a
[DEBUG] 2022-08-15 17:14:53.423 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@570448e1
[DEBUG] 2022-08-15 17:14:53.423 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@570448e1
[DEBUG] 2022-08-15 17:14:53.424 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3aeb795e
[DEBUG] 2022-08-15 17:14:53.424 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3aeb795e
[DEBUG] 2022-08-15 17:14:53.424 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@63b51317
[DEBUG] 2022-08-15 17:14:53.424 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@63b51317
[DEBUG] 2022-08-15 17:14:53.424 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23122f7b
[DEBUG] 2022-08-15 17:14:53.425 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6157a14f
[DEBUG] 2022-08-15 17:14:53.425 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@19cf5ab6
[DEBUG] 2022-08-15 17:14:53.425 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@19cf5ab6
[DEBUG] 2022-08-15 17:14:53.426 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@39f9c612
[DEBUG] 2022-08-15 17:14:53.426 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@39f9c612
[DEBUG] 2022-08-15 17:14:53.432 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7723b2ad
[DEBUG] 2022-08-15 17:14:53.432 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7723b2ad
[DEBUG] 2022-08-15 17:14:53.433 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1068c0c1
[DEBUG] 2022-08-15 17:14:53.433 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1068c0c1
[DEBUG] 2022-08-15 17:14:53.434 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@177f3feb
[DEBUG] 2022-08-15 17:14:53.434 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@177f3feb
[DEBUG] 2022-08-15 17:14:53.434 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@16b9c2c0
[DEBUG] 2022-08-15 17:14:53.434 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@16b9c2c0
[DEBUG] 2022-08-15 17:14:53.435 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@784a756b
[DEBUG] 2022-08-15 17:14:53.435 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@784a756b
[DEBUG] 2022-08-15 17:14:53.436 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1393e4d3
[DEBUG] 2022-08-15 17:14:53.436 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1393e4d3
[DEBUG] 2022-08-15 17:14:53.438 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a1ae529
[DEBUG] 2022-08-15 17:14:53.438 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a1ae529
[DEBUG] 2022-08-15 17:14:53.438 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@54ada204
[DEBUG] 2022-08-15 17:14:53.438 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@54ada204
[DEBUG] 2022-08-15 17:14:53.439 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@b1d730f
[DEBUG] 2022-08-15 17:14:53.439 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@b1d730f
[DEBUG] 2022-08-15 17:14:53.440 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4835fea
[DEBUG] 2022-08-15 17:14:53.440 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4835fea
[DEBUG] 2022-08-15 17:14:53.440 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4835fea
[DEBUG] 2022-08-15 17:14:53.440 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@74089a01
[DEBUG] 2022-08-15 17:14:53.441 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@10381840
[DEBUG] 2022-08-15 17:14:53.441 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10381840
[DEBUG] 2022-08-15 17:14:53.441 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10381840
[DEBUG] 2022-08-15 17:14:53.441 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1dd527a2
[DEBUG] 2022-08-15 17:14:53.442 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@11d1b0d5
[DEBUG] 2022-08-15 17:14:53.442 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6be8561a
[DEBUG] 2022-08-15 17:14:53.442 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6be8561a
[DEBUG] 2022-08-15 17:14:53.443 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@439122b
[DEBUG] 2022-08-15 17:14:53.443 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@439122b
[DEBUG] 2022-08-15 17:14:53.443 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@30049b21
[DEBUG] 2022-08-15 17:14:53.443 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@30049b21
[DEBUG] 2022-08-15 17:14:53.444 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@49fc074d
[DEBUG] 2022-08-15 17:14:53.444 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49fc074d
[DEBUG] 2022-08-15 17:14:53.444 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2ea5e6f0
[DEBUG] 2022-08-15 17:14:53.444 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2ea5e6f0
[DEBUG] 2022-08-15 17:14:53.444 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17dded53
[DEBUG] 2022-08-15 17:14:53.445 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@18f5ed05
[DEBUG] 2022-08-15 17:14:53.445 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@18f5ed05
[DEBUG] 2022-08-15 17:14:53.445 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@18f5ed05
[DEBUG] 2022-08-15 17:14:53.446 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ab470be
[DEBUG] 2022-08-15 17:14:53.446 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ab470be
[DEBUG] 2022-08-15 17:14:53.446 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ab470be
[DEBUG] 2022-08-15 17:14:53.446 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4c4b6d3b
[DEBUG] 2022-08-15 17:14:53.446 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3724056d
[DEBUG] 2022-08-15 17:14:53.447 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6797accb
[DEBUG] 2022-08-15 17:14:53.447 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6797accb
[DEBUG] 2022-08-15 17:14:53.447 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6797accb
[DEBUG] 2022-08-15 17:14:53.447 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76fb96ea
[DEBUG] 2022-08-15 17:14:53.448 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76fb96ea
[DEBUG] 2022-08-15 17:14:53.448 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76fb96ea
[DEBUG] 2022-08-15 17:14:53.448 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@27067c2b
[DEBUG] 2022-08-15 17:14:53.448 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1eef3f8c
[DEBUG] 2022-08-15 17:14:53.449 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@d3b83f5
[DEBUG] 2022-08-15 17:14:53.449 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d3b83f5
[DEBUG] 2022-08-15 17:14:53.449 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64f711bd
[DEBUG] 2022-08-15 17:14:53.450 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@748e4d37
[DEBUG] 2022-08-15 17:14:53.450 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@748e4d37
[DEBUG] 2022-08-15 17:14:53.450 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@45afda61
[DEBUG] 2022-08-15 17:14:53.450 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@45afda61
[DEBUG] 2022-08-15 17:14:53.451 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7c5a110f
[DEBUG] 2022-08-15 17:14:53.451 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@67bbafd1
[DEBUG] 2022-08-15 17:14:53.451 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@57f397b5
[DEBUG] 2022-08-15 17:14:53.453 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@71eac0e1
[DEBUG] 2022-08-15 17:14:53.453 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@71eac0e1
[DEBUG] 2022-08-15 17:14:53.453 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@10f0d34b
[DEBUG] 2022-08-15 17:14:53.453 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37bae47c
[DEBUG] 2022-08-15 17:14:53.453 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7b7d0111
[DEBUG] 2022-08-15 17:14:53.453 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@394914f4
[DEBUG] 2022-08-15 17:14:53.453 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f35f21d
[DEBUG] 2022-08-15 17:14:53.453 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4f4c6a83
[DEBUG] 2022-08-15 17:14:53.454 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5c2a8ff2
[DEBUG] 2022-08-15 17:14:53.454 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2db5ce37
[DEBUG] 2022-08-15 17:14:53.467 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 17:14:53.467 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 17:14:53.468 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:14:53.468 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:14:53.468 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 17:14:53.469 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 17:14:53.469 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 17:14:53.469 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:14:53.470 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 17:14:53.470 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 17:14:53.470 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 17:14:53.471 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 17:14:53.471 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:14:53.471 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 17:14:53.474 [http-nio-8080-exec-1] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 17:14:53.476 [http-nio-8080-exec-1] pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak]
[INFO ] 2022-08-15 17:14:53.476 [http-nio-8080-exec-1] pooling - HHH10001001: Connection properties: {user=postgres, password=javaReact1000}
[INFO ] 2022-08-15 17:14:53.476 [http-nio-8080-exec-1] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2022-08-15 17:14:53.478 [http-nio-8080-exec-1] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2022-08-15 17:14:53.478 [http-nio-8080-exec-1] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2022-08-15 17:14:53.777 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4
      major : 13
      minor : 4
[DEBUG] 2022-08-15 17:14:53.777 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
[DEBUG] 2022-08-15 17:14:53.777 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-08-15 17:14:53.783 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 17:14:53.789 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-08-15 17:14:53.834 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@57e40c20
[DEBUG] 2022-08-15 17:14:53.834 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@57e40c20
[DEBUG] 2022-08-15 17:14:53.834 [http-nio-8080-exec-1] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2ea5e6f0
[DEBUG] 2022-08-15 17:14:53.835 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6abcdadd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@237a557c]
[DEBUG] 2022-08-15 17:14:53.849 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-08-15 17:14:53.855 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:14:53.863 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:14:53.865 [http-nio-8080-exec-1] EntityBinder - Import with entity name Member
[DEBUG] 2022-08-15 17:14:53.866 [http-nio-8080-exec-1] EntityBinder - Bind entity com.revature.nabnak.member.Member on table members
[DEBUG] 2022-08-15 17:14:53.874 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:14:53.875 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:14:53.875 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:14:53.875 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2022-08-15 17:14:53.876 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:email]
[DEBUG] 2022-08-15 17:14:53.877 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2022-08-15 17:14:53.878 [http-nio-8080-exec-1] PropertyBinder - Building property email
[DEBUG] 2022-08-15 17:14:53.879 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
[DEBUG] 2022-08-15 17:14:53.879 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=experienceMonths, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:14:53.879 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property experienceMonths with lazy=false
[DEBUG] 2022-08-15 17:14:53.879 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:experienceMonths]
[DEBUG] 2022-08-15 17:14:53.879 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:14:53.880 [http-nio-8080-exec-1] PropertyBinder - Building property experienceMonths
[DEBUG] 2022-08-15 17:14:53.880 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=fullName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:14:53.880 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
[DEBUG] 2022-08-15 17:14:53.880 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:fullName]
[DEBUG] 2022-08-15 17:14:53.880 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for fullName
[DEBUG] 2022-08-15 17:14:53.880 [http-nio-8080-exec-1] PropertyBinder - Building property fullName
[DEBUG] 2022-08-15 17:14:53.880 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:14:53.880 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2022-08-15 17:14:53.880 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:password]
[DEBUG] 2022-08-15 17:14:53.880 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2022-08-15 17:14:53.881 [http-nio-8080-exec-1] PropertyBinder - Building property password
[DEBUG] 2022-08-15 17:14:53.881 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=registrationDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:14:53.882 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property registrationDate with lazy=false
[DEBUG] 2022-08-15 17:14:53.882 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:registrationDate]
[DEBUG] 2022-08-15 17:14:53.882 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for registrationDate
[DEBUG] 2022-08-15 17:14:53.882 [http-nio-8080-exec-1] PropertyBinder - Building property registrationDate
[DEBUG] 2022-08-15 17:14:53.886 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:14:53.886 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:14:53.886 [http-nio-8080-exec-1] EntityBinder - Import with entity name Card
[DEBUG] 2022-08-15 17:14:53.886 [http-nio-8080-exec-1] EntityBinder - Bind entity com.revature.nabnak.card.Card on table cards
[DEBUG] 2022-08-15 17:14:53.887 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=cardId, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:14:53.887 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:14:53.887 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:14:53.887 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property cardId with lazy=false
[DEBUG] 2022-08-15 17:14:53.887 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:cardId]
[DEBUG] 2022-08-15 17:14:53.887 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for cardId
[DEBUG] 2022-08-15 17:14:53.887 [http-nio-8080-exec-1] PropertyBinder - Building property cardId
[DEBUG] 2022-08-15 17:14:53.887 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cardId)]), cardId, assigned, , ...)
[DEBUG] 2022-08-15 17:14:53.887 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:14:53.888 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2022-08-15 17:14:53.888 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:description]
[DEBUG] 2022-08-15 17:14:53.888 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2022-08-15 17:14:53.888 [http-nio-8080-exec-1] PropertyBinder - Building property description
[DEBUG] 2022-08-15 17:14:53.888 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=memberEmail, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:14:53.888 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property memberEmail with lazy=false
[DEBUG] 2022-08-15 17:14:53.888 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:memberEmail]
[DEBUG] 2022-08-15 17:14:53.888 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for memberEmail
[DEBUG] 2022-08-15 17:14:53.888 [http-nio-8080-exec-1] PropertyBinder - Building property memberEmail
[DEBUG] 2022-08-15 17:14:53.888 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=points, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:14:53.888 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property points with lazy=false
[DEBUG] 2022-08-15 17:14:53.888 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:points]
[DEBUG] 2022-08-15 17:14:53.888 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for points
[DEBUG] 2022-08-15 17:14:53.889 [http-nio-8080-exec-1] PropertyBinder - Building property points
[DEBUG] 2022-08-15 17:14:53.889 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:14:53.889 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2022-08-15 17:14:53.889 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:status]
[DEBUG] 2022-08-15 17:14:53.889 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2022-08-15 17:14:53.889 [http-nio-8080-exec-1] PropertyBinder - Building property status
[DEBUG] 2022-08-15 17:14:53.889 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=tech, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:14:53.889 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property tech with lazy=false
[DEBUG] 2022-08-15 17:14:53.889 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:tech]
[DEBUG] 2022-08-15 17:14:53.889 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for tech
[DEBUG] 2022-08-15 17:14:53.889 [http-nio-8080-exec-1] PropertyBinder - Building property tech
[DEBUG] 2022-08-15 17:14:53.890 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:14:53.890 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:14:53.890 [http-nio-8080-exec-1] EntityBinder - Import with entity name Team
[DEBUG] 2022-08-15 17:14:53.890 [http-nio-8080-exec-1] EntityBinder - Bind entity com.revature.nabnak.team.Team on table teams
[DEBUG] 2022-08-15 17:14:53.890 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:14:53.890 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:14:53.891 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:14:53.891 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2022-08-15 17:14:53.891 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamName]
[DEBUG] 2022-08-15 17:14:53.891 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for teamName
[DEBUG] 2022-08-15 17:14:53.891 [http-nio-8080-exec-1] PropertyBinder - Building property teamName
[DEBUG] 2022-08-15 17:14:53.891 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(teamName)]), teamName, assigned, , ...)
[DEBUG] 2022-08-15 17:14:53.891 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamSize, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:14:53.891 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property teamSize with lazy=false
[DEBUG] 2022-08-15 17:14:53.891 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamSize]
[DEBUG] 2022-08-15 17:14:53.891 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for teamSize
[DEBUG] 2022-08-15 17:14:53.891 [http-nio-8080-exec-1] PropertyBinder - Building property teamSize
[DEBUG] 2022-08-15 17:14:53.892 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:14:53.892 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:14:53.892 [http-nio-8080-exec-1] EntityBinder - Import with entity name Board
[DEBUG] 2022-08-15 17:14:53.892 [http-nio-8080-exec-1] EntityBinder - Bind entity com.revature.nabnak.board.Board on table boards
[DEBUG] 2022-08-15 17:14:53.892 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(boards), mappingColumn=board_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:14:53.892 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:14:53.892 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:14:53.892 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property board_id with lazy=false
[DEBUG] 2022-08-15 17:14:53.892 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.board.Board:board_id]
[DEBUG] 2022-08-15 17:14:53.892 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for board_id
[DEBUG] 2022-08-15 17:14:53.892 [http-nio-8080-exec-1] PropertyBinder - Building property board_id
[DEBUG] 2022-08-15 17:14:53.893 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(board_id)]), board_id, assigned, , ...)
[DEBUG] 2022-08-15 17:14:53.893 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2022-08-15 17:14:53.893 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:14:53.894 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for fullName
[DEBUG] 2022-08-15 17:14:53.894 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2022-08-15 17:14:53.894 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for registrationDate
[DEBUG] 2022-08-15 17:14:53.894 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for cardId
[DEBUG] 2022-08-15 17:14:53.894 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2022-08-15 17:14:53.894 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for memberEmail
[DEBUG] 2022-08-15 17:14:53.894 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for points
[DEBUG] 2022-08-15 17:14:53.894 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2022-08-15 17:14:53.894 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for tech
[DEBUG] 2022-08-15 17:14:53.894 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for teamName
[DEBUG] 2022-08-15 17:14:53.894 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for teamSize
[DEBUG] 2022-08-15 17:14:53.894 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for board_id
[DEBUG] 2022-08-15 17:14:53.895 [http-nio-8080-exec-1] PrimaryKey - Forcing column [email] to be non-null as it is part of the primary key for table [members]
[DEBUG] 2022-08-15 17:14:53.895 [http-nio-8080-exec-1] PrimaryKey - Forcing column [cardid] to be non-null as it is part of the primary key for table [cards]
[DEBUG] 2022-08-15 17:14:53.895 [http-nio-8080-exec-1] PrimaryKey - Forcing column [teamname] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2022-08-15 17:14:53.895 [http-nio-8080-exec-1] PrimaryKey - Forcing column [board_id] to be non-null as it is part of the primary key for table [boards]
[DEBUG] 2022-08-15 17:14:53.934 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: null
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2022-08-15 17:14:53.935 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - JPA compliance - query : disabled
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - JPA compliance - lists : disabled
[DEBUG] 2022-08-15 17:14:53.936 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : disabled
[DEBUG] 2022-08-15 17:14:53.958 [http-nio-8080-exec-1] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:14:53.958 [http-nio-8080-exec-1] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:14:53.964 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-08-15 17:14:53.964 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, java.class.path=/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/ext/cldrdata.jar:/opt/jdk8u332-b09/jre/lib/ext/dnsns.jar:/opt/jdk8u332-b09/jre/lib/ext/jaccess.jar:/opt/jdk8u332-b09/jre/lib/ext/localedata.jar:/opt/jdk8u332-b09/jre/lib/ext/nashorn.jar:/opt/jdk8u332-b09/jre/lib/ext/sunec.jar:/opt/jdk8u332-b09/jre/lib/ext/sunjce_provider.jar:/opt/jdk8u332-b09/jre/lib/ext/sunpkcs11.jar:/opt/jdk8u332-b09/jre/lib/ext/zipfs.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/management-agent.jar:/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/target/classes:/home/cjester/.m2/repository/org/postgresql/postgresql/42.3.3/postgresql-42.3.3.jar:/home/cjester/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/home/cjester/.m2/repository/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.23/tomcat-embed-core-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.23/tomcat-annotations-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.23/tomcat-embed-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.23/tomcat-embed-el-8.5.23.jar:/home/cjester/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper/8.5.23/tomcat-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.5.23/tomcat-servlet-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-juli/8.5.23/tomcat-juli-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-el-api/8.5.23/tomcat-el-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-api/8.5.23/tomcat-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util-scan/8.5.23/tomcat-util-scan-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util/8.5.23/tomcat-util-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper-el/8.5.23/tomcat-jasper-el-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jsp-api/8.5.23/tomcat-jsp-api-8.5.23.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/home/cjester/.m2/repository/org/hibernate/hibernate-core/5.6.9.Final/hibernate-core-5.6.9.Final.jar:/home/cjester/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/home/cjester/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/cjester/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/cjester/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/cjester/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/home/cjester/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/cjester/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/cjester/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/home/cjester/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/cjester/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/cjester/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/cjester/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/snap/intellij-idea-community/381/lib/idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=America/New_York, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/opt/jdk8u332-b09/jre/lib/amd64, sun.java.command=com.revature.nabnak.MainDriver, sun.cpu.endian=little, user.home=/home/cjester, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/opt/jdk8u332-b09/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/opt/jdk8u332-b09/jre/lib/sunrsasign.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_332-b09, user.name=cjester, path.separator=:, hibernate.connection.username=****, os.version=5.15.0-46-generic, java.endorsed.dirs=/opt/jdk8u332-b09/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/tmp, catalina.home=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, java.version=1.8.0_332, user.dir=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, catalina.base=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2cfcf8d4, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Temurin, java.vm.version=25.332-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/opt/jdk8u332-b09/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[DEBUG] 2022-08-15 17:14:53.970 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-08-15 17:14:53.970 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-08-15 17:14:53.970 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6abcdadd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@48c4ff89]
[DEBUG] 2022-08-15 17:14:53.999 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:14:53.999 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:14:54.080 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:14:54.081 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:14:54.084 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:14:54.084 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:14:54.092 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:14:54.092 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:14:54.098 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:14:54.098 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select email from members where email =?
[DEBUG] 2022-08-15 17:14:54.098 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select member_.email, member_.experienceMonths as experien2_2_, member_.fullName as fullname3_2_, member_.password as password4_2_, member_.registrationDate as registra5_2_ from members member_ where member_.email=?
[DEBUG] 2022-08-15 17:14:54.098 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into members (experienceMonths, fullName, password, registrationDate, email) values (?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:14:54.098 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update members set experienceMonths=?, fullName=?, password=?, registrationDate=? where email=?
[DEBUG] 2022-08-15 17:14:54.099 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from members where email=?
[DEBUG] 2022-08-15 17:14:54.108 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1237d23a]
[DEBUG] 2022-08-15 17:14:54.109 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : experienceMonths
[DEBUG] 2022-08-15 17:14:54.109 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : fullName
[DEBUG] 2022-08-15 17:14:54.109 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-08-15 17:14:54.109 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : registrationDate
[DEBUG] 2022-08-15 17:14:54.109 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:14:54.114 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:14:54.115 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.member.Member)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.member.Member, querySpaceUid=<gen:0>, path=com.revature.nabnak.member.Member)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.member.Member)
          - SQL table alias mapping - member0_
          - alias suffix - 0_
          - suffixed key columns - {email1_2_0_}

[DEBUG] 2022-08-15 17:14:54.116 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.revature.nabnak.member.Member [NONE]: select member0_.email as email1_2_0_, member0_.experienceMonths as experien2_2_0_, member0_.fullName as fullname3_2_0_, member0_.password as password4_2_0_, member0_.registrationDate as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:14:54.116 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:14:54.116 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select teamName from teams where teamName =?
[DEBUG] 2022-08-15 17:14:54.117 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select team_.teamName, team_.teamSize as teamsize2_3_ from teams team_ where team_.teamName=?
[DEBUG] 2022-08-15 17:14:54.117 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into teams (teamSize, teamName) values (?, ?)
[DEBUG] 2022-08-15 17:14:54.117 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update teams set teamSize=? where teamName=?
[DEBUG] 2022-08-15 17:14:54.117 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from teams where teamName=?
[DEBUG] 2022-08-15 17:14:54.117 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@241bca25]
[DEBUG] 2022-08-15 17:14:54.117 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : teamSize
[DEBUG] 2022-08-15 17:14:54.117 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:14:54.117 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:14:54.117 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.team.Team)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.team.Team, querySpaceUid=<gen:0>, path=com.revature.nabnak.team.Team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.team.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamname1_3_0_}

[DEBUG] 2022-08-15 17:14:54.117 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.revature.nabnak.team.Team [NONE]: select team0_.teamName as teamname1_3_0_, team0_.teamSize as teamsize2_3_0_ from teams team0_ where team0_.teamName=?
[DEBUG] 2022-08-15 17:14:54.117 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:14:54.117 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select cardId from cards where cardId =?
[DEBUG] 2022-08-15 17:14:54.117 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select card_.cardId, card_.description as descript2_1_, card_.memberEmail as memberem3_1_, card_.points as points4_1_, card_.status as status5_1_, card_.tech as tech6_1_ from cards card_ where card_.cardId=?
[DEBUG] 2022-08-15 17:14:54.118 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into cards (description, memberEmail, points, status, tech, cardId) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:14:54.118 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update cards set description=?, memberEmail=?, points=?, status=?, tech=? where cardId=?
[DEBUG] 2022-08-15 17:14:54.118 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from cards where cardId=?
[DEBUG] 2022-08-15 17:14:54.118 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67108aa]
[DEBUG] 2022-08-15 17:14:54.118 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-08-15 17:14:54.118 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : memberEmail
[DEBUG] 2022-08-15 17:14:54.118 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2022-08-15 17:14:54.118 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2022-08-15 17:14:54.118 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : tech
[DEBUG] 2022-08-15 17:14:54.118 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:14:54.118 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:14:54.118 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.card.Card)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.card.Card, querySpaceUid=<gen:0>, path=com.revature.nabnak.card.Card)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.card.Card)
          - SQL table alias mapping - card0_
          - alias suffix - 0_
          - suffixed key columns - {cardid1_1_0_}

[DEBUG] 2022-08-15 17:14:54.118 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.revature.nabnak.card.Card [NONE]: select card0_.cardId as cardid1_1_0_, card0_.description as descript2_1_0_, card0_.memberEmail as memberem3_1_0_, card0_.points as points4_1_0_, card0_.status as status5_1_0_, card0_.tech as tech6_1_0_ from cards card0_ where card0_.cardId=?
[DEBUG] 2022-08-15 17:14:54.119 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:14:54.119 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select board_id from boards where board_id =?
[DEBUG] 2022-08-15 17:14:54.119 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select board_.board_id from boards board_ where board_.board_id=?
[DEBUG] 2022-08-15 17:14:54.119 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into boards (board_id) values (?)
[DEBUG] 2022-08-15 17:14:54.119 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: null
[DEBUG] 2022-08-15 17:14:54.119 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from boards where board_id=?
[DEBUG] 2022-08-15 17:14:54.119 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ed7409a]
[DEBUG] 2022-08-15 17:14:54.119 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:14:54.119 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:14:54.119 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.board.Board)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.board.Board, querySpaceUid=<gen:0>, path=com.revature.nabnak.board.Board)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.board.Board)
          - SQL table alias mapping - board0_
          - alias suffix - 0_
          - suffixed key columns - {board_id1_0_0_}

[DEBUG] 2022-08-15 17:14:54.119 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.revature.nabnak.board.Board [NONE]: select board0_.board_id as board_id1_0_0_ from boards board0_ where board0_.board_id=?
[INFO ] 2022-08-15 17:14:54.140 [http-nio-8080-exec-1] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@617e2fc1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 2022-08-15 17:14:54.194 [http-nio-8080-exec-1] Table - No alter strings for table : boards
[DEBUG] 2022-08-15 17:14:54.194 [http-nio-8080-exec-1] Table - No alter strings for table : cards
[DEBUG] 2022-08-15 17:14:54.194 [http-nio-8080-exec-1] SQL - alter table if exists members add column experienceMonths int4 not null
[WARN ] 2022-08-15 17:14:54.206 [http-nio-8080-exec-1] ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table if exists members add column experienceMonths int4 not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table if exists members add column experienceMonths int4 not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:581) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:602) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:314) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:78) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:728) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at com.revature.nabnak.util.HibernateUtil.getSession(HibernateUtil.java:39) [classes/:?]
	at com.revature.nabnak.member.MemberDao.findAll(MemberDao.java:36) [classes/:?]
	at com.revature.nabnak.member.MemberService.readAll(MemberService.java:47) [classes/:?]
	at com.revature.nabnak.member.MemberServlet.doGet(MemberServlet.java:69) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_332]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.lang.Thread.run(Thread.java:750) [?:1.8.0_332]
Caused by: org.postgresql.util.PSQLException: ERROR: column "experiencemonths" of relation "members" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:329) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:315) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:291) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:286) ~[postgresql-42.3.3.jar:42.3.3]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	... 35 more
[DEBUG] 2022-08-15 17:14:54.209 [http-nio-8080-exec-1] Table - No alter strings for table : teams
[DEBUG] 2022-08-15 17:14:54.210 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-08-15 17:14:54.210 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-08-15 17:14:54.213 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-08-15 17:14:54.213 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-08-15 17:14:54.213 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-08-15 17:14:54.213 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-08-15 17:14:54.215 [http-nio-8080-exec-1] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:14:54.218 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@20f26349
[DEBUG] 2022-08-15 17:14:54.218 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: b4562118-a607-4e12-928d-e7789b1bb7bb (<unnamed>)
[DEBUG] 2022-08-15 17:14:54.218 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-08-15 17:14:54.246 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-08-15 17:14:54.249 [http-nio-8080-exec-1] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:14:54.249 [http-nio-8080-exec-1] TransactionImpl - begin
[DEBUG] 2022-08-15 17:14:54.255 [http-nio-8080-exec-1] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@28ecdbb4
[DEBUG] 2022-08-15 17:14:54.266 [http-nio-8080-exec-1] QueryTranslatorImpl - parse() - HQL: FROM com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:14:54.268 [http-nio-8080-exec-1] ErrorTracker - Keyword  'member' is being interpreted as an identifier due to: expecting IDENT, found 'member'
[DEBUG] 2022-08-15 17:14:54.269 [http-nio-8080-exec-1] ErrorTracker - Keyword  'Member' is being interpreted as an identifier due to: expecting IDENT, found 'Member'
[DEBUG] 2022-08-15 17:14:54.269 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-08-15 17:14:54.272 [http-nio-8080-exec-1] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'com'
                |  |  |  \-[IDENT] Node: 'revature'
                |  |  \-[IDENT] Node: 'nabnak'
                |  \-[WEIRD_IDENT] Node: 'member'
                \-[WEIRD_IDENT] Node: 'Member'

[DEBUG] 2022-08-15 17:14:54.281 [http-nio-8080-exec-1] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2022-08-15 17:14:54.286 [http-nio-8080-exec-1] FromElement - FromClause{level=1} : com.revature.nabnak.member.Member (<no alias>) -> member0_
[DEBUG] 2022-08-15 17:14:54.286 [http-nio-8080-exec-1] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2022-08-15 17:14:54.286 [http-nio-8080-exec-1] HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} members member0_ ) )
[DEBUG] 2022-08-15 17:14:54.288 [http-nio-8080-exec-1] HqlSqlWalker - Derived SELECT clause created.
[DEBUG] 2022-08-15 17:14:54.290 [http-nio-8080-exec-1] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Member): [members]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.revature.nabnak.member.Member)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[DEBUG] 2022-08-15 17:14:54.291 [http-nio-8080-exec-1] JoinProcessor - Using FROM fragment [members member0_]
[DEBUG] 2022-08-15 17:14:54.291 [http-nio-8080-exec-1] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2022-08-15 17:14:54.291 [http-nio-8080-exec-1] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (members)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'member0_.email as email1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=members,tableAlias=member0_,origin=null,columns={,className=com.revature.nabnak.member.Member}}}
    |  \-[SQL_TOKEN] SqlFragment: 'member0_.experienceMonths as experien2_2_, member0_.fullName as fullname3_2_, member0_.password as password4_2_, member0_.registrationDate as registra5_2_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[member0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'members member0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=members,tableAlias=member0_,origin=null,columns={,className=com.revature.nabnak.member.Member}}

[DEBUG] 2022-08-15 17:14:54.291 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-08-15 17:14:54.294 [http-nio-8080-exec-1] QueryTranslatorImpl - HQL: FROM com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:14:54.294 [http-nio-8080-exec-1] QueryTranslatorImpl - SQL: select member0_.email as email1_2_, member0_.experienceMonths as experien2_2_, member0_.fullName as fullname3_2_, member0_.password as password4_2_, member0_.registrationDate as registra5_2_ from members member0_
[DEBUG] 2022-08-15 17:14:54.294 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-08-15 17:14:54.300 [http-nio-8080-exec-1] SQL - select member0_.email as email1_2_, member0_.experienceMonths as experien2_2_, member0_.fullName as fullname3_2_, member0_.password as password4_2_, member0_.registrationDate as registra5_2_ from members member0_
[DEBUG] 2022-08-15 17:14:54.313 [http-nio-8080-exec-1] SqlExceptionHelper - could not extract ResultSet [n/a]
org.postgresql.util.PSQLException: ERROR: column member0_.experiencemonths does not exist
  Hint: Perhaps you meant to reference the column "member0_.experience_months".
  Position: 37
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:118) ~[postgresql-42.3.3.jar:42.3.3]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2322) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2075) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2037) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.loader.Loader.doQuery(Loader.java:956) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:357) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2868) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2850) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2682) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.loader.Loader.list(Loader.java:2677) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:540) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1459) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1649) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1617) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at com.revature.nabnak.member.MemberDao.findAll(MemberDao.java:38) [classes/:?]
	at com.revature.nabnak.member.MemberService.readAll(MemberService.java:47) [classes/:?]
	at com.revature.nabnak.member.MemberServlet.doGet(MemberServlet.java:69) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_332]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.lang.Thread.run(Thread.java:750) [?:1.8.0_332]
[WARN ] 2022-08-15 17:14:54.313 [http-nio-8080-exec-1] SqlExceptionHelper - SQL Error: 0, SQLState: 42703
[ERROR] 2022-08-15 17:14:54.313 [http-nio-8080-exec-1] SqlExceptionHelper - ERROR: column member0_.experiencemonths does not exist
  Hint: Perhaps you meant to reference the column "member0_.experience_months".
  Position: 37
[DEBUG] 2022-08-15 17:14:54.315 [http-nio-8080-exec-1] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:428) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1626) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at com.revature.nabnak.member.MemberDao.findAll(MemberDao.java:38) [classes/:?]
	at com.revature.nabnak.member.MemberService.readAll(MemberService.java:47) [classes/:?]
	at com.revature.nabnak.member.MemberServlet.doGet(MemberServlet.java:69) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_332]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.lang.Thread.run(Thread.java:750) [?:1.8.0_332]
[DEBUG] 2022-08-15 17:15:23.775 [Hibernate Connection Pool Validation Thread] DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
[DEBUG] 2022-08-15 17:16:36.994 [http-nio-8080-exec-1] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 17:16:36.999 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:16:36.999 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:16:37.001 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 17:16:37.010 [http-nio-8080-exec-1] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-08-15 17:16:37.011 [http-nio-8080-exec-1] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.postgresql.Driver, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 17:16:37.082 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:16:37.082 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:16:37.082 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 17:16:37.085 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 17:16:37.085 [http-nio-8080-exec-1] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 17:16:37.089 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 17:16:37.090 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 17:16:37.097 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 17:16:37.111 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@16773009
[DEBUG] 2022-08-15 17:16:37.111 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@16773009
[DEBUG] 2022-08-15 17:16:37.111 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@16773009
[DEBUG] 2022-08-15 17:16:37.111 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34590419
[DEBUG] 2022-08-15 17:16:37.112 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5895fff5
[DEBUG] 2022-08-15 17:16:37.112 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@14c82169
[DEBUG] 2022-08-15 17:16:37.113 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2571ca50
[DEBUG] 2022-08-15 17:16:37.113 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2571ca50
[DEBUG] 2022-08-15 17:16:37.113 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2571ca50
[DEBUG] 2022-08-15 17:16:37.113 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1cf5cf59
[DEBUG] 2022-08-15 17:16:37.113 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1cf5cf59
[DEBUG] 2022-08-15 17:16:37.113 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1cf5cf59
[DEBUG] 2022-08-15 17:16:37.114 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@e99cb10
[DEBUG] 2022-08-15 17:16:37.114 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@e99cb10
[DEBUG] 2022-08-15 17:16:37.114 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@e99cb10
[DEBUG] 2022-08-15 17:16:37.115 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3c6eecdc
[DEBUG] 2022-08-15 17:16:37.115 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3c6eecdc
[DEBUG] 2022-08-15 17:16:37.115 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c6eecdc
[DEBUG] 2022-08-15 17:16:37.115 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7d3d8f3a
[DEBUG] 2022-08-15 17:16:37.116 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7d3d8f3a
[DEBUG] 2022-08-15 17:16:37.116 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d3d8f3a
[DEBUG] 2022-08-15 17:16:37.116 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@169456b5
[DEBUG] 2022-08-15 17:16:37.116 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@169456b5
[DEBUG] 2022-08-15 17:16:37.116 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@169456b5
[DEBUG] 2022-08-15 17:16:37.117 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4f61eb37
[DEBUG] 2022-08-15 17:16:37.117 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4f61eb37
[DEBUG] 2022-08-15 17:16:37.117 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4f61eb37
[DEBUG] 2022-08-15 17:16:37.117 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5cac9a3a
[DEBUG] 2022-08-15 17:16:37.118 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5cac9a3a
[DEBUG] 2022-08-15 17:16:37.118 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@72a85828
[DEBUG] 2022-08-15 17:16:37.118 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@72a85828
[DEBUG] 2022-08-15 17:16:37.119 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@494a5276
[DEBUG] 2022-08-15 17:16:37.119 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@494a5276
[DEBUG] 2022-08-15 17:16:37.119 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@792b1c49
[DEBUG] 2022-08-15 17:16:37.119 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3decaef9
[DEBUG] 2022-08-15 17:16:37.120 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@628b1e92
[DEBUG] 2022-08-15 17:16:37.120 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@628b1e92
[DEBUG] 2022-08-15 17:16:37.120 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@18b01983
[DEBUG] 2022-08-15 17:16:37.120 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@18b01983
[DEBUG] 2022-08-15 17:16:37.127 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@b60324f
[DEBUG] 2022-08-15 17:16:37.128 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@b60324f
[DEBUG] 2022-08-15 17:16:37.129 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5221d395
[DEBUG] 2022-08-15 17:16:37.129 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5221d395
[DEBUG] 2022-08-15 17:16:37.130 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d66a703
[DEBUG] 2022-08-15 17:16:37.130 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d66a703
[DEBUG] 2022-08-15 17:16:37.131 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3ff2e36d
[DEBUG] 2022-08-15 17:16:37.131 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3ff2e36d
[DEBUG] 2022-08-15 17:16:37.132 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@260bf854
[DEBUG] 2022-08-15 17:16:37.132 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@260bf854
[DEBUG] 2022-08-15 17:16:37.133 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@50ec69ee
[DEBUG] 2022-08-15 17:16:37.133 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@50ec69ee
[DEBUG] 2022-08-15 17:16:37.134 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@96f2659
[DEBUG] 2022-08-15 17:16:37.135 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@96f2659
[DEBUG] 2022-08-15 17:16:37.135 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3a8d5027
[DEBUG] 2022-08-15 17:16:37.135 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a8d5027
[DEBUG] 2022-08-15 17:16:37.136 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@429791ad
[DEBUG] 2022-08-15 17:16:37.136 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@429791ad
[DEBUG] 2022-08-15 17:16:37.137 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4dd7dc5c
[DEBUG] 2022-08-15 17:16:37.137 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4dd7dc5c
[DEBUG] 2022-08-15 17:16:37.137 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4dd7dc5c
[DEBUG] 2022-08-15 17:16:37.137 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@13bbe213
[DEBUG] 2022-08-15 17:16:37.138 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@357e3d65
[DEBUG] 2022-08-15 17:16:37.138 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@357e3d65
[DEBUG] 2022-08-15 17:16:37.138 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@357e3d65
[DEBUG] 2022-08-15 17:16:37.138 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@156abf30
[DEBUG] 2022-08-15 17:16:37.139 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6be7c319
[DEBUG] 2022-08-15 17:16:37.139 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@15f46afb
[DEBUG] 2022-08-15 17:16:37.139 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@15f46afb
[DEBUG] 2022-08-15 17:16:37.140 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6c1121b7
[DEBUG] 2022-08-15 17:16:37.140 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6c1121b7
[DEBUG] 2022-08-15 17:16:37.140 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6dedfdd7
[DEBUG] 2022-08-15 17:16:37.140 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6dedfdd7
[DEBUG] 2022-08-15 17:16:37.141 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1ca2b5b0
[DEBUG] 2022-08-15 17:16:37.141 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1ca2b5b0
[DEBUG] 2022-08-15 17:16:37.141 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55419519
[DEBUG] 2022-08-15 17:16:37.141 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55419519
[DEBUG] 2022-08-15 17:16:37.141 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@676165ae
[DEBUG] 2022-08-15 17:16:37.142 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7edf1437
[DEBUG] 2022-08-15 17:16:37.142 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7edf1437
[DEBUG] 2022-08-15 17:16:37.142 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7edf1437
[DEBUG] 2022-08-15 17:16:37.143 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3f2e4728
[DEBUG] 2022-08-15 17:16:37.143 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3f2e4728
[DEBUG] 2022-08-15 17:16:37.143 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3f2e4728
[DEBUG] 2022-08-15 17:16:37.143 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@ba5ce35
[DEBUG] 2022-08-15 17:16:37.143 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@e7e89b1
[DEBUG] 2022-08-15 17:16:37.144 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27ca7841
[DEBUG] 2022-08-15 17:16:37.144 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27ca7841
[DEBUG] 2022-08-15 17:16:37.144 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27ca7841
[DEBUG] 2022-08-15 17:16:37.144 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e78596f
[DEBUG] 2022-08-15 17:16:37.145 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e78596f
[DEBUG] 2022-08-15 17:16:37.145 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e78596f
[DEBUG] 2022-08-15 17:16:37.145 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@21f50ad6
[DEBUG] 2022-08-15 17:16:37.145 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@8e8f23c
[DEBUG] 2022-08-15 17:16:37.146 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@42d13b61
[DEBUG] 2022-08-15 17:16:37.146 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@42d13b61
[DEBUG] 2022-08-15 17:16:37.146 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4dc1e163
[DEBUG] 2022-08-15 17:16:37.147 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@79b74446
[DEBUG] 2022-08-15 17:16:37.147 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@79b74446
[DEBUG] 2022-08-15 17:16:37.147 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@351ac883
[DEBUG] 2022-08-15 17:16:37.147 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@351ac883
[DEBUG] 2022-08-15 17:16:37.148 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@432be8b9
[DEBUG] 2022-08-15 17:16:37.148 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@513893d1
[DEBUG] 2022-08-15 17:16:37.148 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@39eac109
[DEBUG] 2022-08-15 17:16:37.150 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@705b3df4
[DEBUG] 2022-08-15 17:16:37.150 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@705b3df4
[DEBUG] 2022-08-15 17:16:37.158 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@69eefc70
[DEBUG] 2022-08-15 17:16:37.158 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4073d824
[DEBUG] 2022-08-15 17:16:37.158 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@60cefd6e
[DEBUG] 2022-08-15 17:16:37.158 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@431c119b
[DEBUG] 2022-08-15 17:16:37.158 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5d0f68f4
[DEBUG] 2022-08-15 17:16:37.158 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3632989
[DEBUG] 2022-08-15 17:16:37.158 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14d19106
[DEBUG] 2022-08-15 17:16:37.159 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@37e2cace
[DEBUG] 2022-08-15 17:16:37.172 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 17:16:37.173 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 17:16:37.173 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:16:37.173 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:16:37.173 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 17:16:37.174 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 17:16:37.174 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 17:16:37.174 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:16:37.175 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 17:16:37.175 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 17:16:37.176 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 17:16:37.176 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 17:16:37.176 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:16:37.176 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 17:16:37.179 [http-nio-8080-exec-1] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 17:16:37.181 [http-nio-8080-exec-1] pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak]
[INFO ] 2022-08-15 17:16:37.181 [http-nio-8080-exec-1] pooling - HHH10001001: Connection properties: {user=postgres, password=javaReact1000}
[INFO ] 2022-08-15 17:16:37.181 [http-nio-8080-exec-1] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2022-08-15 17:16:37.183 [http-nio-8080-exec-1] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2022-08-15 17:16:37.183 [http-nio-8080-exec-1] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2022-08-15 17:16:37.493 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4
      major : 13
      minor : 4
[DEBUG] 2022-08-15 17:16:37.494 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
[DEBUG] 2022-08-15 17:16:37.494 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-08-15 17:16:37.499 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 17:16:37.506 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-08-15 17:16:37.574 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@56e437d6
[DEBUG] 2022-08-15 17:16:37.574 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@56e437d6
[DEBUG] 2022-08-15 17:16:37.574 [http-nio-8080-exec-1] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@55419519
[DEBUG] 2022-08-15 17:16:37.575 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@205b572] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2029ecf]
[DEBUG] 2022-08-15 17:16:37.589 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-08-15 17:16:37.595 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:16:37.604 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:16:37.606 [http-nio-8080-exec-1] EntityBinder - Import with entity name Member
[DEBUG] 2022-08-15 17:16:37.607 [http-nio-8080-exec-1] EntityBinder - Bind entity com.revature.nabnak.member.Member on table members
[DEBUG] 2022-08-15 17:16:37.616 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:16:37.617 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:16:37.617 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:16:37.617 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2022-08-15 17:16:37.618 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:email]
[DEBUG] 2022-08-15 17:16:37.619 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2022-08-15 17:16:37.620 [http-nio-8080-exec-1] PropertyBinder - Building property email
[DEBUG] 2022-08-15 17:16:37.621 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
[DEBUG] 2022-08-15 17:16:37.621 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=experience_months, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:16:37.621 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property experienceMonths with lazy=false
[DEBUG] 2022-08-15 17:16:37.621 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:experienceMonths]
[DEBUG] 2022-08-15 17:16:37.621 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:16:37.621 [http-nio-8080-exec-1] PropertyBinder - Building property experienceMonths
[DEBUG] 2022-08-15 17:16:37.622 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:16:37.622 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
[DEBUG] 2022-08-15 17:16:37.622 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:fullName]
[DEBUG] 2022-08-15 17:16:37.622 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for fullName
[DEBUG] 2022-08-15 17:16:37.622 [http-nio-8080-exec-1] PropertyBinder - Building property fullName
[DEBUG] 2022-08-15 17:16:37.622 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:16:37.622 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2022-08-15 17:16:37.622 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:password]
[DEBUG] 2022-08-15 17:16:37.623 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2022-08-15 17:16:37.623 [http-nio-8080-exec-1] PropertyBinder - Building property password
[DEBUG] 2022-08-15 17:16:37.623 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=registration_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:16:37.623 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property registrationDate with lazy=false
[DEBUG] 2022-08-15 17:16:37.623 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:registrationDate]
[DEBUG] 2022-08-15 17:16:37.623 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for registrationDate
[DEBUG] 2022-08-15 17:16:37.624 [http-nio-8080-exec-1] PropertyBinder - Building property registrationDate
[DEBUG] 2022-08-15 17:16:37.627 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:16:37.627 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:16:37.627 [http-nio-8080-exec-1] EntityBinder - Import with entity name Card
[DEBUG] 2022-08-15 17:16:37.627 [http-nio-8080-exec-1] EntityBinder - Bind entity com.revature.nabnak.card.Card on table cards
[DEBUG] 2022-08-15 17:16:37.628 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=cardId, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:16:37.628 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:16:37.628 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:16:37.628 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property cardId with lazy=false
[DEBUG] 2022-08-15 17:16:37.628 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:cardId]
[DEBUG] 2022-08-15 17:16:37.628 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for cardId
[DEBUG] 2022-08-15 17:16:37.628 [http-nio-8080-exec-1] PropertyBinder - Building property cardId
[DEBUG] 2022-08-15 17:16:37.629 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cardId)]), cardId, assigned, , ...)
[DEBUG] 2022-08-15 17:16:37.629 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:16:37.629 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2022-08-15 17:16:37.629 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:description]
[DEBUG] 2022-08-15 17:16:37.629 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2022-08-15 17:16:37.629 [http-nio-8080-exec-1] PropertyBinder - Building property description
[DEBUG] 2022-08-15 17:16:37.629 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=memberEmail, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:16:37.629 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property memberEmail with lazy=false
[DEBUG] 2022-08-15 17:16:37.629 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:memberEmail]
[DEBUG] 2022-08-15 17:16:37.629 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for memberEmail
[DEBUG] 2022-08-15 17:16:37.629 [http-nio-8080-exec-1] PropertyBinder - Building property memberEmail
[DEBUG] 2022-08-15 17:16:37.630 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=points, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:16:37.630 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property points with lazy=false
[DEBUG] 2022-08-15 17:16:37.630 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:points]
[DEBUG] 2022-08-15 17:16:37.630 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for points
[DEBUG] 2022-08-15 17:16:37.630 [http-nio-8080-exec-1] PropertyBinder - Building property points
[DEBUG] 2022-08-15 17:16:37.630 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:16:37.630 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2022-08-15 17:16:37.630 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:status]
[DEBUG] 2022-08-15 17:16:37.630 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2022-08-15 17:16:37.630 [http-nio-8080-exec-1] PropertyBinder - Building property status
[DEBUG] 2022-08-15 17:16:37.630 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cards), mappingColumn=tech, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:16:37.630 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property tech with lazy=false
[DEBUG] 2022-08-15 17:16:37.631 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:tech]
[DEBUG] 2022-08-15 17:16:37.631 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for tech
[DEBUG] 2022-08-15 17:16:37.631 [http-nio-8080-exec-1] PropertyBinder - Building property tech
[DEBUG] 2022-08-15 17:16:37.631 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:16:37.631 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:16:37.631 [http-nio-8080-exec-1] EntityBinder - Import with entity name Team
[DEBUG] 2022-08-15 17:16:37.631 [http-nio-8080-exec-1] EntityBinder - Bind entity com.revature.nabnak.team.Team on table teams
[DEBUG] 2022-08-15 17:16:37.632 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:16:37.632 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:16:37.632 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:16:37.632 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2022-08-15 17:16:37.632 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamName]
[DEBUG] 2022-08-15 17:16:37.632 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for teamName
[DEBUG] 2022-08-15 17:16:37.632 [http-nio-8080-exec-1] PropertyBinder - Building property teamName
[DEBUG] 2022-08-15 17:16:37.632 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(teamName)]), teamName, assigned, , ...)
[DEBUG] 2022-08-15 17:16:37.632 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamSize, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:16:37.633 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property teamSize with lazy=false
[DEBUG] 2022-08-15 17:16:37.633 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamSize]
[DEBUG] 2022-08-15 17:16:37.633 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for teamSize
[DEBUG] 2022-08-15 17:16:37.633 [http-nio-8080-exec-1] PropertyBinder - Building property teamSize
[DEBUG] 2022-08-15 17:16:37.633 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:16:37.633 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:16:37.633 [http-nio-8080-exec-1] EntityBinder - Import with entity name Board
[DEBUG] 2022-08-15 17:16:37.633 [http-nio-8080-exec-1] EntityBinder - Bind entity com.revature.nabnak.board.Board on table boards
[DEBUG] 2022-08-15 17:16:37.633 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(boards), mappingColumn=board_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:16:37.634 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:16:37.634 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:16:37.634 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property board_id with lazy=false
[DEBUG] 2022-08-15 17:16:37.634 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.board.Board:board_id]
[DEBUG] 2022-08-15 17:16:37.634 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for board_id
[DEBUG] 2022-08-15 17:16:37.634 [http-nio-8080-exec-1] PropertyBinder - Building property board_id
[DEBUG] 2022-08-15 17:16:37.634 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(board_id)]), board_id, assigned, , ...)
[DEBUG] 2022-08-15 17:16:37.635 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2022-08-15 17:16:37.635 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:16:37.635 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for fullName
[DEBUG] 2022-08-15 17:16:37.635 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2022-08-15 17:16:37.635 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for registrationDate
[DEBUG] 2022-08-15 17:16:37.635 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for cardId
[DEBUG] 2022-08-15 17:16:37.635 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2022-08-15 17:16:37.636 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for memberEmail
[DEBUG] 2022-08-15 17:16:37.636 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for points
[DEBUG] 2022-08-15 17:16:37.636 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2022-08-15 17:16:37.636 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for tech
[DEBUG] 2022-08-15 17:16:37.636 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for teamName
[DEBUG] 2022-08-15 17:16:37.636 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for teamSize
[DEBUG] 2022-08-15 17:16:37.636 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for board_id
[DEBUG] 2022-08-15 17:16:37.637 [http-nio-8080-exec-1] PrimaryKey - Forcing column [email] to be non-null as it is part of the primary key for table [members]
[DEBUG] 2022-08-15 17:16:37.637 [http-nio-8080-exec-1] PrimaryKey - Forcing column [cardid] to be non-null as it is part of the primary key for table [cards]
[DEBUG] 2022-08-15 17:16:37.637 [http-nio-8080-exec-1] PrimaryKey - Forcing column [teamname] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2022-08-15 17:16:37.637 [http-nio-8080-exec-1] PrimaryKey - Forcing column [board_id] to be non-null as it is part of the primary key for table [boards]
[DEBUG] 2022-08-15 17:16:37.675 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: null
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-08-15 17:16:37.676 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-08-15 17:16:37.677 [http-nio-8080-exec-1] Settings - JPA compliance - query : disabled
[DEBUG] 2022-08-15 17:16:37.678 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2022-08-15 17:16:37.678 [http-nio-8080-exec-1] Settings - JPA compliance - lists : disabled
[DEBUG] 2022-08-15 17:16:37.678 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : disabled
[DEBUG] 2022-08-15 17:16:37.703 [http-nio-8080-exec-1] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:16:37.704 [http-nio-8080-exec-1] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:16:37.712 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-08-15 17:16:37.712 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, java.class.path=/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/ext/cldrdata.jar:/opt/jdk8u332-b09/jre/lib/ext/dnsns.jar:/opt/jdk8u332-b09/jre/lib/ext/jaccess.jar:/opt/jdk8u332-b09/jre/lib/ext/localedata.jar:/opt/jdk8u332-b09/jre/lib/ext/nashorn.jar:/opt/jdk8u332-b09/jre/lib/ext/sunec.jar:/opt/jdk8u332-b09/jre/lib/ext/sunjce_provider.jar:/opt/jdk8u332-b09/jre/lib/ext/sunpkcs11.jar:/opt/jdk8u332-b09/jre/lib/ext/zipfs.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/management-agent.jar:/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/target/classes:/home/cjester/.m2/repository/org/postgresql/postgresql/42.3.3/postgresql-42.3.3.jar:/home/cjester/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/home/cjester/.m2/repository/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.23/tomcat-embed-core-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.23/tomcat-annotations-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.23/tomcat-embed-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.23/tomcat-embed-el-8.5.23.jar:/home/cjester/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper/8.5.23/tomcat-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.5.23/tomcat-servlet-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-juli/8.5.23/tomcat-juli-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-el-api/8.5.23/tomcat-el-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-api/8.5.23/tomcat-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util-scan/8.5.23/tomcat-util-scan-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util/8.5.23/tomcat-util-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper-el/8.5.23/tomcat-jasper-el-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jsp-api/8.5.23/tomcat-jsp-api-8.5.23.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/home/cjester/.m2/repository/org/hibernate/hibernate-core/5.6.9.Final/hibernate-core-5.6.9.Final.jar:/home/cjester/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/home/cjester/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/cjester/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/cjester/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/cjester/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/home/cjester/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/cjester/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/cjester/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/home/cjester/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/cjester/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/cjester/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/cjester/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/snap/intellij-idea-community/381/lib/idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=America/New_York, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/opt/jdk8u332-b09/jre/lib/amd64, sun.java.command=com.revature.nabnak.MainDriver, sun.cpu.endian=little, user.home=/home/cjester, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/opt/jdk8u332-b09/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/opt/jdk8u332-b09/jre/lib/sunrsasign.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_332-b09, user.name=cjester, path.separator=:, hibernate.connection.username=****, os.version=5.15.0-46-generic, java.endorsed.dirs=/opt/jdk8u332-b09/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/tmp, catalina.home=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, java.version=1.8.0_332, user.dir=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, catalina.base=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4c59ad9, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Temurin, java.vm.version=25.332-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/opt/jdk8u332-b09/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[DEBUG] 2022-08-15 17:16:37.721 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-08-15 17:16:37.722 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-08-15 17:16:37.722 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@205b572] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@384962d2]
[DEBUG] 2022-08-15 17:16:37.752 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:16:37.752 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:16:37.835 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:16:37.835 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:16:37.838 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:16:37.839 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:16:37.847 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:16:37.847 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:16:37.852 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:16:37.853 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select email from members where email =?
[DEBUG] 2022-08-15 17:16:37.853 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select member_.email, member_.experience_months as experien2_2_, member_.full_name as full_nam3_2_, member_.password as password4_2_, member_.registration_date as registra5_2_ from members member_ where member_.email=?
[DEBUG] 2022-08-15 17:16:37.853 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into members (experience_months, full_name, password, registration_date, email) values (?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:16:37.853 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update members set experience_months=?, full_name=?, password=?, registration_date=? where email=?
[DEBUG] 2022-08-15 17:16:37.853 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from members where email=?
[DEBUG] 2022-08-15 17:16:37.863 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f82237]
[DEBUG] 2022-08-15 17:16:37.863 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : experienceMonths
[DEBUG] 2022-08-15 17:16:37.863 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : fullName
[DEBUG] 2022-08-15 17:16:37.863 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-08-15 17:16:37.864 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : registrationDate
[DEBUG] 2022-08-15 17:16:37.864 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:16:37.869 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:16:37.870 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.member.Member)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.member.Member, querySpaceUid=<gen:0>, path=com.revature.nabnak.member.Member)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.member.Member)
          - SQL table alias mapping - member0_
          - alias suffix - 0_
          - suffixed key columns - {email1_2_0_}

[DEBUG] 2022-08-15 17:16:37.871 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.revature.nabnak.member.Member [NONE]: select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:16:37.871 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:16:37.871 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select teamName from teams where teamName =?
[DEBUG] 2022-08-15 17:16:37.871 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select team_.teamName, team_.teamSize as teamsize2_3_ from teams team_ where team_.teamName=?
[DEBUG] 2022-08-15 17:16:37.871 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into teams (teamSize, teamName) values (?, ?)
[DEBUG] 2022-08-15 17:16:37.871 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update teams set teamSize=? where teamName=?
[DEBUG] 2022-08-15 17:16:37.872 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from teams where teamName=?
[DEBUG] 2022-08-15 17:16:37.872 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@191e5ad7]
[DEBUG] 2022-08-15 17:16:37.872 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : teamSize
[DEBUG] 2022-08-15 17:16:37.872 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:16:37.872 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:16:37.872 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.team.Team)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.team.Team, querySpaceUid=<gen:0>, path=com.revature.nabnak.team.Team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.team.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamname1_3_0_}

[DEBUG] 2022-08-15 17:16:37.872 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.revature.nabnak.team.Team [NONE]: select team0_.teamName as teamname1_3_0_, team0_.teamSize as teamsize2_3_0_ from teams team0_ where team0_.teamName=?
[DEBUG] 2022-08-15 17:16:37.872 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:16:37.872 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select cardId from cards where cardId =?
[DEBUG] 2022-08-15 17:16:37.872 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select card_.cardId, card_.description as descript2_1_, card_.memberEmail as memberem3_1_, card_.points as points4_1_, card_.status as status5_1_, card_.tech as tech6_1_ from cards card_ where card_.cardId=?
[DEBUG] 2022-08-15 17:16:37.873 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into cards (description, memberEmail, points, status, tech, cardId) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:16:37.873 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update cards set description=?, memberEmail=?, points=?, status=?, tech=? where cardId=?
[DEBUG] 2022-08-15 17:16:37.873 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from cards where cardId=?
[DEBUG] 2022-08-15 17:16:37.873 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d5f4b6]
[DEBUG] 2022-08-15 17:16:37.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-08-15 17:16:37.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : memberEmail
[DEBUG] 2022-08-15 17:16:37.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2022-08-15 17:16:37.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2022-08-15 17:16:37.873 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : tech
[DEBUG] 2022-08-15 17:16:37.874 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:16:37.874 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:16:37.874 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.card.Card)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.card.Card, querySpaceUid=<gen:0>, path=com.revature.nabnak.card.Card)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.card.Card)
          - SQL table alias mapping - card0_
          - alias suffix - 0_
          - suffixed key columns - {cardid1_1_0_}

[DEBUG] 2022-08-15 17:16:37.874 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.revature.nabnak.card.Card [NONE]: select card0_.cardId as cardid1_1_0_, card0_.description as descript2_1_0_, card0_.memberEmail as memberem3_1_0_, card0_.points as points4_1_0_, card0_.status as status5_1_0_, card0_.tech as tech6_1_0_ from cards card0_ where card0_.cardId=?
[DEBUG] 2022-08-15 17:16:37.874 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:16:37.874 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select board_id from boards where board_id =?
[DEBUG] 2022-08-15 17:16:37.874 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select board_.board_id from boards board_ where board_.board_id=?
[DEBUG] 2022-08-15 17:16:37.874 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into boards (board_id) values (?)
[DEBUG] 2022-08-15 17:16:37.874 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: null
[DEBUG] 2022-08-15 17:16:37.874 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from boards where board_id=?
[DEBUG] 2022-08-15 17:16:37.874 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37554be2]
[DEBUG] 2022-08-15 17:16:37.874 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:16:37.875 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:16:37.875 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.board.Board)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.board.Board, querySpaceUid=<gen:0>, path=com.revature.nabnak.board.Board)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.board.Board)
          - SQL table alias mapping - board0_
          - alias suffix - 0_
          - suffixed key columns - {board_id1_0_0_}

[DEBUG] 2022-08-15 17:16:37.875 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.revature.nabnak.board.Board [NONE]: select board0_.board_id as board_id1_0_0_ from boards board0_ where board0_.board_id=?
[INFO ] 2022-08-15 17:16:37.894 [http-nio-8080-exec-1] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@26eca6d9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 2022-08-15 17:16:37.941 [http-nio-8080-exec-1] Table - No alter strings for table : boards
[DEBUG] 2022-08-15 17:16:37.941 [http-nio-8080-exec-1] Table - No alter strings for table : cards
[DEBUG] 2022-08-15 17:16:37.941 [http-nio-8080-exec-1] Table - No alter strings for table : members
[DEBUG] 2022-08-15 17:16:37.941 [http-nio-8080-exec-1] Table - No alter strings for table : teams
[DEBUG] 2022-08-15 17:16:37.942 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-08-15 17:16:37.942 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-08-15 17:16:37.945 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-08-15 17:16:37.945 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-08-15 17:16:37.945 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-08-15 17:16:37.945 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-08-15 17:16:37.947 [http-nio-8080-exec-1] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:16:37.950 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3d56b40f
[DEBUG] 2022-08-15 17:16:37.950 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: d1c60999-934c-411a-b84f-9dfe6c7b3f2a (<unnamed>)
[DEBUG] 2022-08-15 17:16:37.950 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-08-15 17:16:37.978 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-08-15 17:16:37.980 [http-nio-8080-exec-1] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:16:37.980 [http-nio-8080-exec-1] TransactionImpl - begin
[DEBUG] 2022-08-15 17:16:37.986 [http-nio-8080-exec-1] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5e673668
[DEBUG] 2022-08-15 17:16:37.997 [http-nio-8080-exec-1] QueryTranslatorImpl - parse() - HQL: FROM com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:16:37.999 [http-nio-8080-exec-1] ErrorTracker - Keyword  'member' is being interpreted as an identifier due to: expecting IDENT, found 'member'
[DEBUG] 2022-08-15 17:16:38.000 [http-nio-8080-exec-1] ErrorTracker - Keyword  'Member' is being interpreted as an identifier due to: expecting IDENT, found 'Member'
[DEBUG] 2022-08-15 17:16:38.000 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-08-15 17:16:38.003 [http-nio-8080-exec-1] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'com'
                |  |  |  \-[IDENT] Node: 'revature'
                |  |  \-[IDENT] Node: 'nabnak'
                |  \-[WEIRD_IDENT] Node: 'member'
                \-[WEIRD_IDENT] Node: 'Member'

[DEBUG] 2022-08-15 17:16:38.012 [http-nio-8080-exec-1] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2022-08-15 17:16:38.017 [http-nio-8080-exec-1] FromElement - FromClause{level=1} : com.revature.nabnak.member.Member (<no alias>) -> member0_
[DEBUG] 2022-08-15 17:16:38.017 [http-nio-8080-exec-1] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2022-08-15 17:16:38.017 [http-nio-8080-exec-1] HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} members member0_ ) )
[DEBUG] 2022-08-15 17:16:38.019 [http-nio-8080-exec-1] HqlSqlWalker - Derived SELECT clause created.
[DEBUG] 2022-08-15 17:16:38.020 [http-nio-8080-exec-1] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Member): [members]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.revature.nabnak.member.Member)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[DEBUG] 2022-08-15 17:16:38.022 [http-nio-8080-exec-1] JoinProcessor - Using FROM fragment [members member0_]
[DEBUG] 2022-08-15 17:16:38.022 [http-nio-8080-exec-1] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2022-08-15 17:16:38.022 [http-nio-8080-exec-1] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (members)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'member0_.email as email1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=members,tableAlias=member0_,origin=null,columns={,className=com.revature.nabnak.member.Member}}}
    |  \-[SQL_TOKEN] SqlFragment: 'member0_.experience_months as experien2_2_, member0_.full_name as full_nam3_2_, member0_.password as password4_2_, member0_.registration_date as registra5_2_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[member0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'members member0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=members,tableAlias=member0_,origin=null,columns={,className=com.revature.nabnak.member.Member}}

[DEBUG] 2022-08-15 17:16:38.022 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-08-15 17:16:38.025 [http-nio-8080-exec-1] QueryTranslatorImpl - HQL: FROM com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:16:38.025 [http-nio-8080-exec-1] QueryTranslatorImpl - SQL: select member0_.email as email1_2_, member0_.experience_months as experien2_2_, member0_.full_name as full_nam3_2_, member0_.password as password4_2_, member0_.registration_date as registra5_2_ from members member0_
[DEBUG] 2022-08-15 17:16:38.025 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-08-15 17:16:38.031 [http-nio-8080-exec-1] SQL - select member0_.email as email1_2_, member0_.experience_months as experien2_2_, member0_.full_name as full_nam3_2_, member0_.password as password4_2_, member0_.registration_date as registra5_2_ from members member0_
[DEBUG] 2022-08-15 17:16:38.043 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2022-08-15 17:16:38.045 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:16:38.048 [http-nio-8080-exec-1] Loader - Result set row: 1
[DEBUG] 2022-08-15 17:16:38.048 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#po@mail.com]
[DEBUG] 2022-08-15 17:16:38.048 [http-nio-8080-exec-1] Loader - Result set row: 2
[DEBUG] 2022-08-15 17:16:38.048 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#ab@mail.com]
[DEBUG] 2022-08-15 17:16:38.048 [http-nio-8080-exec-1] Loader - Result set row: 3
[DEBUG] 2022-08-15 17:16:38.048 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#cj@mail.com]
[DEBUG] 2022-08-15 17:16:38.048 [http-nio-8080-exec-1] Loader - Result set row: 4
[DEBUG] 2022-08-15 17:16:38.048 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#tb@mail.com]
[DEBUG] 2022-08-15 17:16:38.049 [http-nio-8080-exec-1] Loader - Result set row: 5
[DEBUG] 2022-08-15 17:16:38.049 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#hh@mail.com]
[DEBUG] 2022-08-15 17:16:38.049 [http-nio-8080-exec-1] Loader - Result set row: 6
[DEBUG] 2022-08-15 17:16:38.049 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#hhs@mail.com]
[DEBUG] 2022-08-15 17:16:38.049 [http-nio-8080-exec-1] Loader - Result set row: 7
[DEBUG] 2022-08-15 17:16:38.049 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#js@mail.com]
[DEBUG] 2022-08-15 17:16:38.050 [http-nio-8080-exec-1] Loader - Result set row: 8
[DEBUG] 2022-08-15 17:16:38.050 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#ws@mail.com]
[DEBUG] 2022-08-15 17:16:38.050 [http-nio-8080-exec-1] Loader - Result set row: 9
[DEBUG] 2022-08-15 17:16:38.050 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#rc@mail.com]
[DEBUG] 2022-08-15 17:16:38.050 [http-nio-8080-exec-1] Loader - Result set row: 10
[DEBUG] 2022-08-15 17:16:38.050 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:16:38.050 [http-nio-8080-exec-1] Loader - Result set row: 11
[DEBUG] 2022-08-15 17:16:38.050 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#mf@mail.com]
[DEBUG] 2022-08-15 17:16:38.051 [http-nio-8080-exec-1] Loader - Result set row: 12
[DEBUG] 2022-08-15 17:16:38.051 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#dr@mail.com]
[DEBUG] 2022-08-15 17:16:38.052 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:16:38.053 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 2400
[DEBUG] 2022-08-15 17:16:38.053 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.053 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `fullName` : value = Adam Ranieri
[DEBUG] 2022-08-15 17:16:38.053 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.053 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = gatorFan
[DEBUG] 2022-08-15 17:16:38.053 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.053 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-07-06
[DEBUG] 2022-08-15 17:16:38.054 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.055 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:16:38.055 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#po@mail.com]
[DEBUG] 2022-08-15 17:16:38.055 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 12
[DEBUG] 2022-08-15 17:16:38.055 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.055 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `fullName` : value = Patrick Orwin
[DEBUG] 2022-08-15 17:16:38.055 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.055 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = notThatPatrick
[DEBUG] 2022-08-15 17:16:38.055 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.055 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-07-22
[DEBUG] 2022-08-15 17:16:38.056 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.056 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#po@mail.com]
[DEBUG] 2022-08-15 17:16:38.056 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#ab@mail.com]
[DEBUG] 2022-08-15 17:16:38.056 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 180
[DEBUG] 2022-08-15 17:16:38.056 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.056 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `fullName` : value = Ashwin Bharath
[DEBUG] 2022-08-15 17:16:38.056 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.056 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = coolBoss
[DEBUG] 2022-08-15 17:16:38.056 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.056 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-06-18
[DEBUG] 2022-08-15 17:16:38.056 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.057 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#ab@mail.com]
[DEBUG] 2022-08-15 17:16:38.057 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#cj@mail.com]
[DEBUG] 2022-08-15 17:16:38.057 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 18
[DEBUG] 2022-08-15 17:16:38.057 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.057 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `fullName` : value = Charles Jester
[DEBUG] 2022-08-15 17:16:38.057 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.057 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = pass
[DEBUG] 2022-08-15 17:16:38.057 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.057 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-01-01
[DEBUG] 2022-08-15 17:16:38.057 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.058 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#cj@mail.com]
[DEBUG] 2022-08-15 17:16:38.058 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#tb@mail.com]
[DEBUG] 2022-08-15 17:16:38.058 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 48
[DEBUG] 2022-08-15 17:16:38.058 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.058 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `fullName` : value = Ted Balashov
[DEBUG] 2022-08-15 17:16:38.058 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.058 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = tedTalk
[DEBUG] 2022-08-15 17:16:38.058 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.058 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-04
[DEBUG] 2022-08-15 17:16:38.058 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.058 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#tb@mail.com]
[DEBUG] 2022-08-15 17:16:38.058 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#hh@mail.com]
[DEBUG] 2022-08-15 17:16:38.059 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 48
[DEBUG] 2022-08-15 17:16:38.059 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.059 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `fullName` : value = Harvey Hill
[DEBUG] 2022-08-15 17:16:38.059 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.059 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = d&dGod
[DEBUG] 2022-08-15 17:16:38.059 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.059 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-04
[DEBUG] 2022-08-15 17:16:38.059 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.059 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#hh@mail.com]
[DEBUG] 2022-08-15 17:16:38.059 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#hhs@mail.com]
[DEBUG] 2022-08-15 17:16:38.059 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 36
[DEBUG] 2022-08-15 17:16:38.059 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.060 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `fullName` : value = Henry Hsieh
[DEBUG] 2022-08-15 17:16:38.060 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.060 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = plaidShirt
[DEBUG] 2022-08-15 17:16:38.060 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.060 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-04
[DEBUG] 2022-08-15 17:16:38.060 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.060 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#hhs@mail.com]
[DEBUG] 2022-08-15 17:16:38.060 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#js@mail.com]
[DEBUG] 2022-08-15 17:16:38.060 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 12
[DEBUG] 2022-08-15 17:16:38.060 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.060 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `fullName` : value = Jesse Sabbath
[DEBUG] 2022-08-15 17:16:38.060 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.061 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = cabbage
[DEBUG] 2022-08-15 17:16:38.061 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.061 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-04
[DEBUG] 2022-08-15 17:16:38.061 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.061 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#js@mail.com]
[DEBUG] 2022-08-15 17:16:38.061 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#ws@mail.com]
[DEBUG] 2022-08-15 17:16:38.061 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 70
[DEBUG] 2022-08-15 17:16:38.061 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.061 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `fullName` : value = Wezley Singleton
[DEBUG] 2022-08-15 17:16:38.061 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.061 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = yesTheDesignPattern
[DEBUG] 2022-08-15 17:16:38.062 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.062 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-04
[DEBUG] 2022-08-15 17:16:38.062 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.062 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#ws@mail.com]
[DEBUG] 2022-08-15 17:16:38.062 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#rc@mail.com]
[DEBUG] 2022-08-15 17:16:38.062 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 240
[DEBUG] 2022-08-15 17:16:38.062 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.062 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `fullName` : value = Rei Cronje
[DEBUG] 2022-08-15 17:16:38.062 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.062 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = cheesecakeWizard
[DEBUG] 2022-08-15 17:16:38.062 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.062 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-07-06
[DEBUG] 2022-08-15 17:16:38.063 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.063 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#rc@mail.com]
[DEBUG] 2022-08-15 17:16:38.063 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:16:38.063 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 240
[DEBUG] 2022-08-15 17:16:38.063 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.063 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `fullName` : value = Jeffrey Jourdan
[DEBUG] 2022-08-15 17:16:38.063 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.063 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = bmwSeatWarmers
[DEBUG] 2022-08-15 17:16:38.063 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.063 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-12
[DEBUG] 2022-08-15 17:16:38.063 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.064 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:16:38.064 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#mf@mail.com]
[DEBUG] 2022-08-15 17:16:38.064 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 240
[DEBUG] 2022-08-15 17:16:38.064 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.064 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `fullName` : value = Mark Ferrara
[DEBUG] 2022-08-15 17:16:38.064 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.064 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = Strange
[DEBUG] 2022-08-15 17:16:38.064 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.064 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-12
[DEBUG] 2022-08-15 17:16:38.064 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.064 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#mf@mail.com]
[DEBUG] 2022-08-15 17:16:38.064 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#dr@mail.com]
[DEBUG] 2022-08-15 17:16:38.065 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 240
[DEBUG] 2022-08-15 17:16:38.065 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.065 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `fullName` : value = Davontaye Robinson
[DEBUG] 2022-08-15 17:16:38.065 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.065 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = yayyy
[DEBUG] 2022-08-15 17:16:38.065 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.065 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-12
[DEBUG] 2022-08-15 17:16:38.065 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:16:38.065 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#dr@mail.com]
[DEBUG] 2022-08-15 17:16:38.067 [http-nio-8080-exec-1] TransactionImpl - committing
[DEBUG] 2022-08-15 17:16:38.067 [http-nio-8080-exec-1] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2022-08-15 17:16:38.070 [http-nio-8080-exec-1] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2022-08-15 17:16:38.072 [http-nio-8080-exec-1] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 13 objects
[DEBUG] 2022-08-15 17:16:38.072 [http-nio-8080-exec-1] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2022-08-15 17:16:38.073 [http-nio-8080-exec-1] EntityPrinter - Listing entities:
[DEBUG] 2022-08-15 17:16:38.073 [http-nio-8080-exec-1] EntityPrinter - com.revature.nabnak.member.Member{password=plaidShirt, experienceMonths=36, registrationDate=2022-08-04, fullName=Henry Hsieh, email=hhs@mail.com}
[DEBUG] 2022-08-15 17:16:38.073 [http-nio-8080-exec-1] EntityPrinter - com.revature.nabnak.member.Member{password=notThatPatrick, experienceMonths=12, registrationDate=2022-07-22, fullName=Patrick Orwin, email=po@mail.com}
[DEBUG] 2022-08-15 17:16:38.073 [http-nio-8080-exec-1] EntityPrinter - com.revature.nabnak.member.Member{password=coolBoss, experienceMonths=180, registrationDate=2022-06-18, fullName=Ashwin Bharath, email=ab@mail.com}
[DEBUG] 2022-08-15 17:16:38.073 [http-nio-8080-exec-1] EntityPrinter - com.revature.nabnak.member.Member{password=pass, experienceMonths=18, registrationDate=2022-01-01, fullName=Charles Jester, email=cj@mail.com}
[DEBUG] 2022-08-15 17:16:38.073 [http-nio-8080-exec-1] EntityPrinter - com.revature.nabnak.member.Member{password=d&dGod, experienceMonths=48, registrationDate=2022-08-04, fullName=Harvey Hill, email=hh@mail.com}
[DEBUG] 2022-08-15 17:16:38.073 [http-nio-8080-exec-1] EntityPrinter - com.revature.nabnak.member.Member{password=yayyy, experienceMonths=240, registrationDate=2022-08-12, fullName=Davontaye Robinson, email=dr@mail.com}
[DEBUG] 2022-08-15 17:16:38.073 [http-nio-8080-exec-1] EntityPrinter - com.revature.nabnak.member.Member{password=bmwSeatWarmers, experienceMonths=240, registrationDate=2022-08-12, fullName=Jeffrey Jourdan, email=jj@mail.com}
[DEBUG] 2022-08-15 17:16:38.073 [http-nio-8080-exec-1] EntityPrinter - com.revature.nabnak.member.Member{password=yesTheDesignPattern, experienceMonths=70, registrationDate=2022-08-04, fullName=Wezley Singleton, email=ws@mail.com}
[DEBUG] 2022-08-15 17:16:38.073 [http-nio-8080-exec-1] EntityPrinter - com.revature.nabnak.member.Member{password=tedTalk, experienceMonths=48, registrationDate=2022-08-04, fullName=Ted Balashov, email=tb@mail.com}
[DEBUG] 2022-08-15 17:16:38.073 [http-nio-8080-exec-1] EntityPrinter - com.revature.nabnak.member.Member{password=cabbage, experienceMonths=12, registrationDate=2022-08-04, fullName=Jesse Sabbath, email=js@mail.com}
[DEBUG] 2022-08-15 17:16:38.073 [http-nio-8080-exec-1] EntityPrinter - com.revature.nabnak.member.Member{password=cheesecakeWizard, experienceMonths=240, registrationDate=2022-07-06, fullName=Rei Cronje, email=rc@mail.com}
[DEBUG] 2022-08-15 17:16:38.073 [http-nio-8080-exec-1] EntityPrinter - com.revature.nabnak.member.Member{password=Strange, experienceMonths=240, registrationDate=2022-08-12, fullName=Mark Ferrara, email=mf@mail.com}
[DEBUG] 2022-08-15 17:16:38.073 [http-nio-8080-exec-1] EntityPrinter - com.revature.nabnak.member.Member{password=gatorFan, experienceMonths=2400, registrationDate=2022-07-06, fullName=Adam Ranieri, email=ar@mail.com}
[DEBUG] 2022-08-15 17:16:38.082 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:16:38.082 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:17:07.491 [Hibernate Connection Pool Validation Thread] DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
[DEBUG] 2022-08-15 17:21:13.605 [http-nio-8080-exec-4] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:21:13.605 [http-nio-8080-exec-4] TransactionImpl - begin
[DEBUG] 2022-08-15 17:21:13.605 [http-nio-8080-exec-4] QueryTranslatorImpl - parse() - HQL: from com.revature.nabnak.member.Member where email= :email and password= :password
[DEBUG] 2022-08-15 17:21:13.606 [http-nio-8080-exec-4] ErrorTracker - Keyword  'member' is being interpreted as an identifier due to: expecting IDENT, found 'member'
[DEBUG] 2022-08-15 17:21:13.606 [http-nio-8080-exec-4] ErrorTracker - Keyword  'Member' is being interpreted as an identifier due to: expecting IDENT, found 'Member'
[DEBUG] 2022-08-15 17:21:13.606 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-08-15 17:21:13.606 [http-nio-8080-exec-4] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'revature'
    |           |  |  \-[IDENT] Node: 'nabnak'
    |           |  \-[WEIRD_IDENT] Node: 'member'
    |           \-[WEIRD_IDENT] Node: 'Member'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'email'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'email'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

[DEBUG] 2022-08-15 17:21:13.606 [http-nio-8080-exec-4] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2022-08-15 17:21:13.607 [http-nio-8080-exec-4] FromElement - FromClause{level=1} : com.revature.nabnak.member.Member (<no alias>) -> member0_
[DEBUG] 2022-08-15 17:21:13.607 [http-nio-8080-exec-4] FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
[DEBUG] 2022-08-15 17:21:13.608 [http-nio-8080-exec-4] DotNode - getDataType() : email -> org.hibernate.type.StringType@494a5276
[DEBUG] 2022-08-15 17:21:13.608 [http-nio-8080-exec-4] FromReferenceNode - Resolved : {synthetic-alias}.email -> member0_.email
[DEBUG] 2022-08-15 17:21:13.609 [http-nio-8080-exec-4] FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
[DEBUG] 2022-08-15 17:21:13.609 [http-nio-8080-exec-4] DotNode - getDataType() : password -> org.hibernate.type.StringType@494a5276
[DEBUG] 2022-08-15 17:21:13.609 [http-nio-8080-exec-4] FromReferenceNode - Resolved : {synthetic-alias}.password -> member0_.password
[DEBUG] 2022-08-15 17:21:13.609 [http-nio-8080-exec-4] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2022-08-15 17:21:13.609 [http-nio-8080-exec-4] HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} members member0_ ) ( where ( and ( = ( member0_.email {synthetic-alias} email ) ? ) ( = ( member0_.password {synthetic-alias} password ) ? ) ) ) )
[DEBUG] 2022-08-15 17:21:13.609 [http-nio-8080-exec-4] HqlSqlWalker - Derived SELECT clause created.
[DEBUG] 2022-08-15 17:21:13.610 [http-nio-8080-exec-4] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Member): [members]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.revature.nabnak.member.Member)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.revature.nabnak.member.Member)
          |  | path: {synthetic-alias}.email
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.revature.nabnak.member.Member)
          |  |  | originalText: {synthetic-alias}
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: email
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.revature.nabnak.member.Member)
             | path: {synthetic-alias}.password
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.revature.nabnak.member.Member)
             |  | originalText: {synthetic-alias}
             |  \-IdentNode
             |    persister: null
             |    originalText: password
             \-ParameterNode

[DEBUG] 2022-08-15 17:21:13.610 [http-nio-8080-exec-4] JoinProcessor - Using FROM fragment [members member0_]
[DEBUG] 2022-08-15 17:21:13.610 [http-nio-8080-exec-4] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2022-08-15 17:21:13.610 [http-nio-8080-exec-4] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (members)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'member0_.email as email1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=members,tableAlias=member0_,origin=null,columns={,className=com.revature.nabnak.member.Member}}}
    |  \-[SQL_TOKEN] SqlFragment: 'member0_.experience_months as experien2_2_, member0_.full_name as full_nam3_2_, member0_.password as password4_2_, member0_.registration_date as registra5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[member0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'members member0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=members,tableAlias=member0_,origin=null,columns={,className=com.revature.nabnak.member.Member}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'member0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path={synthetic-alias}.email,tableAlias=member0_,className=com.revature.nabnak.member.Member,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'email' {originalText=email}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@494a5276}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'member0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=member0_,className=com.revature.nabnak.member.Member,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@494a5276}

[DEBUG] 2022-08-15 17:21:13.610 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-08-15 17:21:13.610 [http-nio-8080-exec-4] QueryTranslatorImpl - HQL: from com.revature.nabnak.member.Member where email= :email and password= :password
[DEBUG] 2022-08-15 17:21:13.610 [http-nio-8080-exec-4] QueryTranslatorImpl - SQL: select member0_.email as email1_2_, member0_.experience_months as experien2_2_, member0_.full_name as full_nam3_2_, member0_.password as password4_2_, member0_.registration_date as registra5_2_ from members member0_ where member0_.email=? and member0_.password=?
[DEBUG] 2022-08-15 17:21:13.610 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-08-15 17:21:13.612 [http-nio-8080-exec-4] SQL - select member0_.email as email1_2_, member0_.experience_months as experien2_2_, member0_.full_name as full_nam3_2_, member0_.password as password4_2_, member0_.registration_date as registra5_2_ from members member0_ where member0_.email=? and member0_.password=?
[DEBUG] 2022-08-15 17:21:13.624 [http-nio-8080-exec-4] Loader - Result set row: 0
[DEBUG] 2022-08-15 17:21:13.624 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:21:13.624 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 2400
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `fullName` : value = Adam Ranieri
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = gatorFan
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-07-06
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] TransactionImpl - committing
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2022-08-15 17:21:13.625 [http-nio-8080-exec-4] EntityPrinter - Listing entities:
[DEBUG] 2022-08-15 17:21:13.626 [http-nio-8080-exec-4] EntityPrinter - com.revature.nabnak.member.Member{password=gatorFan, experienceMonths=2400, registrationDate=2022-07-06, fullName=Adam Ranieri, email=ar@mail.com}
[DEBUG] 2022-08-15 17:21:13.636 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:21:13.636 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:21:17.770 [http-nio-8080-exec-5] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:21:17.771 [http-nio-8080-exec-5] TransactionImpl - begin
[DEBUG] 2022-08-15 17:21:17.771 [http-nio-8080-exec-5] SQL - select member0_.email as email1_2_, member0_.experience_months as experien2_2_, member0_.full_name as full_nam3_2_, member0_.password as password4_2_, member0_.registration_date as registra5_2_ from members member0_
[DEBUG] 2022-08-15 17:21:17.781 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2022-08-15 17:21:17.781 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:21:17.782 [http-nio-8080-exec-5] Loader - Result set row: 1
[DEBUG] 2022-08-15 17:21:17.782 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#po@mail.com]
[DEBUG] 2022-08-15 17:21:17.782 [http-nio-8080-exec-5] Loader - Result set row: 2
[DEBUG] 2022-08-15 17:21:17.782 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#ab@mail.com]
[DEBUG] 2022-08-15 17:21:17.782 [http-nio-8080-exec-5] Loader - Result set row: 3
[DEBUG] 2022-08-15 17:21:17.782 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#cj@mail.com]
[DEBUG] 2022-08-15 17:21:17.782 [http-nio-8080-exec-5] Loader - Result set row: 4
[DEBUG] 2022-08-15 17:21:17.782 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#tb@mail.com]
[DEBUG] 2022-08-15 17:21:17.783 [http-nio-8080-exec-5] Loader - Result set row: 5
[DEBUG] 2022-08-15 17:21:17.783 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#hh@mail.com]
[DEBUG] 2022-08-15 17:21:17.783 [http-nio-8080-exec-5] Loader - Result set row: 6
[DEBUG] 2022-08-15 17:21:17.783 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#hhs@mail.com]
[DEBUG] 2022-08-15 17:21:17.783 [http-nio-8080-exec-5] Loader - Result set row: 7
[DEBUG] 2022-08-15 17:21:17.783 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#js@mail.com]
[DEBUG] 2022-08-15 17:21:17.783 [http-nio-8080-exec-5] Loader - Result set row: 8
[DEBUG] 2022-08-15 17:21:17.783 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#ws@mail.com]
[DEBUG] 2022-08-15 17:21:17.783 [http-nio-8080-exec-5] Loader - Result set row: 9
[DEBUG] 2022-08-15 17:21:17.783 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#rc@mail.com]
[DEBUG] 2022-08-15 17:21:17.783 [http-nio-8080-exec-5] Loader - Result set row: 10
[DEBUG] 2022-08-15 17:21:17.783 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] Loader - Result set row: 11
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#mf@mail.com]
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] Loader - Result set row: 12
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#dr@mail.com]
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 2400
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `fullName` : value = Adam Ranieri
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = gatorFan
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-07-06
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#po@mail.com]
[DEBUG] 2022-08-15 17:21:17.784 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 12
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `fullName` : value = Patrick Orwin
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = notThatPatrick
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-07-22
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#po@mail.com]
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#ab@mail.com]
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 180
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `fullName` : value = Ashwin Bharath
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = coolBoss
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-06-18
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#ab@mail.com]
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#cj@mail.com]
[DEBUG] 2022-08-15 17:21:17.785 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 18
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `fullName` : value = Charles Jester
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = pass
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-01-01
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#cj@mail.com]
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#tb@mail.com]
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 48
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `fullName` : value = Ted Balashov
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = tedTalk
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-04
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#tb@mail.com]
[DEBUG] 2022-08-15 17:21:17.786 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#hh@mail.com]
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 48
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `fullName` : value = Harvey Hill
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = d&dGod
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-04
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#hh@mail.com]
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#hhs@mail.com]
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 36
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `fullName` : value = Henry Hsieh
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = plaidShirt
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-04
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#hhs@mail.com]
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#js@mail.com]
[DEBUG] 2022-08-15 17:21:17.787 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 12
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `fullName` : value = Jesse Sabbath
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = cabbage
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-04
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#js@mail.com]
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#ws@mail.com]
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 70
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `fullName` : value = Wezley Singleton
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = yesTheDesignPattern
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-04
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#ws@mail.com]
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#rc@mail.com]
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 240
[DEBUG] 2022-08-15 17:21:17.788 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `fullName` : value = Rei Cronje
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = cheesecakeWizard
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-07-06
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#rc@mail.com]
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 240
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `fullName` : value = Jeffrey Jourdan
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = bmwSeatWarmers
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-12
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#mf@mail.com]
[DEBUG] 2022-08-15 17:21:17.789 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 240
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `fullName` : value = Mark Ferrara
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = Strange
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-12
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#mf@mail.com]
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#dr@mail.com]
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 240
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `fullName` : value = Davontaye Robinson
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = yayyy
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-12
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:21:17.790 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#dr@mail.com]
[DEBUG] 2022-08-15 17:21:17.791 [http-nio-8080-exec-5] TransactionImpl - committing
[DEBUG] 2022-08-15 17:21:17.791 [http-nio-8080-exec-5] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2022-08-15 17:21:17.791 [http-nio-8080-exec-5] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2022-08-15 17:21:17.791 [http-nio-8080-exec-5] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 13 objects
[DEBUG] 2022-08-15 17:21:17.791 [http-nio-8080-exec-5] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2022-08-15 17:21:17.791 [http-nio-8080-exec-5] EntityPrinter - Listing entities:
[DEBUG] 2022-08-15 17:21:17.791 [http-nio-8080-exec-5] EntityPrinter - com.revature.nabnak.member.Member{password=plaidShirt, experienceMonths=36, registrationDate=2022-08-04, fullName=Henry Hsieh, email=hhs@mail.com}
[DEBUG] 2022-08-15 17:21:17.791 [http-nio-8080-exec-5] EntityPrinter - com.revature.nabnak.member.Member{password=notThatPatrick, experienceMonths=12, registrationDate=2022-07-22, fullName=Patrick Orwin, email=po@mail.com}
[DEBUG] 2022-08-15 17:21:17.791 [http-nio-8080-exec-5] EntityPrinter - com.revature.nabnak.member.Member{password=coolBoss, experienceMonths=180, registrationDate=2022-06-18, fullName=Ashwin Bharath, email=ab@mail.com}
[DEBUG] 2022-08-15 17:21:17.791 [http-nio-8080-exec-5] EntityPrinter - com.revature.nabnak.member.Member{password=pass, experienceMonths=18, registrationDate=2022-01-01, fullName=Charles Jester, email=cj@mail.com}
[DEBUG] 2022-08-15 17:21:17.791 [http-nio-8080-exec-5] EntityPrinter - com.revature.nabnak.member.Member{password=d&dGod, experienceMonths=48, registrationDate=2022-08-04, fullName=Harvey Hill, email=hh@mail.com}
[DEBUG] 2022-08-15 17:21:17.792 [http-nio-8080-exec-5] EntityPrinter - com.revature.nabnak.member.Member{password=yayyy, experienceMonths=240, registrationDate=2022-08-12, fullName=Davontaye Robinson, email=dr@mail.com}
[DEBUG] 2022-08-15 17:21:17.792 [http-nio-8080-exec-5] EntityPrinter - com.revature.nabnak.member.Member{password=bmwSeatWarmers, experienceMonths=240, registrationDate=2022-08-12, fullName=Jeffrey Jourdan, email=jj@mail.com}
[DEBUG] 2022-08-15 17:21:17.792 [http-nio-8080-exec-5] EntityPrinter - com.revature.nabnak.member.Member{password=yesTheDesignPattern, experienceMonths=70, registrationDate=2022-08-04, fullName=Wezley Singleton, email=ws@mail.com}
[DEBUG] 2022-08-15 17:21:17.792 [http-nio-8080-exec-5] EntityPrinter - com.revature.nabnak.member.Member{password=tedTalk, experienceMonths=48, registrationDate=2022-08-04, fullName=Ted Balashov, email=tb@mail.com}
[DEBUG] 2022-08-15 17:21:17.792 [http-nio-8080-exec-5] EntityPrinter - com.revature.nabnak.member.Member{password=cabbage, experienceMonths=12, registrationDate=2022-08-04, fullName=Jesse Sabbath, email=js@mail.com}
[DEBUG] 2022-08-15 17:21:17.792 [http-nio-8080-exec-5] EntityPrinter - com.revature.nabnak.member.Member{password=cheesecakeWizard, experienceMonths=240, registrationDate=2022-07-06, fullName=Rei Cronje, email=rc@mail.com}
[DEBUG] 2022-08-15 17:21:17.792 [http-nio-8080-exec-5] EntityPrinter - com.revature.nabnak.member.Member{password=Strange, experienceMonths=240, registrationDate=2022-08-12, fullName=Mark Ferrara, email=mf@mail.com}
[DEBUG] 2022-08-15 17:21:17.792 [http-nio-8080-exec-5] EntityPrinter - com.revature.nabnak.member.Member{password=gatorFan, experienceMonths=2400, registrationDate=2022-07-06, fullName=Adam Ranieri, email=ar@mail.com}
[DEBUG] 2022-08-15 17:21:17.800 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:21:17.800 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[INFO ] 2022-08-15 17:21:20.025 [http-nio-8080-exec-6] MemberServlet - Email entered ar@mail.com
[DEBUG] 2022-08-15 17:21:20.025 [http-nio-8080-exec-6] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:21:20.025 [http-nio-8080-exec-6] TransactionImpl - begin
[DEBUG] 2022-08-15 17:21:20.030 [http-nio-8080-exec-6] TransactionImpl - committing
[DEBUG] 2022-08-15 17:21:20.030 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:21:20.030 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[INFO ] 2022-08-15 17:24:40.298 [http-nio-8080-exec-2] MemberServlet - Email entered ar@mail.com
[DEBUG] 2022-08-15 17:24:40.310 [http-nio-8080-exec-2] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 17:24:40.313 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:24:40.314 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:24:40.316 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 17:24:40.326 [http-nio-8080-exec-2] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-08-15 17:24:40.327 [http-nio-8080-exec-2] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.postgresql.Driver, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 17:24:40.400 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:24:40.400 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:24:40.401 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 17:24:40.403 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 17:24:40.403 [http-nio-8080-exec-2] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 17:24:40.408 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 17:24:40.409 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 17:24:40.417 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 17:24:40.431 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5e80f783
[DEBUG] 2022-08-15 17:24:40.431 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5e80f783
[DEBUG] 2022-08-15 17:24:40.432 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5e80f783
[DEBUG] 2022-08-15 17:24:40.432 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2b230338
[DEBUG] 2022-08-15 17:24:40.432 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7ccbaafb
[DEBUG] 2022-08-15 17:24:40.432 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7fe8b66a
[DEBUG] 2022-08-15 17:24:40.433 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@903c01e
[DEBUG] 2022-08-15 17:24:40.433 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@903c01e
[DEBUG] 2022-08-15 17:24:40.433 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@903c01e
[DEBUG] 2022-08-15 17:24:40.434 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7d370cf9
[DEBUG] 2022-08-15 17:24:40.434 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7d370cf9
[DEBUG] 2022-08-15 17:24:40.434 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d370cf9
[DEBUG] 2022-08-15 17:24:40.434 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@493cdbc9
[DEBUG] 2022-08-15 17:24:40.434 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@493cdbc9
[DEBUG] 2022-08-15 17:24:40.435 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@493cdbc9
[DEBUG] 2022-08-15 17:24:40.435 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4de4f554
[DEBUG] 2022-08-15 17:24:40.435 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4de4f554
[DEBUG] 2022-08-15 17:24:40.435 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4de4f554
[DEBUG] 2022-08-15 17:24:40.436 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6285daf7
[DEBUG] 2022-08-15 17:24:40.436 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6285daf7
[DEBUG] 2022-08-15 17:24:40.436 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6285daf7
[DEBUG] 2022-08-15 17:24:40.436 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@511163ef
[DEBUG] 2022-08-15 17:24:40.437 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@511163ef
[DEBUG] 2022-08-15 17:24:40.437 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@511163ef
[DEBUG] 2022-08-15 17:24:40.437 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2bc69fd
[DEBUG] 2022-08-15 17:24:40.437 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2bc69fd
[DEBUG] 2022-08-15 17:24:40.437 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2bc69fd
[DEBUG] 2022-08-15 17:24:40.438 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31ee093f
[DEBUG] 2022-08-15 17:24:40.438 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31ee093f
[DEBUG] 2022-08-15 17:24:40.438 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@32564d69
[DEBUG] 2022-08-15 17:24:40.439 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@32564d69
[DEBUG] 2022-08-15 17:24:40.439 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1e531cda
[DEBUG] 2022-08-15 17:24:40.439 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1e531cda
[DEBUG] 2022-08-15 17:24:40.439 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@161438e3
[DEBUG] 2022-08-15 17:24:40.440 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4dadfd95
[DEBUG] 2022-08-15 17:24:40.440 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5291c22b
[DEBUG] 2022-08-15 17:24:40.440 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5291c22b
[DEBUG] 2022-08-15 17:24:40.441 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2edea670
[DEBUG] 2022-08-15 17:24:40.441 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2edea670
[DEBUG] 2022-08-15 17:24:40.448 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1ae27919
[DEBUG] 2022-08-15 17:24:40.448 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1ae27919
[DEBUG] 2022-08-15 17:24:40.449 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@70d23f25
[DEBUG] 2022-08-15 17:24:40.449 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@70d23f25
[DEBUG] 2022-08-15 17:24:40.449 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@57e6a513
[DEBUG] 2022-08-15 17:24:40.450 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@57e6a513
[DEBUG] 2022-08-15 17:24:40.450 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6bee2558
[DEBUG] 2022-08-15 17:24:40.450 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6bee2558
[DEBUG] 2022-08-15 17:24:40.451 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@50c192ee
[DEBUG] 2022-08-15 17:24:40.451 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@50c192ee
[DEBUG] 2022-08-15 17:24:40.452 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@324339c0
[DEBUG] 2022-08-15 17:24:40.452 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@324339c0
[DEBUG] 2022-08-15 17:24:40.453 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1901c03e
[DEBUG] 2022-08-15 17:24:40.453 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1901c03e
[DEBUG] 2022-08-15 17:24:40.454 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@56880cd6
[DEBUG] 2022-08-15 17:24:40.454 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@56880cd6
[DEBUG] 2022-08-15 17:24:40.455 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5ecaf8e0
[DEBUG] 2022-08-15 17:24:40.455 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5ecaf8e0
[DEBUG] 2022-08-15 17:24:40.455 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@25f1ae11
[DEBUG] 2022-08-15 17:24:40.456 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25f1ae11
[DEBUG] 2022-08-15 17:24:40.456 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25f1ae11
[DEBUG] 2022-08-15 17:24:40.456 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28193649
[DEBUG] 2022-08-15 17:24:40.457 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@53448225
[DEBUG] 2022-08-15 17:24:40.457 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@53448225
[DEBUG] 2022-08-15 17:24:40.457 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@53448225
[DEBUG] 2022-08-15 17:24:40.457 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@41fb419c
[DEBUG] 2022-08-15 17:24:40.458 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3790b70d
[DEBUG] 2022-08-15 17:24:40.458 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@588719c3
[DEBUG] 2022-08-15 17:24:40.458 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@588719c3
[DEBUG] 2022-08-15 17:24:40.459 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@20017b1f
[DEBUG] 2022-08-15 17:24:40.459 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20017b1f
[DEBUG] 2022-08-15 17:24:40.459 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b60cfdd
[DEBUG] 2022-08-15 17:24:40.459 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b60cfdd
[DEBUG] 2022-08-15 17:24:40.460 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@57e13f07
[DEBUG] 2022-08-15 17:24:40.460 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@57e13f07
[DEBUG] 2022-08-15 17:24:40.460 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7b57447b
[DEBUG] 2022-08-15 17:24:40.460 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7b57447b
[DEBUG] 2022-08-15 17:24:40.461 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@48665384
[DEBUG] 2022-08-15 17:24:40.461 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@679cb7dd
[DEBUG] 2022-08-15 17:24:40.461 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@679cb7dd
[DEBUG] 2022-08-15 17:24:40.461 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@679cb7dd
[DEBUG] 2022-08-15 17:24:40.462 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54e464a1
[DEBUG] 2022-08-15 17:24:40.462 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54e464a1
[DEBUG] 2022-08-15 17:24:40.462 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54e464a1
[DEBUG] 2022-08-15 17:24:40.463 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6327e182
[DEBUG] 2022-08-15 17:24:40.463 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7a51edeb
[DEBUG] 2022-08-15 17:24:40.463 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@378c23b1
[DEBUG] 2022-08-15 17:24:40.463 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@378c23b1
[DEBUG] 2022-08-15 17:24:40.463 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@378c23b1
[DEBUG] 2022-08-15 17:24:40.464 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3bec2e01
[DEBUG] 2022-08-15 17:24:40.464 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3bec2e01
[DEBUG] 2022-08-15 17:24:40.464 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3bec2e01
[DEBUG] 2022-08-15 17:24:40.464 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7b5520e9
[DEBUG] 2022-08-15 17:24:40.464 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6977766a
[DEBUG] 2022-08-15 17:24:40.465 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1dd45729
[DEBUG] 2022-08-15 17:24:40.465 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1dd45729
[DEBUG] 2022-08-15 17:24:40.465 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2decac95
[DEBUG] 2022-08-15 17:24:40.466 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@59b6b3f3
[DEBUG] 2022-08-15 17:24:40.466 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@59b6b3f3
[DEBUG] 2022-08-15 17:24:40.467 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@14c6c8f3
[DEBUG] 2022-08-15 17:24:40.467 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@14c6c8f3
[DEBUG] 2022-08-15 17:24:40.467 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@25a66211
[DEBUG] 2022-08-15 17:24:40.467 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@636b7370
[DEBUG] 2022-08-15 17:24:40.468 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6e2ed10d
[DEBUG] 2022-08-15 17:24:40.469 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4ee0d4e2
[DEBUG] 2022-08-15 17:24:40.469 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4ee0d4e2
[DEBUG] 2022-08-15 17:24:40.470 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3b9b0b52
[DEBUG] 2022-08-15 17:24:40.470 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@73148f07
[DEBUG] 2022-08-15 17:24:40.470 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62a781c4
[DEBUG] 2022-08-15 17:24:40.470 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5b95f0d6
[DEBUG] 2022-08-15 17:24:40.470 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@38b7b16d
[DEBUG] 2022-08-15 17:24:40.470 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f8c6dcb
[DEBUG] 2022-08-15 17:24:40.470 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@317b685f
[DEBUG] 2022-08-15 17:24:40.470 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@451c3de6
[DEBUG] 2022-08-15 17:24:40.485 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 17:24:40.485 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 17:24:40.486 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:24:40.486 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:24:40.486 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 17:24:40.487 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 17:24:40.487 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 17:24:40.488 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:24:40.488 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 17:24:40.489 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 17:24:40.489 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 17:24:40.489 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 17:24:40.489 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:24:40.490 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 17:24:40.495 [http-nio-8080-exec-2] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 17:24:40.498 [http-nio-8080-exec-2] pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak]
[INFO ] 2022-08-15 17:24:40.498 [http-nio-8080-exec-2] pooling - HHH10001001: Connection properties: {user=postgres, password=javaReact1000}
[INFO ] 2022-08-15 17:24:40.498 [http-nio-8080-exec-2] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2022-08-15 17:24:40.499 [http-nio-8080-exec-2] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2022-08-15 17:24:40.500 [http-nio-8080-exec-2] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2022-08-15 17:24:40.786 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4
      major : 13
      minor : 4
[DEBUG] 2022-08-15 17:24:40.787 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
[DEBUG] 2022-08-15 17:24:40.787 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-08-15 17:24:40.793 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 17:24:40.799 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-08-15 17:24:40.844 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@73f63fdb
[DEBUG] 2022-08-15 17:24:40.844 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@73f63fdb
[DEBUG] 2022-08-15 17:24:40.844 [http-nio-8080-exec-2] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7b57447b
[DEBUG] 2022-08-15 17:24:40.845 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6833b3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7adedf7d]
[DEBUG] 2022-08-15 17:24:40.859 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-08-15 17:24:40.865 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:24:40.874 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:24:40.876 [http-nio-8080-exec-2] EntityBinder - Import with entity name Member
[DEBUG] 2022-08-15 17:24:40.877 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.member.Member on table members
[DEBUG] 2022-08-15 17:24:40.886 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:24:40.887 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:24:40.887 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:24:40.887 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2022-08-15 17:24:40.888 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:email]
[DEBUG] 2022-08-15 17:24:40.889 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2022-08-15 17:24:40.890 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2022-08-15 17:24:40.891 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
[DEBUG] 2022-08-15 17:24:40.891 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=experience_months, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:24:40.892 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property experienceMonths with lazy=false
[DEBUG] 2022-08-15 17:24:40.892 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:experienceMonths]
[DEBUG] 2022-08-15 17:24:40.892 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:24:40.892 [http-nio-8080-exec-2] PropertyBinder - Building property experienceMonths
[DEBUG] 2022-08-15 17:24:40.892 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:24:40.892 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
[DEBUG] 2022-08-15 17:24:40.892 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:fullName]
[DEBUG] 2022-08-15 17:24:40.892 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for fullName
[DEBUG] 2022-08-15 17:24:40.893 [http-nio-8080-exec-2] PropertyBinder - Building property fullName
[DEBUG] 2022-08-15 17:24:40.893 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:24:40.893 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2022-08-15 17:24:40.893 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:password]
[DEBUG] 2022-08-15 17:24:40.893 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2022-08-15 17:24:40.893 [http-nio-8080-exec-2] PropertyBinder - Building property password
[DEBUG] 2022-08-15 17:24:40.894 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=registration_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:24:40.894 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property registrationDate with lazy=false
[DEBUG] 2022-08-15 17:24:40.894 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:registrationDate]
[DEBUG] 2022-08-15 17:24:40.894 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for registrationDate
[DEBUG] 2022-08-15 17:24:40.894 [http-nio-8080-exec-2] PropertyBinder - Building property registrationDate
[DEBUG] 2022-08-15 17:24:40.897 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:24:40.898 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:24:40.898 [http-nio-8080-exec-2] EntityBinder - Import with entity name Card
[DEBUG] 2022-08-15 17:24:40.898 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.card.Card on table card
[DEBUG] 2022-08-15 17:24:40.898 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=cardId, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:24:40.898 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:24:40.898 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:24:40.899 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property cardId with lazy=false
[DEBUG] 2022-08-15 17:24:40.899 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:cardId]
[DEBUG] 2022-08-15 17:24:40.899 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for cardId
[DEBUG] 2022-08-15 17:24:40.899 [http-nio-8080-exec-2] PropertyBinder - Building property cardId
[DEBUG] 2022-08-15 17:24:40.899 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cardId)]), cardId, assigned, , ...)
[DEBUG] 2022-08-15 17:24:40.899 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:24:40.899 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2022-08-15 17:24:40.899 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:description]
[DEBUG] 2022-08-15 17:24:40.900 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2022-08-15 17:24:40.900 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2022-08-15 17:24:40.900 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=memberEmail, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:24:40.900 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property memberEmail with lazy=false
[DEBUG] 2022-08-15 17:24:40.900 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:memberEmail]
[DEBUG] 2022-08-15 17:24:40.900 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for memberEmail
[DEBUG] 2022-08-15 17:24:40.900 [http-nio-8080-exec-2] PropertyBinder - Building property memberEmail
[DEBUG] 2022-08-15 17:24:40.900 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=points, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:24:40.900 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property points with lazy=false
[DEBUG] 2022-08-15 17:24:40.900 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:points]
[DEBUG] 2022-08-15 17:24:40.900 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for points
[DEBUG] 2022-08-15 17:24:40.901 [http-nio-8080-exec-2] PropertyBinder - Building property points
[DEBUG] 2022-08-15 17:24:40.901 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:24:40.901 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2022-08-15 17:24:40.901 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:status]
[DEBUG] 2022-08-15 17:24:40.901 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2022-08-15 17:24:40.901 [http-nio-8080-exec-2] PropertyBinder - Building property status
[DEBUG] 2022-08-15 17:24:40.901 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=tech, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:24:40.901 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property tech with lazy=false
[DEBUG] 2022-08-15 17:24:40.901 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:tech]
[DEBUG] 2022-08-15 17:24:40.901 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for tech
[DEBUG] 2022-08-15 17:24:40.901 [http-nio-8080-exec-2] PropertyBinder - Building property tech
[DEBUG] 2022-08-15 17:24:40.902 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:24:40.902 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:24:40.902 [http-nio-8080-exec-2] EntityBinder - Import with entity name Team
[DEBUG] 2022-08-15 17:24:40.902 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.team.Team on table teams
[DEBUG] 2022-08-15 17:24:40.902 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:24:40.902 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:24:40.902 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:24:40.903 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2022-08-15 17:24:40.903 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamName]
[DEBUG] 2022-08-15 17:24:40.903 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for teamName
[DEBUG] 2022-08-15 17:24:40.903 [http-nio-8080-exec-2] PropertyBinder - Building property teamName
[DEBUG] 2022-08-15 17:24:40.903 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(teamName)]), teamName, assigned, , ...)
[DEBUG] 2022-08-15 17:24:40.903 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamSize, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:24:40.903 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property teamSize with lazy=false
[DEBUG] 2022-08-15 17:24:40.903 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamSize]
[DEBUG] 2022-08-15 17:24:40.903 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for teamSize
[DEBUG] 2022-08-15 17:24:40.903 [http-nio-8080-exec-2] PropertyBinder - Building property teamSize
[DEBUG] 2022-08-15 17:24:40.904 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:24:40.904 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:24:40.904 [http-nio-8080-exec-2] EntityBinder - Import with entity name Board
[DEBUG] 2022-08-15 17:24:40.904 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.board.Board on table boards
[DEBUG] 2022-08-15 17:24:40.904 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(boards), mappingColumn=board_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:24:40.904 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:24:40.904 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:24:40.904 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property board_id with lazy=false
[DEBUG] 2022-08-15 17:24:40.904 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.board.Board:board_id]
[DEBUG] 2022-08-15 17:24:40.904 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for board_id
[DEBUG] 2022-08-15 17:24:40.905 [http-nio-8080-exec-2] PropertyBinder - Building property board_id
[DEBUG] 2022-08-15 17:24:40.905 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(board_id)]), board_id, assigned, , ...)
[DEBUG] 2022-08-15 17:24:40.906 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2022-08-15 17:24:40.906 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:24:40.906 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for fullName
[DEBUG] 2022-08-15 17:24:40.906 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2022-08-15 17:24:40.906 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for registrationDate
[DEBUG] 2022-08-15 17:24:40.906 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for cardId
[DEBUG] 2022-08-15 17:24:40.906 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2022-08-15 17:24:40.906 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for memberEmail
[DEBUG] 2022-08-15 17:24:40.906 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for points
[DEBUG] 2022-08-15 17:24:40.906 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2022-08-15 17:24:40.906 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for tech
[DEBUG] 2022-08-15 17:24:40.906 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for teamName
[DEBUG] 2022-08-15 17:24:40.906 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for teamSize
[DEBUG] 2022-08-15 17:24:40.907 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for board_id
[DEBUG] 2022-08-15 17:24:40.907 [http-nio-8080-exec-2] PrimaryKey - Forcing column [email] to be non-null as it is part of the primary key for table [members]
[DEBUG] 2022-08-15 17:24:40.907 [http-nio-8080-exec-2] PrimaryKey - Forcing column [cardid] to be non-null as it is part of the primary key for table [card]
[DEBUG] 2022-08-15 17:24:40.907 [http-nio-8080-exec-2] PrimaryKey - Forcing column [teamname] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2022-08-15 17:24:40.907 [http-nio-8080-exec-2] PrimaryKey - Forcing column [board_id] to be non-null as it is part of the primary key for table [boards]
[DEBUG] 2022-08-15 17:24:40.947 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2022-08-15 17:24:40.948 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2022-08-15 17:24:40.948 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-08-15 17:24:40.948 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-08-15 17:24:40.948 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2022-08-15 17:24:40.948 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-08-15 17:24:40.948 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2022-08-15 17:24:40.948 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-08-15 17:24:40.948 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-08-15 17:24:40.948 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-08-15 17:24:40.948 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2022-08-15 17:24:40.948 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: null
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2022-08-15 17:24:40.949 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2022-08-15 17:24:40.950 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-08-15 17:24:40.950 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2022-08-15 17:24:40.950 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-08-15 17:24:40.950 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-08-15 17:24:40.950 [http-nio-8080-exec-2] Settings - JPA compliance - query : disabled
[DEBUG] 2022-08-15 17:24:40.950 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2022-08-15 17:24:40.950 [http-nio-8080-exec-2] Settings - JPA compliance - lists : disabled
[DEBUG] 2022-08-15 17:24:40.950 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : disabled
[DEBUG] 2022-08-15 17:24:40.972 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:24:40.973 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:24:40.979 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-08-15 17:24:40.979 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, java.class.path=/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/ext/cldrdata.jar:/opt/jdk8u332-b09/jre/lib/ext/dnsns.jar:/opt/jdk8u332-b09/jre/lib/ext/jaccess.jar:/opt/jdk8u332-b09/jre/lib/ext/localedata.jar:/opt/jdk8u332-b09/jre/lib/ext/nashorn.jar:/opt/jdk8u332-b09/jre/lib/ext/sunec.jar:/opt/jdk8u332-b09/jre/lib/ext/sunjce_provider.jar:/opt/jdk8u332-b09/jre/lib/ext/sunpkcs11.jar:/opt/jdk8u332-b09/jre/lib/ext/zipfs.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/management-agent.jar:/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/target/classes:/home/cjester/.m2/repository/org/postgresql/postgresql/42.3.3/postgresql-42.3.3.jar:/home/cjester/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/home/cjester/.m2/repository/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.23/tomcat-embed-core-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.23/tomcat-annotations-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.23/tomcat-embed-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.23/tomcat-embed-el-8.5.23.jar:/home/cjester/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper/8.5.23/tomcat-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.5.23/tomcat-servlet-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-juli/8.5.23/tomcat-juli-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-el-api/8.5.23/tomcat-el-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-api/8.5.23/tomcat-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util-scan/8.5.23/tomcat-util-scan-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util/8.5.23/tomcat-util-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper-el/8.5.23/tomcat-jasper-el-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jsp-api/8.5.23/tomcat-jsp-api-8.5.23.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/home/cjester/.m2/repository/org/hibernate/hibernate-core/5.6.9.Final/hibernate-core-5.6.9.Final.jar:/home/cjester/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/home/cjester/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/cjester/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/cjester/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/cjester/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/home/cjester/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/cjester/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/cjester/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/home/cjester/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/cjester/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/cjester/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/cjester/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/snap/intellij-idea-community/381/lib/idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=America/New_York, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/opt/jdk8u332-b09/jre/lib/amd64, sun.java.command=com.revature.nabnak.MainDriver, sun.cpu.endian=little, user.home=/home/cjester, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/opt/jdk8u332-b09/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/opt/jdk8u332-b09/jre/lib/sunrsasign.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_332-b09, user.name=cjester, path.separator=:, hibernate.connection.username=****, os.version=5.15.0-46-generic, java.endorsed.dirs=/opt/jdk8u332-b09/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/tmp, catalina.home=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, java.version=1.8.0_332, user.dir=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, catalina.base=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1c6727f7, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Temurin, java.vm.version=25.332-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/opt/jdk8u332-b09/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[DEBUG] 2022-08-15 17:24:40.985 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-08-15 17:24:40.985 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-08-15 17:24:40.985 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c6833b3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@25532d03]
[DEBUG] 2022-08-15 17:24:41.019 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:24:41.019 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:24:41.103 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:24:41.104 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:24:41.108 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:24:41.108 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:24:41.116 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:24:41.116 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:24:41.122 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:24:41.122 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select email from members where email =?
[DEBUG] 2022-08-15 17:24:41.122 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select member_.email, member_.experience_months as experien2_2_, member_.full_name as full_nam3_2_, member_.password as password4_2_, member_.registration_date as registra5_2_ from members member_ where member_.email=?
[DEBUG] 2022-08-15 17:24:41.122 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into members (experience_months, full_name, password, registration_date, email) values (?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:24:41.122 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update members set experience_months=?, full_name=?, password=?, registration_date=? where email=?
[DEBUG] 2022-08-15 17:24:41.123 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from members where email=?
[DEBUG] 2022-08-15 17:24:41.133 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3919f90b]
[DEBUG] 2022-08-15 17:24:41.133 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : experienceMonths
[DEBUG] 2022-08-15 17:24:41.134 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : fullName
[DEBUG] 2022-08-15 17:24:41.134 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-08-15 17:24:41.134 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : registrationDate
[DEBUG] 2022-08-15 17:24:41.134 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:24:41.139 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:24:41.141 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.member.Member)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.member.Member, querySpaceUid=<gen:0>, path=com.revature.nabnak.member.Member)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.member.Member)
          - SQL table alias mapping - member0_
          - alias suffix - 0_
          - suffixed key columns - {email1_2_0_}

[DEBUG] 2022-08-15 17:24:41.141 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.member.Member [NONE]: select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:24:41.142 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:24:41.142 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select teamName from teams where teamName =?
[DEBUG] 2022-08-15 17:24:41.142 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select team_.teamName, team_.teamSize as teamsize2_3_ from teams team_ where team_.teamName=?
[DEBUG] 2022-08-15 17:24:41.142 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into teams (teamSize, teamName) values (?, ?)
[DEBUG] 2022-08-15 17:24:41.142 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update teams set teamSize=? where teamName=?
[DEBUG] 2022-08-15 17:24:41.142 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from teams where teamName=?
[DEBUG] 2022-08-15 17:24:41.142 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1704030]
[DEBUG] 2022-08-15 17:24:41.142 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : teamSize
[DEBUG] 2022-08-15 17:24:41.142 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:24:41.142 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:24:41.142 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.team.Team)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.team.Team, querySpaceUid=<gen:0>, path=com.revature.nabnak.team.Team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.team.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamname1_3_0_}

[DEBUG] 2022-08-15 17:24:41.142 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.team.Team [NONE]: select team0_.teamName as teamname1_3_0_, team0_.teamSize as teamsize2_3_0_ from teams team0_ where team0_.teamName=?
[DEBUG] 2022-08-15 17:24:41.143 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:24:41.143 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select cardId from card where cardId =?
[DEBUG] 2022-08-15 17:24:41.143 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select card_.cardId, card_.description as descript2_1_, card_.memberEmail as memberem3_1_, card_.points as points4_1_, card_.status as status5_1_, card_.tech as tech6_1_ from card card_ where card_.cardId=?
[DEBUG] 2022-08-15 17:24:41.143 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into card (description, memberEmail, points, status, tech, cardId) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:24:41.143 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update card set description=?, memberEmail=?, points=?, status=?, tech=? where cardId=?
[DEBUG] 2022-08-15 17:24:41.143 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from card where cardId=?
[DEBUG] 2022-08-15 17:24:41.143 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@497f89d0]
[DEBUG] 2022-08-15 17:24:41.143 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-08-15 17:24:41.143 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : memberEmail
[DEBUG] 2022-08-15 17:24:41.143 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2022-08-15 17:24:41.143 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2022-08-15 17:24:41.143 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : tech
[DEBUG] 2022-08-15 17:24:41.143 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:24:41.143 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:24:41.144 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.card.Card)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.card.Card, querySpaceUid=<gen:0>, path=com.revature.nabnak.card.Card)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.card.Card)
          - SQL table alias mapping - card0_
          - alias suffix - 0_
          - suffixed key columns - {cardid1_1_0_}

[DEBUG] 2022-08-15 17:24:41.144 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.card.Card [NONE]: select card0_.cardId as cardid1_1_0_, card0_.description as descript2_1_0_, card0_.memberEmail as memberem3_1_0_, card0_.points as points4_1_0_, card0_.status as status5_1_0_, card0_.tech as tech6_1_0_ from card card0_ where card0_.cardId=?
[DEBUG] 2022-08-15 17:24:41.144 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:24:41.144 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select board_id from boards where board_id =?
[DEBUG] 2022-08-15 17:24:41.144 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select board_.board_id from boards board_ where board_.board_id=?
[DEBUG] 2022-08-15 17:24:41.144 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into boards (board_id) values (?)
[DEBUG] 2022-08-15 17:24:41.144 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: null
[DEBUG] 2022-08-15 17:24:41.144 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from boards where board_id=?
[DEBUG] 2022-08-15 17:24:41.144 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44830021]
[DEBUG] 2022-08-15 17:24:41.144 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:24:41.144 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:24:41.144 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.board.Board)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.board.Board, querySpaceUid=<gen:0>, path=com.revature.nabnak.board.Board)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.board.Board)
          - SQL table alias mapping - board0_
          - alias suffix - 0_
          - suffixed key columns - {board_id1_0_0_}

[DEBUG] 2022-08-15 17:24:41.145 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.board.Board [NONE]: select board0_.board_id as board_id1_0_0_ from boards board0_ where board0_.board_id=?
[INFO ] 2022-08-15 17:24:41.164 [http-nio-8080-exec-2] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1d545817] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 2022-08-15 17:24:41.211 [http-nio-8080-exec-2] Table - No alter strings for table : boards
[DEBUG] 2022-08-15 17:24:41.211 [http-nio-8080-exec-2] SQL - alter table if exists card add column cardId int4 not null
[WARN ] 2022-08-15 17:24:41.222 [http-nio-8080-exec-2] ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:581) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:602) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:314) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:78) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:728) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at com.revature.nabnak.util.HibernateUtil.getSession(HibernateUtil.java:39) [classes/:?]
	at com.revature.nabnak.member.MemberDao.findById(MemberDao.java:52) [classes/:?]
	at com.revature.nabnak.member.MemberService.findById(MemberService.java:52) [classes/:?]
	at com.revature.nabnak.member.MemberServlet.doGet(MemberServlet.java:56) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_332]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.lang.Thread.run(Thread.java:750) [?:1.8.0_332]
Caused by: org.postgresql.util.PSQLException: ERROR: column "cardid" of relation "card" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:329) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:315) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:291) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:286) ~[postgresql-42.3.3.jar:42.3.3]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	... 35 more
[DEBUG] 2022-08-15 17:24:41.225 [http-nio-8080-exec-2] SQL - alter table if exists card add column memberEmail varchar(255)
[DEBUG] 2022-08-15 17:24:41.237 [http-nio-8080-exec-2] Table - No alter strings for table : members
[DEBUG] 2022-08-15 17:24:41.237 [http-nio-8080-exec-2] Table - No alter strings for table : teams
[DEBUG] 2022-08-15 17:24:41.238 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-08-15 17:24:41.238 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-08-15 17:24:41.241 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-08-15 17:24:41.242 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-08-15 17:24:41.242 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-08-15 17:24:41.243 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-08-15 17:24:41.245 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:24:41.247 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1c7f534f
[DEBUG] 2022-08-15 17:24:41.248 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: 2f600f31-42cf-405e-b315-ef23345dd842 (<unnamed>)
[DEBUG] 2022-08-15 17:24:41.248 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-08-15 17:24:41.276 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-08-15 17:24:41.278 [http-nio-8080-exec-2] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:24:41.278 [http-nio-8080-exec-2] TransactionImpl - begin
[DEBUG] 2022-08-15 17:24:41.283 [http-nio-8080-exec-2] TransactionImpl - committing
[DEBUG] 2022-08-15 17:24:41.284 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:24:41.284 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:25:10.784 [Hibernate Connection Pool Validation Thread] DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
[INFO ] 2022-08-15 17:37:36.790 [http-nio-8080-exec-2] MemberServlet - Email entered ar@mail.com
[DEBUG] 2022-08-15 17:37:36.801 [http-nio-8080-exec-2] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 17:37:36.805 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:37:36.805 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:37:36.807 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 17:37:36.816 [http-nio-8080-exec-2] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-08-15 17:37:36.817 [http-nio-8080-exec-2] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.postgresql.Driver, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 17:37:36.887 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:37:36.887 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:37:36.888 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 17:37:36.890 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 17:37:36.890 [http-nio-8080-exec-2] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 17:37:36.894 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 17:37:36.895 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 17:37:36.903 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 17:37:36.916 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@764b6890
[DEBUG] 2022-08-15 17:37:36.916 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@764b6890
[DEBUG] 2022-08-15 17:37:36.916 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@764b6890
[DEBUG] 2022-08-15 17:37:36.917 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11fdae3
[DEBUG] 2022-08-15 17:37:36.917 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@40a76054
[DEBUG] 2022-08-15 17:37:36.917 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7dacea4d
[DEBUG] 2022-08-15 17:37:36.918 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@665dbb41
[DEBUG] 2022-08-15 17:37:36.918 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@665dbb41
[DEBUG] 2022-08-15 17:37:36.918 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@665dbb41
[DEBUG] 2022-08-15 17:37:36.919 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@563a2349
[DEBUG] 2022-08-15 17:37:36.919 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@563a2349
[DEBUG] 2022-08-15 17:37:36.919 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@563a2349
[DEBUG] 2022-08-15 17:37:36.919 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@17c9cc31
[DEBUG] 2022-08-15 17:37:36.919 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@17c9cc31
[DEBUG] 2022-08-15 17:37:36.919 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17c9cc31
[DEBUG] 2022-08-15 17:37:36.920 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3e538b0
[DEBUG] 2022-08-15 17:37:36.920 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3e538b0
[DEBUG] 2022-08-15 17:37:36.920 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3e538b0
[DEBUG] 2022-08-15 17:37:36.921 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@55300e7f
[DEBUG] 2022-08-15 17:37:36.921 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@55300e7f
[DEBUG] 2022-08-15 17:37:36.921 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@55300e7f
[DEBUG] 2022-08-15 17:37:36.921 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4e92ba12
[DEBUG] 2022-08-15 17:37:36.921 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4e92ba12
[DEBUG] 2022-08-15 17:37:36.922 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4e92ba12
[DEBUG] 2022-08-15 17:37:36.922 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@605828aa
[DEBUG] 2022-08-15 17:37:36.922 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@605828aa
[DEBUG] 2022-08-15 17:37:36.922 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@605828aa
[DEBUG] 2022-08-15 17:37:36.923 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@21d8b985
[DEBUG] 2022-08-15 17:37:36.923 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@21d8b985
[DEBUG] 2022-08-15 17:37:36.923 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b717e62
[DEBUG] 2022-08-15 17:37:36.923 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b717e62
[DEBUG] 2022-08-15 17:37:36.924 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@265e334c
[DEBUG] 2022-08-15 17:37:36.924 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@265e334c
[DEBUG] 2022-08-15 17:37:36.924 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e2cad08
[DEBUG] 2022-08-15 17:37:36.924 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@61f59de5
[DEBUG] 2022-08-15 17:37:36.925 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1910edda
[DEBUG] 2022-08-15 17:37:36.925 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1910edda
[DEBUG] 2022-08-15 17:37:36.925 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6dfa635d
[DEBUG] 2022-08-15 17:37:36.925 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6dfa635d
[DEBUG] 2022-08-15 17:37:36.932 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7b182de0
[DEBUG] 2022-08-15 17:37:36.932 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7b182de0
[DEBUG] 2022-08-15 17:37:36.933 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ca0c8c4
[DEBUG] 2022-08-15 17:37:36.933 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ca0c8c4
[DEBUG] 2022-08-15 17:37:36.933 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5a49159d
[DEBUG] 2022-08-15 17:37:36.933 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5a49159d
[DEBUG] 2022-08-15 17:37:36.934 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@876ffce
[DEBUG] 2022-08-15 17:37:36.934 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@876ffce
[DEBUG] 2022-08-15 17:37:36.935 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3bd4f5f8
[DEBUG] 2022-08-15 17:37:36.935 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3bd4f5f8
[DEBUG] 2022-08-15 17:37:36.936 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@33b26cce
[DEBUG] 2022-08-15 17:37:36.936 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@33b26cce
[DEBUG] 2022-08-15 17:37:36.937 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49ad3549
[DEBUG] 2022-08-15 17:37:36.937 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49ad3549
[DEBUG] 2022-08-15 17:37:36.938 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@afce020
[DEBUG] 2022-08-15 17:37:36.938 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@afce020
[DEBUG] 2022-08-15 17:37:36.938 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@24fe4663
[DEBUG] 2022-08-15 17:37:36.939 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@24fe4663
[DEBUG] 2022-08-15 17:37:36.939 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4c97758
[DEBUG] 2022-08-15 17:37:36.939 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c97758
[DEBUG] 2022-08-15 17:37:36.939 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c97758
[DEBUG] 2022-08-15 17:37:36.940 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@36f4ea19
[DEBUG] 2022-08-15 17:37:36.940 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@322c0c42
[DEBUG] 2022-08-15 17:37:36.940 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@322c0c42
[DEBUG] 2022-08-15 17:37:36.941 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@322c0c42
[DEBUG] 2022-08-15 17:37:36.941 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2951253a
[DEBUG] 2022-08-15 17:37:36.941 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7041f47e
[DEBUG] 2022-08-15 17:37:36.942 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@385db613
[DEBUG] 2022-08-15 17:37:36.942 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@385db613
[DEBUG] 2022-08-15 17:37:36.942 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@434d85d7
[DEBUG] 2022-08-15 17:37:36.942 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@434d85d7
[DEBUG] 2022-08-15 17:37:36.943 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5b9ee03d
[DEBUG] 2022-08-15 17:37:36.943 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5b9ee03d
[DEBUG] 2022-08-15 17:37:36.943 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@27af482d
[DEBUG] 2022-08-15 17:37:36.943 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@27af482d
[DEBUG] 2022-08-15 17:37:36.944 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13d61c41
[DEBUG] 2022-08-15 17:37:36.944 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13d61c41
[DEBUG] 2022-08-15 17:37:36.944 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@57fab437
[DEBUG] 2022-08-15 17:37:36.944 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@13347be1
[DEBUG] 2022-08-15 17:37:36.945 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@13347be1
[DEBUG] 2022-08-15 17:37:36.945 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@13347be1
[DEBUG] 2022-08-15 17:37:36.945 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5879f537
[DEBUG] 2022-08-15 17:37:36.945 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5879f537
[DEBUG] 2022-08-15 17:37:36.945 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5879f537
[DEBUG] 2022-08-15 17:37:36.946 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@60e310a4
[DEBUG] 2022-08-15 17:37:36.946 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@56cc54b4
[DEBUG] 2022-08-15 17:37:36.946 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5c6380ee
[DEBUG] 2022-08-15 17:37:36.946 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5c6380ee
[DEBUG] 2022-08-15 17:37:36.946 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5c6380ee
[DEBUG] 2022-08-15 17:37:36.947 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68a62d53
[DEBUG] 2022-08-15 17:37:36.947 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68a62d53
[DEBUG] 2022-08-15 17:37:36.947 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68a62d53
[DEBUG] 2022-08-15 17:37:36.947 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3f69e928
[DEBUG] 2022-08-15 17:37:36.947 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6ff39a50
[DEBUG] 2022-08-15 17:37:36.948 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4be2d872
[DEBUG] 2022-08-15 17:37:36.948 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4be2d872
[DEBUG] 2022-08-15 17:37:36.948 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@48f7ab9e
[DEBUG] 2022-08-15 17:37:36.949 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5420fc3b
[DEBUG] 2022-08-15 17:37:36.949 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5420fc3b
[DEBUG] 2022-08-15 17:37:36.950 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@56d626d2
[DEBUG] 2022-08-15 17:37:36.950 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@56d626d2
[DEBUG] 2022-08-15 17:37:36.950 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1060bf32
[DEBUG] 2022-08-15 17:37:36.950 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3489201e
[DEBUG] 2022-08-15 17:37:36.951 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5c35c4c
[DEBUG] 2022-08-15 17:37:36.952 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@745d28a5
[DEBUG] 2022-08-15 17:37:36.952 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@745d28a5
[DEBUG] 2022-08-15 17:37:36.952 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1eea6bd3
[DEBUG] 2022-08-15 17:37:36.953 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@36f70ab
[DEBUG] 2022-08-15 17:37:36.953 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58643b11
[DEBUG] 2022-08-15 17:37:36.953 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@699ec892
[DEBUG] 2022-08-15 17:37:36.953 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24679281
[DEBUG] 2022-08-15 17:37:36.953 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5c75448e
[DEBUG] 2022-08-15 17:37:36.953 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@25b040a2
[DEBUG] 2022-08-15 17:37:36.953 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a75c6de
[DEBUG] 2022-08-15 17:37:36.967 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 17:37:36.967 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 17:37:36.968 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:37:36.968 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:37:36.968 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 17:37:36.969 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 17:37:36.969 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 17:37:36.970 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:37:36.970 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 17:37:36.970 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 17:37:36.971 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 17:37:36.971 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 17:37:36.971 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:37:36.971 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 17:37:36.974 [http-nio-8080-exec-2] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 17:37:36.977 [http-nio-8080-exec-2] pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak]
[INFO ] 2022-08-15 17:37:36.977 [http-nio-8080-exec-2] pooling - HHH10001001: Connection properties: {user=postgres, password=javaReact1000}
[INFO ] 2022-08-15 17:37:36.977 [http-nio-8080-exec-2] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2022-08-15 17:37:36.979 [http-nio-8080-exec-2] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2022-08-15 17:37:36.979 [http-nio-8080-exec-2] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2022-08-15 17:37:37.260 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4
      major : 13
      minor : 4
[DEBUG] 2022-08-15 17:37:37.260 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
[DEBUG] 2022-08-15 17:37:37.260 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-08-15 17:37:37.266 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 17:37:37.272 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-08-15 17:37:37.313 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@14740d83
[DEBUG] 2022-08-15 17:37:37.313 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@14740d83
[DEBUG] 2022-08-15 17:37:37.313 [http-nio-8080-exec-2] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@13d61c41
[DEBUG] 2022-08-15 17:37:37.313 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6184975e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@676896f]
[DEBUG] 2022-08-15 17:37:37.328 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-08-15 17:37:37.335 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:37:37.344 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:37:37.346 [http-nio-8080-exec-2] EntityBinder - Import with entity name Member
[DEBUG] 2022-08-15 17:37:37.347 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.member.Member on table members
[DEBUG] 2022-08-15 17:37:37.356 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:37:37.357 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:37:37.357 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:37:37.357 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2022-08-15 17:37:37.358 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:email]
[DEBUG] 2022-08-15 17:37:37.359 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2022-08-15 17:37:37.360 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2022-08-15 17:37:37.361 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
[DEBUG] 2022-08-15 17:37:37.361 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=experience_months, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:37:37.362 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property experienceMonths with lazy=false
[DEBUG] 2022-08-15 17:37:37.362 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:experienceMonths]
[DEBUG] 2022-08-15 17:37:37.362 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:37:37.362 [http-nio-8080-exec-2] PropertyBinder - Building property experienceMonths
[DEBUG] 2022-08-15 17:37:37.362 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:37:37.362 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
[DEBUG] 2022-08-15 17:37:37.363 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:fullName]
[DEBUG] 2022-08-15 17:37:37.363 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for fullName
[DEBUG] 2022-08-15 17:37:37.363 [http-nio-8080-exec-2] PropertyBinder - Building property fullName
[DEBUG] 2022-08-15 17:37:37.363 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:37:37.363 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2022-08-15 17:37:37.363 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:password]
[DEBUG] 2022-08-15 17:37:37.363 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2022-08-15 17:37:37.364 [http-nio-8080-exec-2] PropertyBinder - Building property password
[DEBUG] 2022-08-15 17:37:37.364 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=registration_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:37:37.364 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property registrationDate with lazy=false
[DEBUG] 2022-08-15 17:37:37.365 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:registrationDate]
[DEBUG] 2022-08-15 17:37:37.365 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for registrationDate
[DEBUG] 2022-08-15 17:37:37.365 [http-nio-8080-exec-2] PropertyBinder - Building property registrationDate
[DEBUG] 2022-08-15 17:37:37.368 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:37:37.368 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:37:37.368 [http-nio-8080-exec-2] EntityBinder - Import with entity name Card
[DEBUG] 2022-08-15 17:37:37.368 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.card.Card on table card
[DEBUG] 2022-08-15 17:37:37.369 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=cardId, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:37:37.369 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:37:37.369 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:37:37.369 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property cardId with lazy=false
[DEBUG] 2022-08-15 17:37:37.369 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:cardId]
[DEBUG] 2022-08-15 17:37:37.369 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for cardId
[DEBUG] 2022-08-15 17:37:37.369 [http-nio-8080-exec-2] PropertyBinder - Building property cardId
[DEBUG] 2022-08-15 17:37:37.370 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cardId)]), cardId, assigned, , ...)
[DEBUG] 2022-08-15 17:37:37.370 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:37:37.370 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2022-08-15 17:37:37.370 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:description]
[DEBUG] 2022-08-15 17:37:37.370 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2022-08-15 17:37:37.370 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2022-08-15 17:37:37.370 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=memberEmail, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:37:37.370 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property memberEmail with lazy=false
[DEBUG] 2022-08-15 17:37:37.370 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:memberEmail]
[DEBUG] 2022-08-15 17:37:37.370 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for memberEmail
[DEBUG] 2022-08-15 17:37:37.370 [http-nio-8080-exec-2] PropertyBinder - Building property memberEmail
[DEBUG] 2022-08-15 17:37:37.371 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=points, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:37:37.371 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property points with lazy=false
[DEBUG] 2022-08-15 17:37:37.371 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:points]
[DEBUG] 2022-08-15 17:37:37.371 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for points
[DEBUG] 2022-08-15 17:37:37.371 [http-nio-8080-exec-2] PropertyBinder - Building property points
[DEBUG] 2022-08-15 17:37:37.371 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:37:37.371 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2022-08-15 17:37:37.371 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:status]
[DEBUG] 2022-08-15 17:37:37.371 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2022-08-15 17:37:37.371 [http-nio-8080-exec-2] PropertyBinder - Building property status
[DEBUG] 2022-08-15 17:37:37.371 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=tech, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:37:37.371 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property tech with lazy=false
[DEBUG] 2022-08-15 17:37:37.372 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:tech]
[DEBUG] 2022-08-15 17:37:37.372 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for tech
[DEBUG] 2022-08-15 17:37:37.372 [http-nio-8080-exec-2] PropertyBinder - Building property tech
[DEBUG] 2022-08-15 17:37:37.372 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:37:37.372 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:37:37.372 [http-nio-8080-exec-2] EntityBinder - Import with entity name Team
[DEBUG] 2022-08-15 17:37:37.372 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.team.Team on table teams
[DEBUG] 2022-08-15 17:37:37.373 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:37:37.373 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:37:37.373 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:37:37.373 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2022-08-15 17:37:37.373 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamName]
[DEBUG] 2022-08-15 17:37:37.373 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for teamName
[DEBUG] 2022-08-15 17:37:37.373 [http-nio-8080-exec-2] PropertyBinder - Building property teamName
[DEBUG] 2022-08-15 17:37:37.373 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(teamName)]), teamName, assigned, , ...)
[DEBUG] 2022-08-15 17:37:37.373 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamSize, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:37:37.374 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property teamSize with lazy=false
[DEBUG] 2022-08-15 17:37:37.374 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamSize]
[DEBUG] 2022-08-15 17:37:37.374 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for teamSize
[DEBUG] 2022-08-15 17:37:37.374 [http-nio-8080-exec-2] PropertyBinder - Building property teamSize
[DEBUG] 2022-08-15 17:37:37.374 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:37:37.374 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:37:37.374 [http-nio-8080-exec-2] EntityBinder - Import with entity name Board
[DEBUG] 2022-08-15 17:37:37.374 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.board.Board on table boards
[DEBUG] 2022-08-15 17:37:37.374 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(boards), mappingColumn=board_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:37:37.375 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:37:37.375 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:37:37.375 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property board_id with lazy=false
[DEBUG] 2022-08-15 17:37:37.375 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.board.Board:board_id]
[DEBUG] 2022-08-15 17:37:37.375 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for board_id
[DEBUG] 2022-08-15 17:37:37.375 [http-nio-8080-exec-2] PropertyBinder - Building property board_id
[DEBUG] 2022-08-15 17:37:37.375 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(board_id)]), board_id, assigned, , ...)
[DEBUG] 2022-08-15 17:37:37.376 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2022-08-15 17:37:37.376 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:37:37.376 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for fullName
[DEBUG] 2022-08-15 17:37:37.376 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2022-08-15 17:37:37.376 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for registrationDate
[DEBUG] 2022-08-15 17:37:37.376 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for cardId
[DEBUG] 2022-08-15 17:37:37.376 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2022-08-15 17:37:37.376 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for memberEmail
[DEBUG] 2022-08-15 17:37:37.376 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for points
[DEBUG] 2022-08-15 17:37:37.376 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2022-08-15 17:37:37.376 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for tech
[DEBUG] 2022-08-15 17:37:37.376 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for teamName
[DEBUG] 2022-08-15 17:37:37.377 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for teamSize
[DEBUG] 2022-08-15 17:37:37.377 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for board_id
[DEBUG] 2022-08-15 17:37:37.377 [http-nio-8080-exec-2] PrimaryKey - Forcing column [email] to be non-null as it is part of the primary key for table [members]
[DEBUG] 2022-08-15 17:37:37.377 [http-nio-8080-exec-2] PrimaryKey - Forcing column [cardid] to be non-null as it is part of the primary key for table [card]
[DEBUG] 2022-08-15 17:37:37.377 [http-nio-8080-exec-2] PrimaryKey - Forcing column [teamname] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2022-08-15 17:37:37.378 [http-nio-8080-exec-2] PrimaryKey - Forcing column [board_id] to be non-null as it is part of the primary key for table [boards]
[DEBUG] 2022-08-15 17:37:37.416 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2022-08-15 17:37:37.417 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2022-08-15 17:37:37.417 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-08-15 17:37:37.417 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-08-15 17:37:37.417 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2022-08-15 17:37:37.417 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-08-15 17:37:37.417 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2022-08-15 17:37:37.417 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-08-15 17:37:37.417 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-08-15 17:37:37.417 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-08-15 17:37:37.417 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2022-08-15 17:37:37.417 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: null
[DEBUG] 2022-08-15 17:37:37.417 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2022-08-15 17:37:37.417 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-08-15 17:37:37.418 [http-nio-8080-exec-2] Settings - JPA compliance - query : disabled
[DEBUG] 2022-08-15 17:37:37.419 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2022-08-15 17:37:37.419 [http-nio-8080-exec-2] Settings - JPA compliance - lists : disabled
[DEBUG] 2022-08-15 17:37:37.419 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : disabled
[DEBUG] 2022-08-15 17:37:37.441 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:37:37.442 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:37:37.447 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-08-15 17:37:37.448 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, java.class.path=/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/ext/cldrdata.jar:/opt/jdk8u332-b09/jre/lib/ext/dnsns.jar:/opt/jdk8u332-b09/jre/lib/ext/jaccess.jar:/opt/jdk8u332-b09/jre/lib/ext/localedata.jar:/opt/jdk8u332-b09/jre/lib/ext/nashorn.jar:/opt/jdk8u332-b09/jre/lib/ext/sunec.jar:/opt/jdk8u332-b09/jre/lib/ext/sunjce_provider.jar:/opt/jdk8u332-b09/jre/lib/ext/sunpkcs11.jar:/opt/jdk8u332-b09/jre/lib/ext/zipfs.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/management-agent.jar:/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/target/classes:/home/cjester/.m2/repository/org/postgresql/postgresql/42.3.3/postgresql-42.3.3.jar:/home/cjester/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/home/cjester/.m2/repository/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.23/tomcat-embed-core-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.23/tomcat-annotations-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.23/tomcat-embed-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.23/tomcat-embed-el-8.5.23.jar:/home/cjester/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper/8.5.23/tomcat-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.5.23/tomcat-servlet-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-juli/8.5.23/tomcat-juli-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-el-api/8.5.23/tomcat-el-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-api/8.5.23/tomcat-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util-scan/8.5.23/tomcat-util-scan-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util/8.5.23/tomcat-util-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper-el/8.5.23/tomcat-jasper-el-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jsp-api/8.5.23/tomcat-jsp-api-8.5.23.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/home/cjester/.m2/repository/org/hibernate/hibernate-core/5.6.9.Final/hibernate-core-5.6.9.Final.jar:/home/cjester/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/home/cjester/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/cjester/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/cjester/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/cjester/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/home/cjester/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/cjester/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/cjester/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/home/cjester/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/cjester/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/cjester/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/cjester/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/snap/intellij-idea-community/381/lib/idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=America/New_York, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/opt/jdk8u332-b09/jre/lib/amd64, sun.java.command=com.revature.nabnak.MainDriver, sun.cpu.endian=little, user.home=/home/cjester, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/opt/jdk8u332-b09/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/opt/jdk8u332-b09/jre/lib/sunrsasign.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_332-b09, user.name=cjester, path.separator=:, hibernate.connection.username=****, os.version=5.15.0-46-generic, java.endorsed.dirs=/opt/jdk8u332-b09/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/tmp, catalina.home=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, java.version=1.8.0_332, user.dir=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, catalina.base=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3758f63c, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Temurin, java.vm.version=25.332-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/opt/jdk8u332-b09/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[DEBUG] 2022-08-15 17:37:37.453 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-08-15 17:37:37.454 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-08-15 17:37:37.454 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6184975e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@138f734c]
[DEBUG] 2022-08-15 17:37:37.488 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:37:37.488 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:37:37.557 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:37:37.558 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:37:37.570 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:37:37.570 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:37:37.576 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:37:37.576 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select email from members where email =?
[DEBUG] 2022-08-15 17:37:37.576 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select member_.email, member_.experience_months as experien2_2_, member_.full_name as full_nam3_2_, member_.password as password4_2_, member_.registration_date as registra5_2_ from members member_ where member_.email=?
[DEBUG] 2022-08-15 17:37:37.576 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into members (experience_months, full_name, password, registration_date, email) values (?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:37:37.576 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update members set experience_months=?, full_name=?, password=?, registration_date=? where email=?
[DEBUG] 2022-08-15 17:37:37.576 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from members where email=?
[DEBUG] 2022-08-15 17:37:37.587 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ad89d77]
[DEBUG] 2022-08-15 17:37:37.588 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : experienceMonths
[DEBUG] 2022-08-15 17:37:37.588 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : fullName
[DEBUG] 2022-08-15 17:37:37.588 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-08-15 17:37:37.588 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : registrationDate
[DEBUG] 2022-08-15 17:37:37.588 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:37:37.593 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:37:37.595 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.member.Member)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.member.Member, querySpaceUid=<gen:0>, path=com.revature.nabnak.member.Member)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.member.Member)
          - SQL table alias mapping - member0_
          - alias suffix - 0_
          - suffixed key columns - {email1_2_0_}

[DEBUG] 2022-08-15 17:37:37.596 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.member.Member [NONE]: select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:37:37.596 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:37:37.596 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select teamName from teams where teamName =?
[DEBUG] 2022-08-15 17:37:37.596 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select team_.teamName, team_.teamSize as teamsize2_3_ from teams team_ where team_.teamName=?
[DEBUG] 2022-08-15 17:37:37.596 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into teams (teamSize, teamName) values (?, ?)
[DEBUG] 2022-08-15 17:37:37.596 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update teams set teamSize=? where teamName=?
[DEBUG] 2022-08-15 17:37:37.596 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from teams where teamName=?
[DEBUG] 2022-08-15 17:37:37.596 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@789ec22f]
[DEBUG] 2022-08-15 17:37:37.596 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : teamSize
[DEBUG] 2022-08-15 17:37:37.596 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:37:37.596 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:37:37.597 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.team.Team)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.team.Team, querySpaceUid=<gen:0>, path=com.revature.nabnak.team.Team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.team.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamname1_3_0_}

[DEBUG] 2022-08-15 17:37:37.597 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.team.Team [NONE]: select team0_.teamName as teamname1_3_0_, team0_.teamSize as teamsize2_3_0_ from teams team0_ where team0_.teamName=?
[DEBUG] 2022-08-15 17:37:37.597 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:37:37.597 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select cardId from card where cardId =?
[DEBUG] 2022-08-15 17:37:37.597 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select card_.cardId, card_.description as descript2_1_, card_.memberEmail as memberem3_1_, card_.points as points4_1_, card_.status as status5_1_, card_.tech as tech6_1_ from card card_ where card_.cardId=?
[DEBUG] 2022-08-15 17:37:37.597 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into card (description, memberEmail, points, status, tech, cardId) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:37:37.597 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update card set description=?, memberEmail=?, points=?, status=?, tech=? where cardId=?
[DEBUG] 2022-08-15 17:37:37.597 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from card where cardId=?
[DEBUG] 2022-08-15 17:37:37.597 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@333467c9]
[DEBUG] 2022-08-15 17:37:37.597 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-08-15 17:37:37.597 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : memberEmail
[DEBUG] 2022-08-15 17:37:37.597 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2022-08-15 17:37:37.597 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2022-08-15 17:37:37.597 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : tech
[DEBUG] 2022-08-15 17:37:37.598 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:37:37.598 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:37:37.598 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.card.Card)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.card.Card, querySpaceUid=<gen:0>, path=com.revature.nabnak.card.Card)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.card.Card)
          - SQL table alias mapping - card0_
          - alias suffix - 0_
          - suffixed key columns - {cardid1_1_0_}

[DEBUG] 2022-08-15 17:37:37.598 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.card.Card [NONE]: select card0_.cardId as cardid1_1_0_, card0_.description as descript2_1_0_, card0_.memberEmail as memberem3_1_0_, card0_.points as points4_1_0_, card0_.status as status5_1_0_, card0_.tech as tech6_1_0_ from card card0_ where card0_.cardId=?
[DEBUG] 2022-08-15 17:37:37.598 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:37:37.598 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select board_id from boards where board_id =?
[DEBUG] 2022-08-15 17:37:37.598 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select board_.board_id from boards board_ where board_.board_id=?
[DEBUG] 2022-08-15 17:37:37.598 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into boards (board_id) values (?)
[DEBUG] 2022-08-15 17:37:37.598 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: null
[DEBUG] 2022-08-15 17:37:37.598 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from boards where board_id=?
[DEBUG] 2022-08-15 17:37:37.598 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1303f003]
[DEBUG] 2022-08-15 17:37:37.598 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:37:37.598 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:37:37.599 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.board.Board)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.board.Board, querySpaceUid=<gen:0>, path=com.revature.nabnak.board.Board)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.board.Board)
          - SQL table alias mapping - board0_
          - alias suffix - 0_
          - suffixed key columns - {board_id1_0_0_}

[DEBUG] 2022-08-15 17:37:37.599 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.board.Board [NONE]: select board0_.board_id as board_id1_0_0_ from boards board0_ where board0_.board_id=?
[INFO ] 2022-08-15 17:37:37.618 [http-nio-8080-exec-2] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@687f41c3] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 2022-08-15 17:37:37.669 [http-nio-8080-exec-2] Table - No alter strings for table : boards
[DEBUG] 2022-08-15 17:37:37.669 [http-nio-8080-exec-2] SQL - alter table if exists card add column cardId int4 not null
[WARN ] 2022-08-15 17:37:37.680 [http-nio-8080-exec-2] ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:581) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:602) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:314) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:78) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:728) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at com.revature.nabnak.util.HibernateUtil.getSession(HibernateUtil.java:39) [classes/:?]
	at com.revature.nabnak.member.MemberDao.findById(MemberDao.java:52) [classes/:?]
	at com.revature.nabnak.member.MemberService.findById(MemberService.java:52) [classes/:?]
	at com.revature.nabnak.member.MemberServlet.doGet(MemberServlet.java:56) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_332]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.lang.Thread.run(Thread.java:750) [?:1.8.0_332]
Caused by: org.postgresql.util.PSQLException: ERROR: column "cardid" of relation "card" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:329) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:315) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:291) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:286) ~[postgresql-42.3.3.jar:42.3.3]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	... 35 more
[DEBUG] 2022-08-15 17:37:37.683 [http-nio-8080-exec-2] Table - No alter strings for table : members
[DEBUG] 2022-08-15 17:37:37.683 [http-nio-8080-exec-2] Table - No alter strings for table : teams
[DEBUG] 2022-08-15 17:37:37.684 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-08-15 17:37:37.684 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-08-15 17:37:37.687 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-08-15 17:37:37.687 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-08-15 17:37:37.687 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-08-15 17:37:37.687 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-08-15 17:37:37.689 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:37:37.692 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@622d3c53
[DEBUG] 2022-08-15 17:37:37.692 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: 2370fc3c-7f77-4c79-bb77-daeddca9a5b4 (<unnamed>)
[DEBUG] 2022-08-15 17:37:37.692 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-08-15 17:37:37.721 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-08-15 17:37:37.724 [http-nio-8080-exec-2] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:37:37.724 [http-nio-8080-exec-2] TransactionImpl - begin
[DEBUG] 2022-08-15 17:37:37.728 [http-nio-8080-exec-2] SQL - select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:37:37.743 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-08-15 17:37:37.748 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:37:37.749 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 2400
[DEBUG] 2022-08-15 17:37:37.749 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:37:37.749 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `fullName` : value = Adam Ranieri
[DEBUG] 2022-08-15 17:37:37.749 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:37:37.749 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = gatorFan
[DEBUG] 2022-08-15 17:37:37.749 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:37:37.749 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-07-06
[DEBUG] 2022-08-15 17:37:37.749 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:37:37.750 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:37:37.751 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : com.revature.nabnak.member.Member#ar@mail.com
[DEBUG] 2022-08-15 17:37:37.751 [http-nio-8080-exec-2] TransactionImpl - committing
[DEBUG] 2022-08-15 17:37:37.751 [http-nio-8080-exec-2] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2022-08-15 17:37:37.754 [http-nio-8080-exec-2] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2022-08-15 17:37:37.756 [http-nio-8080-exec-2] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2022-08-15 17:37:37.756 [http-nio-8080-exec-2] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2022-08-15 17:37:37.756 [http-nio-8080-exec-2] EntityPrinter - Listing entities:
[DEBUG] 2022-08-15 17:37:37.756 [http-nio-8080-exec-2] EntityPrinter - com.revature.nabnak.member.Member{password=gatorFan, experienceMonths=2400, registrationDate=2022-07-06, fullName=Adam Ranieri, email=ar@mail.com}
[DEBUG] 2022-08-15 17:37:37.766 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:37:37.766 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:38:07.257 [Hibernate Connection Pool Validation Thread] DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
[INFO ] 2022-08-15 17:38:32.982 [http-nio-8080-exec-2] MemberServlet - Email entered ar@mail.com
[DEBUG] 2022-08-15 17:38:32.996 [http-nio-8080-exec-2] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 17:38:33.000 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:38:33.002 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:38:33.003 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 17:38:33.014 [http-nio-8080-exec-2] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-08-15 17:38:33.015 [http-nio-8080-exec-2] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.postgresql.Driver, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 17:38:33.086 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:38:33.086 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:38:33.086 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 17:38:33.089 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 17:38:33.089 [http-nio-8080-exec-2] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 17:38:33.093 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 17:38:33.093 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 17:38:33.101 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 17:38:33.115 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7095450f
[DEBUG] 2022-08-15 17:38:33.115 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7095450f
[DEBUG] 2022-08-15 17:38:33.115 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7095450f
[DEBUG] 2022-08-15 17:38:33.115 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e04dd8
[DEBUG] 2022-08-15 17:38:33.116 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7cff54ff
[DEBUG] 2022-08-15 17:38:33.116 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4ed1cc2
[DEBUG] 2022-08-15 17:38:33.116 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@72ede187
[DEBUG] 2022-08-15 17:38:33.116 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@72ede187
[DEBUG] 2022-08-15 17:38:33.117 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72ede187
[DEBUG] 2022-08-15 17:38:33.117 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@391ee081
[DEBUG] 2022-08-15 17:38:33.117 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@391ee081
[DEBUG] 2022-08-15 17:38:33.117 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@391ee081
[DEBUG] 2022-08-15 17:38:33.118 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@c40af26
[DEBUG] 2022-08-15 17:38:33.118 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@c40af26
[DEBUG] 2022-08-15 17:38:33.118 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c40af26
[DEBUG] 2022-08-15 17:38:33.118 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5ccf3b48
[DEBUG] 2022-08-15 17:38:33.119 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5ccf3b48
[DEBUG] 2022-08-15 17:38:33.119 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5ccf3b48
[DEBUG] 2022-08-15 17:38:33.119 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@686f5cab
[DEBUG] 2022-08-15 17:38:33.119 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@686f5cab
[DEBUG] 2022-08-15 17:38:33.119 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@686f5cab
[DEBUG] 2022-08-15 17:38:33.120 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1e818c30
[DEBUG] 2022-08-15 17:38:33.120 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1e818c30
[DEBUG] 2022-08-15 17:38:33.120 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1e818c30
[DEBUG] 2022-08-15 17:38:33.120 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3a2998bf
[DEBUG] 2022-08-15 17:38:33.121 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3a2998bf
[DEBUG] 2022-08-15 17:38:33.121 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a2998bf
[DEBUG] 2022-08-15 17:38:33.121 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33d0a3ab
[DEBUG] 2022-08-15 17:38:33.121 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33d0a3ab
[DEBUG] 2022-08-15 17:38:33.122 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@18ec297c
[DEBUG] 2022-08-15 17:38:33.122 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@18ec297c
[DEBUG] 2022-08-15 17:38:33.122 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1546f310
[DEBUG] 2022-08-15 17:38:33.122 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1546f310
[DEBUG] 2022-08-15 17:38:33.123 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@55645f9a
[DEBUG] 2022-08-15 17:38:33.123 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4c88a0eb
[DEBUG] 2022-08-15 17:38:33.123 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2458a525
[DEBUG] 2022-08-15 17:38:33.123 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2458a525
[DEBUG] 2022-08-15 17:38:33.124 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@22bd844c
[DEBUG] 2022-08-15 17:38:33.124 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@22bd844c
[DEBUG] 2022-08-15 17:38:33.130 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@77cdd825
[DEBUG] 2022-08-15 17:38:33.130 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@77cdd825
[DEBUG] 2022-08-15 17:38:33.131 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1db1ee6a
[DEBUG] 2022-08-15 17:38:33.131 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1db1ee6a
[DEBUG] 2022-08-15 17:38:33.132 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4c876a72
[DEBUG] 2022-08-15 17:38:33.132 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4c876a72
[DEBUG] 2022-08-15 17:38:33.132 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@20a9e33c
[DEBUG] 2022-08-15 17:38:33.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@20a9e33c
[DEBUG] 2022-08-15 17:38:33.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@e106858
[DEBUG] 2022-08-15 17:38:33.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@e106858
[DEBUG] 2022-08-15 17:38:33.134 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@25263763
[DEBUG] 2022-08-15 17:38:33.134 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@25263763
[DEBUG] 2022-08-15 17:38:33.136 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49e9bb45
[DEBUG] 2022-08-15 17:38:33.136 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49e9bb45
[DEBUG] 2022-08-15 17:38:33.136 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5a7a258
[DEBUG] 2022-08-15 17:38:33.136 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5a7a258
[DEBUG] 2022-08-15 17:38:33.137 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@11a858c9
[DEBUG] 2022-08-15 17:38:33.137 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@11a858c9
[DEBUG] 2022-08-15 17:38:33.138 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@17b96c90
[DEBUG] 2022-08-15 17:38:33.138 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@17b96c90
[DEBUG] 2022-08-15 17:38:33.138 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@17b96c90
[DEBUG] 2022-08-15 17:38:33.139 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55080a46
[DEBUG] 2022-08-15 17:38:33.139 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1f268148
[DEBUG] 2022-08-15 17:38:33.139 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1f268148
[DEBUG] 2022-08-15 17:38:33.139 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1f268148
[DEBUG] 2022-08-15 17:38:33.139 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3475c080
[DEBUG] 2022-08-15 17:38:33.140 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6cd9c295
[DEBUG] 2022-08-15 17:38:33.140 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5985af91
[DEBUG] 2022-08-15 17:38:33.140 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5985af91
[DEBUG] 2022-08-15 17:38:33.141 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@39f83091
[DEBUG] 2022-08-15 17:38:33.141 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@39f83091
[DEBUG] 2022-08-15 17:38:33.141 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@347893c6
[DEBUG] 2022-08-15 17:38:33.141 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@347893c6
[DEBUG] 2022-08-15 17:38:33.142 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@445c6541
[DEBUG] 2022-08-15 17:38:33.142 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@445c6541
[DEBUG] 2022-08-15 17:38:33.142 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2626e9b
[DEBUG] 2022-08-15 17:38:33.142 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2626e9b
[DEBUG] 2022-08-15 17:38:33.143 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3672b8c8
[DEBUG] 2022-08-15 17:38:33.143 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@27e7ae55
[DEBUG] 2022-08-15 17:38:33.143 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@27e7ae55
[DEBUG] 2022-08-15 17:38:33.143 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@27e7ae55
[DEBUG] 2022-08-15 17:38:33.144 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7bd2ea61
[DEBUG] 2022-08-15 17:38:33.144 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7bd2ea61
[DEBUG] 2022-08-15 17:38:33.144 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7bd2ea61
[DEBUG] 2022-08-15 17:38:33.144 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@54b1df22
[DEBUG] 2022-08-15 17:38:33.144 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@81d0b56
[DEBUG] 2022-08-15 17:38:33.145 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@488d76e9
[DEBUG] 2022-08-15 17:38:33.145 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@488d76e9
[DEBUG] 2022-08-15 17:38:33.145 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@488d76e9
[DEBUG] 2022-08-15 17:38:33.146 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3130a121
[DEBUG] 2022-08-15 17:38:33.146 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3130a121
[DEBUG] 2022-08-15 17:38:33.146 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3130a121
[DEBUG] 2022-08-15 17:38:33.146 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@14399881
[DEBUG] 2022-08-15 17:38:33.146 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@68ed37f
[DEBUG] 2022-08-15 17:38:33.147 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@85d2b0a
[DEBUG] 2022-08-15 17:38:33.147 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@85d2b0a
[DEBUG] 2022-08-15 17:38:33.147 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60489345
[DEBUG] 2022-08-15 17:38:33.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@679155b3
[DEBUG] 2022-08-15 17:38:33.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@679155b3
[DEBUG] 2022-08-15 17:38:33.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5702fd52
[DEBUG] 2022-08-15 17:38:33.148 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5702fd52
[DEBUG] 2022-08-15 17:38:33.149 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7666d84d
[DEBUG] 2022-08-15 17:38:33.149 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2ab61cb2
[DEBUG] 2022-08-15 17:38:33.149 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7e471ad5
[DEBUG] 2022-08-15 17:38:33.151 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3ea5da52
[DEBUG] 2022-08-15 17:38:33.151 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3ea5da52
[DEBUG] 2022-08-15 17:38:33.151 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@28b8de5a
[DEBUG] 2022-08-15 17:38:33.151 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@385ff655
[DEBUG] 2022-08-15 17:38:33.151 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@99655e2
[DEBUG] 2022-08-15 17:38:33.151 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d1ac8b
[DEBUG] 2022-08-15 17:38:33.151 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ff5f8e5
[DEBUG] 2022-08-15 17:38:33.151 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28df5610
[DEBUG] 2022-08-15 17:38:33.152 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@13dd2fac
[DEBUG] 2022-08-15 17:38:33.152 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1f646ca8
[DEBUG] 2022-08-15 17:38:33.167 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 17:38:33.168 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 17:38:33.168 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:38:33.168 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:38:33.168 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 17:38:33.169 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 17:38:33.169 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 17:38:33.170 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:38:33.170 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 17:38:33.170 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 17:38:33.171 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 17:38:33.171 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 17:38:33.171 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:38:33.172 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 17:38:33.175 [http-nio-8080-exec-2] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 17:38:33.177 [http-nio-8080-exec-2] pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak]
[INFO ] 2022-08-15 17:38:33.177 [http-nio-8080-exec-2] pooling - HHH10001001: Connection properties: {user=postgres, password=javaReact1000}
[INFO ] 2022-08-15 17:38:33.177 [http-nio-8080-exec-2] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2022-08-15 17:38:33.178 [http-nio-8080-exec-2] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2022-08-15 17:38:33.179 [http-nio-8080-exec-2] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2022-08-15 17:38:33.489 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4
      major : 13
      minor : 4
[DEBUG] 2022-08-15 17:38:33.489 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
[DEBUG] 2022-08-15 17:38:33.489 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-08-15 17:38:33.494 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 17:38:33.500 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-08-15 17:38:33.545 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@67720ab6
[DEBUG] 2022-08-15 17:38:33.546 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@67720ab6
[DEBUG] 2022-08-15 17:38:33.546 [http-nio-8080-exec-2] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2626e9b
[DEBUG] 2022-08-15 17:38:33.546 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@775e92cf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@21193103]
[DEBUG] 2022-08-15 17:38:33.561 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-08-15 17:38:33.567 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:38:33.575 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:38:33.577 [http-nio-8080-exec-2] EntityBinder - Import with entity name Member
[DEBUG] 2022-08-15 17:38:33.578 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.member.Member on table members
[DEBUG] 2022-08-15 17:38:33.587 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:38:33.588 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:38:33.588 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:38:33.589 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2022-08-15 17:38:33.590 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:email]
[DEBUG] 2022-08-15 17:38:33.590 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2022-08-15 17:38:33.591 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2022-08-15 17:38:33.592 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
[DEBUG] 2022-08-15 17:38:33.593 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=experience_months, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:38:33.593 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property experienceMonths with lazy=false
[DEBUG] 2022-08-15 17:38:33.593 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:experienceMonths]
[DEBUG] 2022-08-15 17:38:33.593 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:38:33.593 [http-nio-8080-exec-2] PropertyBinder - Building property experienceMonths
[DEBUG] 2022-08-15 17:38:33.593 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:38:33.593 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
[DEBUG] 2022-08-15 17:38:33.594 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:fullName]
[DEBUG] 2022-08-15 17:38:33.594 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for fullName
[DEBUG] 2022-08-15 17:38:33.594 [http-nio-8080-exec-2] PropertyBinder - Building property fullName
[DEBUG] 2022-08-15 17:38:33.594 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:38:33.594 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2022-08-15 17:38:33.594 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:password]
[DEBUG] 2022-08-15 17:38:33.594 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2022-08-15 17:38:33.594 [http-nio-8080-exec-2] PropertyBinder - Building property password
[DEBUG] 2022-08-15 17:38:33.595 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=registration_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:38:33.595 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property registrationDate with lazy=false
[DEBUG] 2022-08-15 17:38:33.595 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:registrationDate]
[DEBUG] 2022-08-15 17:38:33.595 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for registrationDate
[DEBUG] 2022-08-15 17:38:33.595 [http-nio-8080-exec-2] PropertyBinder - Building property registrationDate
[DEBUG] 2022-08-15 17:38:33.598 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:38:33.598 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:38:33.599 [http-nio-8080-exec-2] EntityBinder - Import with entity name Card
[DEBUG] 2022-08-15 17:38:33.599 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.card.Card on table card
[DEBUG] 2022-08-15 17:38:33.599 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=cardId, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:38:33.599 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:38:33.599 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:38:33.599 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property cardId with lazy=false
[DEBUG] 2022-08-15 17:38:33.600 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:cardId]
[DEBUG] 2022-08-15 17:38:33.600 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for cardId
[DEBUG] 2022-08-15 17:38:33.600 [http-nio-8080-exec-2] PropertyBinder - Building property cardId
[DEBUG] 2022-08-15 17:38:33.600 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cardId)]), cardId, assigned, , ...)
[DEBUG] 2022-08-15 17:38:33.600 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:38:33.600 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2022-08-15 17:38:33.600 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:description]
[DEBUG] 2022-08-15 17:38:33.600 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2022-08-15 17:38:33.600 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2022-08-15 17:38:33.600 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=memberEmail, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:38:33.601 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property memberEmail with lazy=false
[DEBUG] 2022-08-15 17:38:33.601 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:memberEmail]
[DEBUG] 2022-08-15 17:38:33.601 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for memberEmail
[DEBUG] 2022-08-15 17:38:33.601 [http-nio-8080-exec-2] PropertyBinder - Building property memberEmail
[DEBUG] 2022-08-15 17:38:33.601 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=points, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:38:33.601 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property points with lazy=false
[DEBUG] 2022-08-15 17:38:33.601 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:points]
[DEBUG] 2022-08-15 17:38:33.601 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for points
[DEBUG] 2022-08-15 17:38:33.601 [http-nio-8080-exec-2] PropertyBinder - Building property points
[DEBUG] 2022-08-15 17:38:33.601 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:38:33.601 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2022-08-15 17:38:33.601 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:status]
[DEBUG] 2022-08-15 17:38:33.602 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2022-08-15 17:38:33.602 [http-nio-8080-exec-2] PropertyBinder - Building property status
[DEBUG] 2022-08-15 17:38:33.602 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=tech, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:38:33.602 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property tech with lazy=false
[DEBUG] 2022-08-15 17:38:33.602 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:tech]
[DEBUG] 2022-08-15 17:38:33.602 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for tech
[DEBUG] 2022-08-15 17:38:33.602 [http-nio-8080-exec-2] PropertyBinder - Building property tech
[DEBUG] 2022-08-15 17:38:33.602 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:38:33.603 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:38:33.603 [http-nio-8080-exec-2] EntityBinder - Import with entity name Team
[DEBUG] 2022-08-15 17:38:33.603 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.team.Team on table teams
[DEBUG] 2022-08-15 17:38:33.603 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:38:33.603 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:38:33.603 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:38:33.603 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2022-08-15 17:38:33.603 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamName]
[DEBUG] 2022-08-15 17:38:33.603 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for teamName
[DEBUG] 2022-08-15 17:38:33.603 [http-nio-8080-exec-2] PropertyBinder - Building property teamName
[DEBUG] 2022-08-15 17:38:33.604 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(teamName)]), teamName, assigned, , ...)
[DEBUG] 2022-08-15 17:38:33.604 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamSize, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:38:33.604 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property teamSize with lazy=false
[DEBUG] 2022-08-15 17:38:33.604 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamSize]
[DEBUG] 2022-08-15 17:38:33.604 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for teamSize
[DEBUG] 2022-08-15 17:38:33.604 [http-nio-8080-exec-2] PropertyBinder - Building property teamSize
[DEBUG] 2022-08-15 17:38:33.604 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:38:33.604 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:38:33.604 [http-nio-8080-exec-2] EntityBinder - Import with entity name Board
[DEBUG] 2022-08-15 17:38:33.604 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.board.Board on table boards
[DEBUG] 2022-08-15 17:38:33.605 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(boards), mappingColumn=board_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:38:33.605 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:38:33.605 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:38:33.605 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property board_id with lazy=false
[DEBUG] 2022-08-15 17:38:33.605 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.board.Board:board_id]
[DEBUG] 2022-08-15 17:38:33.605 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for board_id
[DEBUG] 2022-08-15 17:38:33.605 [http-nio-8080-exec-2] PropertyBinder - Building property board_id
[DEBUG] 2022-08-15 17:38:33.605 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(board_id)]), board_id, assigned, , ...)
[DEBUG] 2022-08-15 17:38:33.606 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2022-08-15 17:38:33.606 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:38:33.606 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for fullName
[DEBUG] 2022-08-15 17:38:33.606 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2022-08-15 17:38:33.606 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for registrationDate
[DEBUG] 2022-08-15 17:38:33.606 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for cardId
[DEBUG] 2022-08-15 17:38:33.606 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2022-08-15 17:38:33.607 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for memberEmail
[DEBUG] 2022-08-15 17:38:33.607 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for points
[DEBUG] 2022-08-15 17:38:33.607 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2022-08-15 17:38:33.607 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for tech
[DEBUG] 2022-08-15 17:38:33.607 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for teamName
[DEBUG] 2022-08-15 17:38:33.607 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for teamSize
[DEBUG] 2022-08-15 17:38:33.607 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for board_id
[DEBUG] 2022-08-15 17:38:33.608 [http-nio-8080-exec-2] PrimaryKey - Forcing column [email] to be non-null as it is part of the primary key for table [members]
[DEBUG] 2022-08-15 17:38:33.608 [http-nio-8080-exec-2] PrimaryKey - Forcing column [cardid] to be non-null as it is part of the primary key for table [card]
[DEBUG] 2022-08-15 17:38:33.608 [http-nio-8080-exec-2] PrimaryKey - Forcing column [teamname] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2022-08-15 17:38:33.608 [http-nio-8080-exec-2] PrimaryKey - Forcing column [board_id] to be non-null as it is part of the primary key for table [boards]
[DEBUG] 2022-08-15 17:38:33.647 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2022-08-15 17:38:33.647 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2022-08-15 17:38:33.647 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-08-15 17:38:33.647 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-08-15 17:38:33.647 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2022-08-15 17:38:33.647 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-08-15 17:38:33.647 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2022-08-15 17:38:33.647 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-08-15 17:38:33.647 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: null
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2022-08-15 17:38:33.648 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-08-15 17:38:33.649 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2022-08-15 17:38:33.649 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2022-08-15 17:38:33.649 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-08-15 17:38:33.649 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2022-08-15 17:38:33.649 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-08-15 17:38:33.649 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-08-15 17:38:33.649 [http-nio-8080-exec-2] Settings - JPA compliance - query : disabled
[DEBUG] 2022-08-15 17:38:33.649 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2022-08-15 17:38:33.649 [http-nio-8080-exec-2] Settings - JPA compliance - lists : disabled
[DEBUG] 2022-08-15 17:38:33.649 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : disabled
[DEBUG] 2022-08-15 17:38:33.672 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:38:33.673 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:38:33.679 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-08-15 17:38:33.679 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, java.class.path=/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/ext/cldrdata.jar:/opt/jdk8u332-b09/jre/lib/ext/dnsns.jar:/opt/jdk8u332-b09/jre/lib/ext/jaccess.jar:/opt/jdk8u332-b09/jre/lib/ext/localedata.jar:/opt/jdk8u332-b09/jre/lib/ext/nashorn.jar:/opt/jdk8u332-b09/jre/lib/ext/sunec.jar:/opt/jdk8u332-b09/jre/lib/ext/sunjce_provider.jar:/opt/jdk8u332-b09/jre/lib/ext/sunpkcs11.jar:/opt/jdk8u332-b09/jre/lib/ext/zipfs.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/management-agent.jar:/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/target/classes:/home/cjester/.m2/repository/org/postgresql/postgresql/42.3.3/postgresql-42.3.3.jar:/home/cjester/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/home/cjester/.m2/repository/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.23/tomcat-embed-core-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.23/tomcat-annotations-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.23/tomcat-embed-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.23/tomcat-embed-el-8.5.23.jar:/home/cjester/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper/8.5.23/tomcat-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.5.23/tomcat-servlet-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-juli/8.5.23/tomcat-juli-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-el-api/8.5.23/tomcat-el-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-api/8.5.23/tomcat-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util-scan/8.5.23/tomcat-util-scan-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util/8.5.23/tomcat-util-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper-el/8.5.23/tomcat-jasper-el-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jsp-api/8.5.23/tomcat-jsp-api-8.5.23.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/home/cjester/.m2/repository/org/hibernate/hibernate-core/5.6.9.Final/hibernate-core-5.6.9.Final.jar:/home/cjester/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/home/cjester/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/cjester/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/cjester/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/cjester/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/home/cjester/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/cjester/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/cjester/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/home/cjester/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/cjester/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/cjester/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/cjester/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/snap/intellij-idea-community/381/lib/idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=America/New_York, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/opt/jdk8u332-b09/jre/lib/amd64, sun.java.command=com.revature.nabnak.MainDriver, sun.cpu.endian=little, user.home=/home/cjester, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/opt/jdk8u332-b09/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/opt/jdk8u332-b09/jre/lib/sunrsasign.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_332-b09, user.name=cjester, path.separator=:, hibernate.connection.username=****, os.version=5.15.0-46-generic, java.endorsed.dirs=/opt/jdk8u332-b09/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/tmp, catalina.home=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, java.version=1.8.0_332, user.dir=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, catalina.base=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@79f066b, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Temurin, java.vm.version=25.332-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/opt/jdk8u332-b09/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[DEBUG] 2022-08-15 17:38:33.684 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-08-15 17:38:33.685 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-08-15 17:38:33.685 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@775e92cf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6d7c1c5e]
[DEBUG] 2022-08-15 17:38:33.715 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:38:33.715 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:38:33.796 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:38:33.796 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:38:33.800 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:38:33.800 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:38:33.808 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:38:33.808 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:38:33.814 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:38:33.814 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select email from members where email =?
[DEBUG] 2022-08-15 17:38:33.814 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select member_.email, member_.experience_months as experien2_2_, member_.full_name as full_nam3_2_, member_.password as password4_2_, member_.registration_date as registra5_2_ from members member_ where member_.email=?
[DEBUG] 2022-08-15 17:38:33.814 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into members (experience_months, full_name, password, registration_date, email) values (?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:38:33.814 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update members set experience_months=?, full_name=?, password=?, registration_date=? where email=?
[DEBUG] 2022-08-15 17:38:33.814 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from members where email=?
[DEBUG] 2022-08-15 17:38:33.824 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@86f0315]
[DEBUG] 2022-08-15 17:38:33.825 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : experienceMonths
[DEBUG] 2022-08-15 17:38:33.825 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : fullName
[DEBUG] 2022-08-15 17:38:33.825 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-08-15 17:38:33.825 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : registrationDate
[DEBUG] 2022-08-15 17:38:33.825 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:38:33.830 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:38:33.832 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.member.Member)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.member.Member, querySpaceUid=<gen:0>, path=com.revature.nabnak.member.Member)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.member.Member)
          - SQL table alias mapping - member0_
          - alias suffix - 0_
          - suffixed key columns - {email1_2_0_}

[DEBUG] 2022-08-15 17:38:33.832 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.member.Member [NONE]: select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:38:33.833 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:38:33.833 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select teamName from teams where teamName =?
[DEBUG] 2022-08-15 17:38:33.833 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select team_.teamName, team_.teamSize as teamsize2_3_ from teams team_ where team_.teamName=?
[DEBUG] 2022-08-15 17:38:33.833 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into teams (teamSize, teamName) values (?, ?)
[DEBUG] 2022-08-15 17:38:33.833 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update teams set teamSize=? where teamName=?
[DEBUG] 2022-08-15 17:38:33.833 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from teams where teamName=?
[DEBUG] 2022-08-15 17:38:33.833 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@345ef946]
[DEBUG] 2022-08-15 17:38:33.833 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : teamSize
[DEBUG] 2022-08-15 17:38:33.833 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:38:33.833 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:38:33.833 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.team.Team)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.team.Team, querySpaceUid=<gen:0>, path=com.revature.nabnak.team.Team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.team.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamname1_3_0_}

[DEBUG] 2022-08-15 17:38:33.833 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.team.Team [NONE]: select team0_.teamName as teamname1_3_0_, team0_.teamSize as teamsize2_3_0_ from teams team0_ where team0_.teamName=?
[DEBUG] 2022-08-15 17:38:33.834 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:38:33.834 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select cardId from card where cardId =?
[DEBUG] 2022-08-15 17:38:33.834 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select card_.cardId, card_.description as descript2_1_, card_.memberEmail as memberem3_1_, card_.points as points4_1_, card_.status as status5_1_, card_.tech as tech6_1_ from card card_ where card_.cardId=?
[DEBUG] 2022-08-15 17:38:33.834 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into card (description, memberEmail, points, status, tech, cardId) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:38:33.834 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update card set description=?, memberEmail=?, points=?, status=?, tech=? where cardId=?
[DEBUG] 2022-08-15 17:38:33.834 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from card where cardId=?
[DEBUG] 2022-08-15 17:38:33.834 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75ffda67]
[DEBUG] 2022-08-15 17:38:33.834 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-08-15 17:38:33.834 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : memberEmail
[DEBUG] 2022-08-15 17:38:33.834 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2022-08-15 17:38:33.834 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2022-08-15 17:38:33.834 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : tech
[DEBUG] 2022-08-15 17:38:33.834 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:38:33.834 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:38:33.835 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.card.Card)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.card.Card, querySpaceUid=<gen:0>, path=com.revature.nabnak.card.Card)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.card.Card)
          - SQL table alias mapping - card0_
          - alias suffix - 0_
          - suffixed key columns - {cardid1_1_0_}

[DEBUG] 2022-08-15 17:38:33.835 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.card.Card [NONE]: select card0_.cardId as cardid1_1_0_, card0_.description as descript2_1_0_, card0_.memberEmail as memberem3_1_0_, card0_.points as points4_1_0_, card0_.status as status5_1_0_, card0_.tech as tech6_1_0_ from card card0_ where card0_.cardId=?
[DEBUG] 2022-08-15 17:38:33.835 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:38:33.835 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select board_id from boards where board_id =?
[DEBUG] 2022-08-15 17:38:33.835 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select board_.board_id from boards board_ where board_.board_id=?
[DEBUG] 2022-08-15 17:38:33.835 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into boards (board_id) values (?)
[DEBUG] 2022-08-15 17:38:33.835 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: null
[DEBUG] 2022-08-15 17:38:33.835 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from boards where board_id=?
[DEBUG] 2022-08-15 17:38:33.835 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56c92242]
[DEBUG] 2022-08-15 17:38:33.835 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:38:33.835 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:38:33.835 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.board.Board)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.board.Board, querySpaceUid=<gen:0>, path=com.revature.nabnak.board.Board)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.board.Board)
          - SQL table alias mapping - board0_
          - alias suffix - 0_
          - suffixed key columns - {board_id1_0_0_}

[DEBUG] 2022-08-15 17:38:33.836 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.board.Board [NONE]: select board0_.board_id as board_id1_0_0_ from boards board0_ where board0_.board_id=?
[INFO ] 2022-08-15 17:38:33.854 [http-nio-8080-exec-2] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@17ab3ae9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 2022-08-15 17:38:33.910 [http-nio-8080-exec-2] Table - No alter strings for table : boards
[DEBUG] 2022-08-15 17:38:33.910 [http-nio-8080-exec-2] SQL - alter table if exists card add column cardId int4 not null
[WARN ] 2022-08-15 17:38:33.924 [http-nio-8080-exec-2] ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:581) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:602) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:314) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:78) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:728) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at com.revature.nabnak.util.HibernateUtil.getSession(HibernateUtil.java:39) [classes/:?]
	at com.revature.nabnak.member.MemberDao.findById(MemberDao.java:52) [classes/:?]
	at com.revature.nabnak.member.MemberService.findById(MemberService.java:52) [classes/:?]
	at com.revature.nabnak.member.MemberServlet.doGet(MemberServlet.java:56) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_332]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.lang.Thread.run(Thread.java:750) [?:1.8.0_332]
Caused by: org.postgresql.util.PSQLException: ERROR: column "cardid" of relation "card" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:329) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:315) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:291) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:286) ~[postgresql-42.3.3.jar:42.3.3]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	... 35 more
[DEBUG] 2022-08-15 17:38:33.927 [http-nio-8080-exec-2] Table - No alter strings for table : members
[DEBUG] 2022-08-15 17:38:33.927 [http-nio-8080-exec-2] Table - No alter strings for table : teams
[DEBUG] 2022-08-15 17:38:33.927 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-08-15 17:38:33.928 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-08-15 17:38:33.930 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-08-15 17:38:33.930 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-08-15 17:38:33.931 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-08-15 17:38:33.931 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-08-15 17:38:33.933 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:38:33.935 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6c8093c5
[DEBUG] 2022-08-15 17:38:33.936 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: 6321b2a3-32b0-449c-9113-7ca95828c7b4 (<unnamed>)
[DEBUG] 2022-08-15 17:38:33.936 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-08-15 17:38:33.963 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-08-15 17:38:33.966 [http-nio-8080-exec-2] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:38:33.966 [http-nio-8080-exec-2] TransactionImpl - begin
[DEBUG] 2022-08-15 17:38:33.970 [http-nio-8080-exec-2] TransactionImpl - committing
[DEBUG] 2022-08-15 17:38:33.971 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:38:33.971 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:39:03.486 [Hibernate Connection Pool Validation Thread] DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
[INFO ] 2022-08-15 17:39:15.762 [http-nio-8080-exec-2] MemberServlet - Email entered ar@mail.com
[DEBUG] 2022-08-15 17:39:15.774 [http-nio-8080-exec-2] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 17:39:15.778 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:39:15.778 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:39:15.780 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 17:39:15.790 [http-nio-8080-exec-2] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-08-15 17:39:15.791 [http-nio-8080-exec-2] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.postgresql.Driver, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 17:39:15.863 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:39:15.863 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:39:15.863 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 17:39:15.866 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 17:39:15.866 [http-nio-8080-exec-2] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 17:39:15.870 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 17:39:15.871 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 17:39:15.879 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 17:39:15.896 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3f8aca60
[DEBUG] 2022-08-15 17:39:15.896 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3f8aca60
[DEBUG] 2022-08-15 17:39:15.896 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f8aca60
[DEBUG] 2022-08-15 17:39:15.896 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5c8e3478
[DEBUG] 2022-08-15 17:39:15.897 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c5776ee
[DEBUG] 2022-08-15 17:39:15.897 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@9bc7e10
[DEBUG] 2022-08-15 17:39:15.897 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@35f38f8b
[DEBUG] 2022-08-15 17:39:15.897 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@35f38f8b
[DEBUG] 2022-08-15 17:39:15.898 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@35f38f8b
[DEBUG] 2022-08-15 17:39:15.898 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2b83c374
[DEBUG] 2022-08-15 17:39:15.898 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2b83c374
[DEBUG] 2022-08-15 17:39:15.898 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b83c374
[DEBUG] 2022-08-15 17:39:15.899 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@551ed6d7
[DEBUG] 2022-08-15 17:39:15.899 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@551ed6d7
[DEBUG] 2022-08-15 17:39:15.899 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@551ed6d7
[DEBUG] 2022-08-15 17:39:15.899 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7debe3d7
[DEBUG] 2022-08-15 17:39:15.900 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7debe3d7
[DEBUG] 2022-08-15 17:39:15.900 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7debe3d7
[DEBUG] 2022-08-15 17:39:15.900 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563d20d9
[DEBUG] 2022-08-15 17:39:15.900 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563d20d9
[DEBUG] 2022-08-15 17:39:15.900 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563d20d9
[DEBUG] 2022-08-15 17:39:15.901 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@31039d70
[DEBUG] 2022-08-15 17:39:15.901 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@31039d70
[DEBUG] 2022-08-15 17:39:15.901 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@31039d70
[DEBUG] 2022-08-15 17:39:15.901 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7093feaf
[DEBUG] 2022-08-15 17:39:15.902 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7093feaf
[DEBUG] 2022-08-15 17:39:15.902 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7093feaf
[DEBUG] 2022-08-15 17:39:15.902 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@11b644c5
[DEBUG] 2022-08-15 17:39:15.902 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@11b644c5
[DEBUG] 2022-08-15 17:39:15.903 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a992172
[DEBUG] 2022-08-15 17:39:15.903 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a992172
[DEBUG] 2022-08-15 17:39:15.903 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@37778b8e
[DEBUG] 2022-08-15 17:39:15.903 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@37778b8e
[DEBUG] 2022-08-15 17:39:15.904 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@268363a3
[DEBUG] 2022-08-15 17:39:15.904 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68e90dd8
[DEBUG] 2022-08-15 17:39:15.904 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@429c8652
[DEBUG] 2022-08-15 17:39:15.905 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@429c8652
[DEBUG] 2022-08-15 17:39:15.905 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4db787c3
[DEBUG] 2022-08-15 17:39:15.905 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4db787c3
[DEBUG] 2022-08-15 17:39:15.911 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@49c20a32
[DEBUG] 2022-08-15 17:39:15.912 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@49c20a32
[DEBUG] 2022-08-15 17:39:15.912 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35284f6f
[DEBUG] 2022-08-15 17:39:15.912 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35284f6f
[DEBUG] 2022-08-15 17:39:15.913 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4601522
[DEBUG] 2022-08-15 17:39:15.913 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4601522
[DEBUG] 2022-08-15 17:39:15.914 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7235ddc7
[DEBUG] 2022-08-15 17:39:15.914 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7235ddc7
[DEBUG] 2022-08-15 17:39:15.915 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@50dfff9d
[DEBUG] 2022-08-15 17:39:15.915 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@50dfff9d
[DEBUG] 2022-08-15 17:39:15.915 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@143e4c26
[DEBUG] 2022-08-15 17:39:15.915 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@143e4c26
[DEBUG] 2022-08-15 17:39:15.917 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@41eb164
[DEBUG] 2022-08-15 17:39:15.917 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@41eb164
[DEBUG] 2022-08-15 17:39:15.918 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@223f7b74
[DEBUG] 2022-08-15 17:39:15.918 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@223f7b74
[DEBUG] 2022-08-15 17:39:15.918 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@20ed68ec
[DEBUG] 2022-08-15 17:39:15.918 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20ed68ec
[DEBUG] 2022-08-15 17:39:15.919 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a03a0f5
[DEBUG] 2022-08-15 17:39:15.919 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a03a0f5
[DEBUG] 2022-08-15 17:39:15.919 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a03a0f5
[DEBUG] 2022-08-15 17:39:15.920 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5ab8d3d4
[DEBUG] 2022-08-15 17:39:15.920 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@48f3e4f5
[DEBUG] 2022-08-15 17:39:15.920 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@48f3e4f5
[DEBUG] 2022-08-15 17:39:15.920 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@48f3e4f5
[DEBUG] 2022-08-15 17:39:15.921 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@cae7e20
[DEBUG] 2022-08-15 17:39:15.921 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@157923ed
[DEBUG] 2022-08-15 17:39:15.922 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6a3d0f26
[DEBUG] 2022-08-15 17:39:15.922 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a3d0f26
[DEBUG] 2022-08-15 17:39:15.922 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4365059d
[DEBUG] 2022-08-15 17:39:15.922 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4365059d
[DEBUG] 2022-08-15 17:39:15.923 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6e2a44ee
[DEBUG] 2022-08-15 17:39:15.923 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6e2a44ee
[DEBUG] 2022-08-15 17:39:15.923 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4b2c0961
[DEBUG] 2022-08-15 17:39:15.923 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4b2c0961
[DEBUG] 2022-08-15 17:39:15.924 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5088673d
[DEBUG] 2022-08-15 17:39:15.924 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5088673d
[DEBUG] 2022-08-15 17:39:15.924 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6d505389
[DEBUG] 2022-08-15 17:39:15.924 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@342b5aa
[DEBUG] 2022-08-15 17:39:15.924 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@342b5aa
[DEBUG] 2022-08-15 17:39:15.925 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@342b5aa
[DEBUG] 2022-08-15 17:39:15.925 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b76f595
[DEBUG] 2022-08-15 17:39:15.925 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b76f595
[DEBUG] 2022-08-15 17:39:15.925 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b76f595
[DEBUG] 2022-08-15 17:39:15.926 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6933f653
[DEBUG] 2022-08-15 17:39:15.926 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1121363c
[DEBUG] 2022-08-15 17:39:15.926 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@30b5e54f
[DEBUG] 2022-08-15 17:39:15.926 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@30b5e54f
[DEBUG] 2022-08-15 17:39:15.926 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@30b5e54f
[DEBUG] 2022-08-15 17:39:15.927 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5c13c9ae
[DEBUG] 2022-08-15 17:39:15.927 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5c13c9ae
[DEBUG] 2022-08-15 17:39:15.927 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5c13c9ae
[DEBUG] 2022-08-15 17:39:15.927 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6d67fc65
[DEBUG] 2022-08-15 17:39:15.927 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4cc2bb29
[DEBUG] 2022-08-15 17:39:15.928 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@33c620b6
[DEBUG] 2022-08-15 17:39:15.928 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@33c620b6
[DEBUG] 2022-08-15 17:39:15.928 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e9b4914
[DEBUG] 2022-08-15 17:39:15.929 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@163cf321
[DEBUG] 2022-08-15 17:39:15.929 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@163cf321
[DEBUG] 2022-08-15 17:39:15.930 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@f554b28
[DEBUG] 2022-08-15 17:39:15.930 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@f554b28
[DEBUG] 2022-08-15 17:39:15.930 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4910ea3d
[DEBUG] 2022-08-15 17:39:15.930 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cb207b4
[DEBUG] 2022-08-15 17:39:15.931 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@39ea17ac
[DEBUG] 2022-08-15 17:39:15.932 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@fa51cea
[DEBUG] 2022-08-15 17:39:15.932 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@fa51cea
[DEBUG] 2022-08-15 17:39:15.933 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7df6225d
[DEBUG] 2022-08-15 17:39:15.933 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a132345
[DEBUG] 2022-08-15 17:39:15.933 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@28a02cc1
[DEBUG] 2022-08-15 17:39:15.933 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7d8d4934
[DEBUG] 2022-08-15 17:39:15.933 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@31a57812
[DEBUG] 2022-08-15 17:39:15.933 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72ef7c68
[DEBUG] 2022-08-15 17:39:15.933 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5b8090d0
[DEBUG] 2022-08-15 17:39:15.933 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4cd3a67d
[DEBUG] 2022-08-15 17:39:15.947 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 17:39:15.948 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 17:39:15.948 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:39:15.948 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:39:15.948 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 17:39:15.949 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 17:39:15.949 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 17:39:15.950 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:39:15.950 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 17:39:15.951 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 17:39:15.951 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 17:39:15.951 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 17:39:15.951 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:39:15.952 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 17:39:15.955 [http-nio-8080-exec-2] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 17:39:15.957 [http-nio-8080-exec-2] pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak]
[INFO ] 2022-08-15 17:39:15.957 [http-nio-8080-exec-2] pooling - HHH10001001: Connection properties: {user=postgres, password=javaReact1000}
[INFO ] 2022-08-15 17:39:15.957 [http-nio-8080-exec-2] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2022-08-15 17:39:15.959 [http-nio-8080-exec-2] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2022-08-15 17:39:15.959 [http-nio-8080-exec-2] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2022-08-15 17:39:16.252 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4
      major : 13
      minor : 4
[DEBUG] 2022-08-15 17:39:16.252 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
[DEBUG] 2022-08-15 17:39:16.252 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-08-15 17:39:16.258 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 17:39:16.264 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-08-15 17:39:16.308 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4a86ae86
[DEBUG] 2022-08-15 17:39:16.309 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4a86ae86
[DEBUG] 2022-08-15 17:39:16.309 [http-nio-8080-exec-2] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5088673d
[DEBUG] 2022-08-15 17:39:16.310 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5398f1c4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1f76bc0c]
[DEBUG] 2022-08-15 17:39:16.324 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-08-15 17:39:16.330 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:39:16.338 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:39:16.341 [http-nio-8080-exec-2] EntityBinder - Import with entity name Member
[DEBUG] 2022-08-15 17:39:16.342 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.member.Member on table members
[DEBUG] 2022-08-15 17:39:16.351 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:39:16.352 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:39:16.352 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:39:16.352 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2022-08-15 17:39:16.353 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:email]
[DEBUG] 2022-08-15 17:39:16.354 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2022-08-15 17:39:16.355 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2022-08-15 17:39:16.356 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
[DEBUG] 2022-08-15 17:39:16.356 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=experience_months, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:39:16.357 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property experienceMonths with lazy=false
[DEBUG] 2022-08-15 17:39:16.357 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:experienceMonths]
[DEBUG] 2022-08-15 17:39:16.357 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:39:16.357 [http-nio-8080-exec-2] PropertyBinder - Building property experienceMonths
[DEBUG] 2022-08-15 17:39:16.357 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:39:16.357 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
[DEBUG] 2022-08-15 17:39:16.357 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:fullName]
[DEBUG] 2022-08-15 17:39:16.357 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for fullName
[DEBUG] 2022-08-15 17:39:16.357 [http-nio-8080-exec-2] PropertyBinder - Building property fullName
[DEBUG] 2022-08-15 17:39:16.357 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:39:16.358 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2022-08-15 17:39:16.358 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:password]
[DEBUG] 2022-08-15 17:39:16.358 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2022-08-15 17:39:16.358 [http-nio-8080-exec-2] PropertyBinder - Building property password
[DEBUG] 2022-08-15 17:39:16.358 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=registration_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:39:16.359 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property registrationDate with lazy=false
[DEBUG] 2022-08-15 17:39:16.359 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:registrationDate]
[DEBUG] 2022-08-15 17:39:16.359 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for registrationDate
[DEBUG] 2022-08-15 17:39:16.359 [http-nio-8080-exec-2] PropertyBinder - Building property registrationDate
[DEBUG] 2022-08-15 17:39:16.362 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:39:16.362 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:39:16.362 [http-nio-8080-exec-2] EntityBinder - Import with entity name Card
[DEBUG] 2022-08-15 17:39:16.362 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.card.Card on table card
[DEBUG] 2022-08-15 17:39:16.363 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=cardId, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:39:16.363 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:39:16.363 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:39:16.363 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property cardId with lazy=false
[DEBUG] 2022-08-15 17:39:16.363 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:cardId]
[DEBUG] 2022-08-15 17:39:16.363 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for cardId
[DEBUG] 2022-08-15 17:39:16.363 [http-nio-8080-exec-2] PropertyBinder - Building property cardId
[DEBUG] 2022-08-15 17:39:16.363 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cardId)]), cardId, assigned, , ...)
[DEBUG] 2022-08-15 17:39:16.364 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:39:16.364 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2022-08-15 17:39:16.364 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:description]
[DEBUG] 2022-08-15 17:39:16.364 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2022-08-15 17:39:16.364 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2022-08-15 17:39:16.364 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=memberEmail, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:39:16.364 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property memberEmail with lazy=false
[DEBUG] 2022-08-15 17:39:16.364 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:memberEmail]
[DEBUG] 2022-08-15 17:39:16.364 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for memberEmail
[DEBUG] 2022-08-15 17:39:16.364 [http-nio-8080-exec-2] PropertyBinder - Building property memberEmail
[DEBUG] 2022-08-15 17:39:16.364 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=points, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:39:16.365 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property points with lazy=false
[DEBUG] 2022-08-15 17:39:16.365 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:points]
[DEBUG] 2022-08-15 17:39:16.365 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for points
[DEBUG] 2022-08-15 17:39:16.365 [http-nio-8080-exec-2] PropertyBinder - Building property points
[DEBUG] 2022-08-15 17:39:16.365 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:39:16.365 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2022-08-15 17:39:16.365 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:status]
[DEBUG] 2022-08-15 17:39:16.365 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2022-08-15 17:39:16.365 [http-nio-8080-exec-2] PropertyBinder - Building property status
[DEBUG] 2022-08-15 17:39:16.365 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=tech, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:39:16.365 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property tech with lazy=false
[DEBUG] 2022-08-15 17:39:16.365 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:tech]
[DEBUG] 2022-08-15 17:39:16.366 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for tech
[DEBUG] 2022-08-15 17:39:16.366 [http-nio-8080-exec-2] PropertyBinder - Building property tech
[DEBUG] 2022-08-15 17:39:16.366 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:39:16.366 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:39:16.366 [http-nio-8080-exec-2] EntityBinder - Import with entity name Team
[DEBUG] 2022-08-15 17:39:16.366 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.team.Team on table teams
[DEBUG] 2022-08-15 17:39:16.367 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:39:16.367 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:39:16.367 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:39:16.367 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2022-08-15 17:39:16.367 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamName]
[DEBUG] 2022-08-15 17:39:16.367 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for teamName
[DEBUG] 2022-08-15 17:39:16.367 [http-nio-8080-exec-2] PropertyBinder - Building property teamName
[DEBUG] 2022-08-15 17:39:16.367 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(teamName)]), teamName, assigned, , ...)
[DEBUG] 2022-08-15 17:39:16.367 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamSize, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:39:16.367 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property teamSize with lazy=false
[DEBUG] 2022-08-15 17:39:16.368 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamSize]
[DEBUG] 2022-08-15 17:39:16.368 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for teamSize
[DEBUG] 2022-08-15 17:39:16.368 [http-nio-8080-exec-2] PropertyBinder - Building property teamSize
[DEBUG] 2022-08-15 17:39:16.368 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:39:16.368 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:39:16.368 [http-nio-8080-exec-2] EntityBinder - Import with entity name Board
[DEBUG] 2022-08-15 17:39:16.368 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.board.Board on table boards
[DEBUG] 2022-08-15 17:39:16.368 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(boards), mappingColumn=board_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:39:16.369 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:39:16.369 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:39:16.369 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property board_id with lazy=false
[DEBUG] 2022-08-15 17:39:16.369 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.board.Board:board_id]
[DEBUG] 2022-08-15 17:39:16.369 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for board_id
[DEBUG] 2022-08-15 17:39:16.369 [http-nio-8080-exec-2] PropertyBinder - Building property board_id
[DEBUG] 2022-08-15 17:39:16.369 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(board_id)]), board_id, assigned, , ...)
[DEBUG] 2022-08-15 17:39:16.370 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2022-08-15 17:39:16.370 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:39:16.370 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for fullName
[DEBUG] 2022-08-15 17:39:16.370 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2022-08-15 17:39:16.370 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for registrationDate
[DEBUG] 2022-08-15 17:39:16.370 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for cardId
[DEBUG] 2022-08-15 17:39:16.370 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2022-08-15 17:39:16.370 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for memberEmail
[DEBUG] 2022-08-15 17:39:16.370 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for points
[DEBUG] 2022-08-15 17:39:16.370 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2022-08-15 17:39:16.371 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for tech
[DEBUG] 2022-08-15 17:39:16.371 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for teamName
[DEBUG] 2022-08-15 17:39:16.371 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for teamSize
[DEBUG] 2022-08-15 17:39:16.371 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for board_id
[DEBUG] 2022-08-15 17:39:16.371 [http-nio-8080-exec-2] PrimaryKey - Forcing column [email] to be non-null as it is part of the primary key for table [members]
[DEBUG] 2022-08-15 17:39:16.372 [http-nio-8080-exec-2] PrimaryKey - Forcing column [cardid] to be non-null as it is part of the primary key for table [card]
[DEBUG] 2022-08-15 17:39:16.372 [http-nio-8080-exec-2] PrimaryKey - Forcing column [teamname] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2022-08-15 17:39:16.372 [http-nio-8080-exec-2] PrimaryKey - Forcing column [board_id] to be non-null as it is part of the primary key for table [boards]
[DEBUG] 2022-08-15 17:39:16.411 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2022-08-15 17:39:16.411 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2022-08-15 17:39:16.411 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-08-15 17:39:16.411 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-08-15 17:39:16.411 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2022-08-15 17:39:16.411 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: null
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-08-15 17:39:16.412 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-08-15 17:39:16.413 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2022-08-15 17:39:16.413 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-08-15 17:39:16.413 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2022-08-15 17:39:16.413 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2022-08-15 17:39:16.413 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-08-15 17:39:16.413 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2022-08-15 17:39:16.413 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-08-15 17:39:16.413 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-08-15 17:39:16.413 [http-nio-8080-exec-2] Settings - JPA compliance - query : disabled
[DEBUG] 2022-08-15 17:39:16.413 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2022-08-15 17:39:16.413 [http-nio-8080-exec-2] Settings - JPA compliance - lists : disabled
[DEBUG] 2022-08-15 17:39:16.413 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : disabled
[DEBUG] 2022-08-15 17:39:16.436 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:39:16.437 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:39:16.442 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-08-15 17:39:16.442 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, java.class.path=/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/ext/cldrdata.jar:/opt/jdk8u332-b09/jre/lib/ext/dnsns.jar:/opt/jdk8u332-b09/jre/lib/ext/jaccess.jar:/opt/jdk8u332-b09/jre/lib/ext/localedata.jar:/opt/jdk8u332-b09/jre/lib/ext/nashorn.jar:/opt/jdk8u332-b09/jre/lib/ext/sunec.jar:/opt/jdk8u332-b09/jre/lib/ext/sunjce_provider.jar:/opt/jdk8u332-b09/jre/lib/ext/sunpkcs11.jar:/opt/jdk8u332-b09/jre/lib/ext/zipfs.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/management-agent.jar:/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/target/classes:/home/cjester/.m2/repository/org/postgresql/postgresql/42.3.3/postgresql-42.3.3.jar:/home/cjester/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/home/cjester/.m2/repository/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.23/tomcat-embed-core-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.23/tomcat-annotations-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.23/tomcat-embed-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.23/tomcat-embed-el-8.5.23.jar:/home/cjester/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper/8.5.23/tomcat-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.5.23/tomcat-servlet-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-juli/8.5.23/tomcat-juli-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-el-api/8.5.23/tomcat-el-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-api/8.5.23/tomcat-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util-scan/8.5.23/tomcat-util-scan-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util/8.5.23/tomcat-util-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper-el/8.5.23/tomcat-jasper-el-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jsp-api/8.5.23/tomcat-jsp-api-8.5.23.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/home/cjester/.m2/repository/org/hibernate/hibernate-core/5.6.9.Final/hibernate-core-5.6.9.Final.jar:/home/cjester/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/home/cjester/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/cjester/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/cjester/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/cjester/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/home/cjester/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/cjester/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/cjester/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/home/cjester/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/cjester/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/cjester/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/cjester/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/snap/intellij-idea-community/381/lib/idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=America/New_York, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/opt/jdk8u332-b09/jre/lib/amd64, sun.java.command=com.revature.nabnak.MainDriver, sun.cpu.endian=little, user.home=/home/cjester, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/opt/jdk8u332-b09/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/opt/jdk8u332-b09/jre/lib/sunrsasign.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_332-b09, user.name=cjester, path.separator=:, hibernate.connection.username=****, os.version=5.15.0-46-generic, java.endorsed.dirs=/opt/jdk8u332-b09/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/tmp, catalina.home=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, java.version=1.8.0_332, user.dir=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, catalina.base=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@75ae26bb, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Temurin, java.vm.version=25.332-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/opt/jdk8u332-b09/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[DEBUG] 2022-08-15 17:39:16.448 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-08-15 17:39:16.449 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-08-15 17:39:16.449 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5398f1c4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@73288b2c]
[DEBUG] 2022-08-15 17:39:16.480 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:39:16.480 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:39:16.560 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:39:16.560 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:39:16.564 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:39:16.564 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:39:16.571 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:39:16.571 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:39:16.577 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:39:16.578 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select email from members where email =?
[DEBUG] 2022-08-15 17:39:16.578 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select member_.email, member_.experience_months as experien2_2_, member_.full_name as full_nam3_2_, member_.password as password4_2_, member_.registration_date as registra5_2_ from members member_ where member_.email=?
[DEBUG] 2022-08-15 17:39:16.578 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into members (experience_months, full_name, password, registration_date, email) values (?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:39:16.578 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update members set experience_months=?, full_name=?, password=?, registration_date=? where email=?
[DEBUG] 2022-08-15 17:39:16.578 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from members where email=?
[DEBUG] 2022-08-15 17:39:16.588 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a0b2031]
[DEBUG] 2022-08-15 17:39:16.589 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : experienceMonths
[DEBUG] 2022-08-15 17:39:16.589 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : fullName
[DEBUG] 2022-08-15 17:39:16.589 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-08-15 17:39:16.589 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : registrationDate
[DEBUG] 2022-08-15 17:39:16.589 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:39:16.594 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:39:16.596 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.member.Member)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.member.Member, querySpaceUid=<gen:0>, path=com.revature.nabnak.member.Member)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.member.Member)
          - SQL table alias mapping - member0_
          - alias suffix - 0_
          - suffixed key columns - {email1_2_0_}

[DEBUG] 2022-08-15 17:39:16.597 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.member.Member [NONE]: select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:39:16.597 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:39:16.597 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select teamName from teams where teamName =?
[DEBUG] 2022-08-15 17:39:16.597 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select team_.teamName, team_.teamSize as teamsize2_3_ from teams team_ where team_.teamName=?
[DEBUG] 2022-08-15 17:39:16.597 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into teams (teamSize, teamName) values (?, ?)
[DEBUG] 2022-08-15 17:39:16.597 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update teams set teamSize=? where teamName=?
[DEBUG] 2022-08-15 17:39:16.597 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from teams where teamName=?
[DEBUG] 2022-08-15 17:39:16.597 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@205772f6]
[DEBUG] 2022-08-15 17:39:16.597 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : teamSize
[DEBUG] 2022-08-15 17:39:16.597 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:39:16.597 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:39:16.597 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.team.Team)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.team.Team, querySpaceUid=<gen:0>, path=com.revature.nabnak.team.Team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.team.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamname1_3_0_}

[DEBUG] 2022-08-15 17:39:16.598 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.team.Team [NONE]: select team0_.teamName as teamname1_3_0_, team0_.teamSize as teamsize2_3_0_ from teams team0_ where team0_.teamName=?
[DEBUG] 2022-08-15 17:39:16.598 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:39:16.598 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select cardId from card where cardId =?
[DEBUG] 2022-08-15 17:39:16.598 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select card_.cardId, card_.description as descript2_1_, card_.memberEmail as memberem3_1_, card_.points as points4_1_, card_.status as status5_1_, card_.tech as tech6_1_ from card card_ where card_.cardId=?
[DEBUG] 2022-08-15 17:39:16.598 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into card (description, memberEmail, points, status, tech, cardId) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:39:16.598 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update card set description=?, memberEmail=?, points=?, status=?, tech=? where cardId=?
[DEBUG] 2022-08-15 17:39:16.598 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from card where cardId=?
[DEBUG] 2022-08-15 17:39:16.598 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33709b2d]
[DEBUG] 2022-08-15 17:39:16.598 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-08-15 17:39:16.598 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : memberEmail
[DEBUG] 2022-08-15 17:39:16.598 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2022-08-15 17:39:16.598 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2022-08-15 17:39:16.598 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : tech
[DEBUG] 2022-08-15 17:39:16.598 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:39:16.599 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:39:16.599 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.card.Card)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.card.Card, querySpaceUid=<gen:0>, path=com.revature.nabnak.card.Card)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.card.Card)
          - SQL table alias mapping - card0_
          - alias suffix - 0_
          - suffixed key columns - {cardid1_1_0_}

[DEBUG] 2022-08-15 17:39:16.599 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.card.Card [NONE]: select card0_.cardId as cardid1_1_0_, card0_.description as descript2_1_0_, card0_.memberEmail as memberem3_1_0_, card0_.points as points4_1_0_, card0_.status as status5_1_0_, card0_.tech as tech6_1_0_ from card card0_ where card0_.cardId=?
[DEBUG] 2022-08-15 17:39:16.599 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:39:16.599 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select board_id from boards where board_id =?
[DEBUG] 2022-08-15 17:39:16.599 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select board_.board_id from boards board_ where board_.board_id=?
[DEBUG] 2022-08-15 17:39:16.599 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into boards (board_id) values (?)
[DEBUG] 2022-08-15 17:39:16.599 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: null
[DEBUG] 2022-08-15 17:39:16.599 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from boards where board_id=?
[DEBUG] 2022-08-15 17:39:16.599 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1001a7af]
[DEBUG] 2022-08-15 17:39:16.599 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:39:16.599 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:39:16.600 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.board.Board)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.board.Board, querySpaceUid=<gen:0>, path=com.revature.nabnak.board.Board)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.board.Board)
          - SQL table alias mapping - board0_
          - alias suffix - 0_
          - suffixed key columns - {board_id1_0_0_}

[DEBUG] 2022-08-15 17:39:16.600 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.board.Board [NONE]: select board0_.board_id as board_id1_0_0_ from boards board0_ where board0_.board_id=?
[INFO ] 2022-08-15 17:39:16.619 [http-nio-8080-exec-2] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4aa7b40d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 2022-08-15 17:39:16.668 [http-nio-8080-exec-2] Table - No alter strings for table : boards
[DEBUG] 2022-08-15 17:39:16.668 [http-nio-8080-exec-2] SQL - alter table if exists card add column cardId int4 not null
[WARN ] 2022-08-15 17:39:16.679 [http-nio-8080-exec-2] ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:581) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:602) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:314) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:78) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:728) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at com.revature.nabnak.util.HibernateUtil.getSession(HibernateUtil.java:39) [classes/:?]
	at com.revature.nabnak.member.MemberDao.findById(MemberDao.java:52) [classes/:?]
	at com.revature.nabnak.member.MemberService.findById(MemberService.java:53) [classes/:?]
	at com.revature.nabnak.member.MemberServlet.doGet(MemberServlet.java:56) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_332]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.lang.Thread.run(Thread.java:750) [?:1.8.0_332]
Caused by: org.postgresql.util.PSQLException: ERROR: column "cardid" of relation "card" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:329) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:315) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:291) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:286) ~[postgresql-42.3.3.jar:42.3.3]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	... 35 more
[DEBUG] 2022-08-15 17:39:16.682 [http-nio-8080-exec-2] Table - No alter strings for table : members
[DEBUG] 2022-08-15 17:39:16.682 [http-nio-8080-exec-2] Table - No alter strings for table : teams
[DEBUG] 2022-08-15 17:39:16.682 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-08-15 17:39:16.683 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-08-15 17:39:16.685 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-08-15 17:39:16.686 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-08-15 17:39:16.686 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-08-15 17:39:16.686 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-08-15 17:39:16.688 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:39:16.691 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@aaead24
[DEBUG] 2022-08-15 17:39:16.691 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: d6cc0e7a-ac6b-438e-9880-6b7878c2e60d (<unnamed>)
[DEBUG] 2022-08-15 17:39:16.691 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-08-15 17:39:16.720 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-08-15 17:39:16.723 [http-nio-8080-exec-2] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:39:16.723 [http-nio-8080-exec-2] TransactionImpl - begin
[DEBUG] 2022-08-15 17:39:16.728 [http-nio-8080-exec-2] TransactionImpl - committing
[DEBUG] 2022-08-15 17:39:16.729 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:39:16.729 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:39:46.250 [Hibernate Connection Pool Validation Thread] DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
[INFO ] 2022-08-15 17:40:48.021 [http-nio-8080-exec-2] MemberServlet - Email entered ar@mail.com
[DEBUG] 2022-08-15 17:40:48.033 [http-nio-8080-exec-2] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 17:40:48.036 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:40:48.037 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:40:48.038 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 17:40:48.048 [http-nio-8080-exec-2] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-08-15 17:40:48.048 [http-nio-8080-exec-2] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.postgresql.Driver, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 17:40:48.121 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:40:48.121 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:40:48.121 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 17:40:48.124 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 17:40:48.124 [http-nio-8080-exec-2] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 17:40:48.128 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 17:40:48.129 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 17:40:48.137 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 17:40:48.151 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5e4c61a6
[DEBUG] 2022-08-15 17:40:48.151 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5e4c61a6
[DEBUG] 2022-08-15 17:40:48.151 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5e4c61a6
[DEBUG] 2022-08-15 17:40:48.152 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a6dc670
[DEBUG] 2022-08-15 17:40:48.152 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@d282ad1
[DEBUG] 2022-08-15 17:40:48.152 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@ca07994
[DEBUG] 2022-08-15 17:40:48.153 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6346021
[DEBUG] 2022-08-15 17:40:48.153 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6346021
[DEBUG] 2022-08-15 17:40:48.153 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6346021
[DEBUG] 2022-08-15 17:40:48.153 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@26578bbc
[DEBUG] 2022-08-15 17:40:48.154 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@26578bbc
[DEBUG] 2022-08-15 17:40:48.154 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@26578bbc
[DEBUG] 2022-08-15 17:40:48.154 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@411f786c
[DEBUG] 2022-08-15 17:40:48.154 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@411f786c
[DEBUG] 2022-08-15 17:40:48.154 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@411f786c
[DEBUG] 2022-08-15 17:40:48.155 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6bc34805
[DEBUG] 2022-08-15 17:40:48.155 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6bc34805
[DEBUG] 2022-08-15 17:40:48.155 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6bc34805
[DEBUG] 2022-08-15 17:40:48.155 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@47a28417
[DEBUG] 2022-08-15 17:40:48.156 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@47a28417
[DEBUG] 2022-08-15 17:40:48.156 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@47a28417
[DEBUG] 2022-08-15 17:40:48.156 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6bae1fab
[DEBUG] 2022-08-15 17:40:48.156 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6bae1fab
[DEBUG] 2022-08-15 17:40:48.156 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6bae1fab
[DEBUG] 2022-08-15 17:40:48.157 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@183f197a
[DEBUG] 2022-08-15 17:40:48.157 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@183f197a
[DEBUG] 2022-08-15 17:40:48.157 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@183f197a
[DEBUG] 2022-08-15 17:40:48.157 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@700c0eac
[DEBUG] 2022-08-15 17:40:48.158 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@700c0eac
[DEBUG] 2022-08-15 17:40:48.158 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@554fc2ff
[DEBUG] 2022-08-15 17:40:48.158 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@554fc2ff
[DEBUG] 2022-08-15 17:40:48.158 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@437daf39
[DEBUG] 2022-08-15 17:40:48.159 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@437daf39
[DEBUG] 2022-08-15 17:40:48.159 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@608b600e
[DEBUG] 2022-08-15 17:40:48.159 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@568af881
[DEBUG] 2022-08-15 17:40:48.160 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@fe4aad2
[DEBUG] 2022-08-15 17:40:48.160 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@fe4aad2
[DEBUG] 2022-08-15 17:40:48.160 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@563b00e5
[DEBUG] 2022-08-15 17:40:48.160 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@563b00e5
[DEBUG] 2022-08-15 17:40:48.167 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@759d541d
[DEBUG] 2022-08-15 17:40:48.167 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@759d541d
[DEBUG] 2022-08-15 17:40:48.168 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@542c94d0
[DEBUG] 2022-08-15 17:40:48.168 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@542c94d0
[DEBUG] 2022-08-15 17:40:48.169 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4b2f581d
[DEBUG] 2022-08-15 17:40:48.169 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4b2f581d
[DEBUG] 2022-08-15 17:40:48.169 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3a1e318e
[DEBUG] 2022-08-15 17:40:48.170 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3a1e318e
[DEBUG] 2022-08-15 17:40:48.170 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70cf4dcd
[DEBUG] 2022-08-15 17:40:48.170 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70cf4dcd
[DEBUG] 2022-08-15 17:40:48.171 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6ad6af4b
[DEBUG] 2022-08-15 17:40:48.171 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6ad6af4b
[DEBUG] 2022-08-15 17:40:48.173 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@37a55247
[DEBUG] 2022-08-15 17:40:48.173 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@37a55247
[DEBUG] 2022-08-15 17:40:48.173 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@28b972c7
[DEBUG] 2022-08-15 17:40:48.173 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@28b972c7
[DEBUG] 2022-08-15 17:40:48.174 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5e8ff00f
[DEBUG] 2022-08-15 17:40:48.174 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e8ff00f
[DEBUG] 2022-08-15 17:40:48.175 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7b1bde38
[DEBUG] 2022-08-15 17:40:48.175 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7b1bde38
[DEBUG] 2022-08-15 17:40:48.175 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7b1bde38
[DEBUG] 2022-08-15 17:40:48.175 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@417b8d18
[DEBUG] 2022-08-15 17:40:48.176 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@18f8edf4
[DEBUG] 2022-08-15 17:40:48.176 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18f8edf4
[DEBUG] 2022-08-15 17:40:48.176 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18f8edf4
[DEBUG] 2022-08-15 17:40:48.176 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@20de2ee6
[DEBUG] 2022-08-15 17:40:48.177 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@33198f51
[DEBUG] 2022-08-15 17:40:48.177 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@645b2d64
[DEBUG] 2022-08-15 17:40:48.177 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@645b2d64
[DEBUG] 2022-08-15 17:40:48.178 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@67ccb977
[DEBUG] 2022-08-15 17:40:48.178 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@67ccb977
[DEBUG] 2022-08-15 17:40:48.178 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2231dab8
[DEBUG] 2022-08-15 17:40:48.178 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2231dab8
[DEBUG] 2022-08-15 17:40:48.179 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@66c6bccc
[DEBUG] 2022-08-15 17:40:48.179 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@66c6bccc
[DEBUG] 2022-08-15 17:40:48.179 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6bee6cdb
[DEBUG] 2022-08-15 17:40:48.179 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6bee6cdb
[DEBUG] 2022-08-15 17:40:48.180 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3526e21b
[DEBUG] 2022-08-15 17:40:48.180 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@12d5c997
[DEBUG] 2022-08-15 17:40:48.180 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@12d5c997
[DEBUG] 2022-08-15 17:40:48.180 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@12d5c997
[DEBUG] 2022-08-15 17:40:48.181 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@a2fccf6
[DEBUG] 2022-08-15 17:40:48.181 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@a2fccf6
[DEBUG] 2022-08-15 17:40:48.181 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@a2fccf6
[DEBUG] 2022-08-15 17:40:48.181 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6dfd2eb1
[DEBUG] 2022-08-15 17:40:48.182 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5845999e
[DEBUG] 2022-08-15 17:40:48.182 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2afdd7f4
[DEBUG] 2022-08-15 17:40:48.182 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2afdd7f4
[DEBUG] 2022-08-15 17:40:48.182 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2afdd7f4
[DEBUG] 2022-08-15 17:40:48.183 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@28ea791c
[DEBUG] 2022-08-15 17:40:48.183 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@28ea791c
[DEBUG] 2022-08-15 17:40:48.183 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@28ea791c
[DEBUG] 2022-08-15 17:40:48.183 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@8af73b1
[DEBUG] 2022-08-15 17:40:48.183 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6bcaa7b4
[DEBUG] 2022-08-15 17:40:48.184 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2f98408d
[DEBUG] 2022-08-15 17:40:48.184 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2f98408d
[DEBUG] 2022-08-15 17:40:48.184 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2df7732c
[DEBUG] 2022-08-15 17:40:48.185 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@23c09a3
[DEBUG] 2022-08-15 17:40:48.185 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@23c09a3
[DEBUG] 2022-08-15 17:40:48.186 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@284bec1c
[DEBUG] 2022-08-15 17:40:48.186 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@284bec1c
[DEBUG] 2022-08-15 17:40:48.186 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@278b7e51
[DEBUG] 2022-08-15 17:40:48.186 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3ee7d41e
[DEBUG] 2022-08-15 17:40:48.187 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2328b94c
[DEBUG] 2022-08-15 17:40:48.188 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4a63d39a
[DEBUG] 2022-08-15 17:40:48.188 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a63d39a
[DEBUG] 2022-08-15 17:40:48.189 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d36d031
[DEBUG] 2022-08-15 17:40:48.189 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@599d3d0e
[DEBUG] 2022-08-15 17:40:48.189 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@74e7a20d
[DEBUG] 2022-08-15 17:40:48.189 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3c878be4
[DEBUG] 2022-08-15 17:40:48.189 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@70b731d
[DEBUG] 2022-08-15 17:40:48.189 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@374e5bbf
[DEBUG] 2022-08-15 17:40:48.189 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ef07091
[DEBUG] 2022-08-15 17:40:48.189 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ea81c00
[DEBUG] 2022-08-15 17:40:48.204 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 17:40:48.204 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 17:40:48.204 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:40:48.204 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:40:48.205 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 17:40:48.205 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 17:40:48.205 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 17:40:48.206 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:40:48.206 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 17:40:48.207 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 17:40:48.207 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 17:40:48.207 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 17:40:48.207 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:40:48.208 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 17:40:48.211 [http-nio-8080-exec-2] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 17:40:48.213 [http-nio-8080-exec-2] pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak]
[INFO ] 2022-08-15 17:40:48.214 [http-nio-8080-exec-2] pooling - HHH10001001: Connection properties: {user=postgres, password=javaReact1000}
[INFO ] 2022-08-15 17:40:48.214 [http-nio-8080-exec-2] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2022-08-15 17:40:48.215 [http-nio-8080-exec-2] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2022-08-15 17:40:48.215 [http-nio-8080-exec-2] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2022-08-15 17:40:48.516 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4
      major : 13
      minor : 4
[DEBUG] 2022-08-15 17:40:48.517 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
[DEBUG] 2022-08-15 17:40:48.517 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-08-15 17:40:48.523 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 17:40:48.529 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-08-15 17:40:48.577 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6cd124fa
[DEBUG] 2022-08-15 17:40:48.577 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6cd124fa
[DEBUG] 2022-08-15 17:40:48.577 [http-nio-8080-exec-2] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6bee6cdb
[DEBUG] 2022-08-15 17:40:48.578 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17b3bbe1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@313a5c3f]
[DEBUG] 2022-08-15 17:40:48.593 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-08-15 17:40:48.602 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:40:48.612 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:40:48.614 [http-nio-8080-exec-2] EntityBinder - Import with entity name Member
[DEBUG] 2022-08-15 17:40:48.615 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.member.Member on table members
[DEBUG] 2022-08-15 17:40:48.624 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:40:48.625 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:40:48.625 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:40:48.626 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2022-08-15 17:40:48.626 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:email]
[DEBUG] 2022-08-15 17:40:48.627 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2022-08-15 17:40:48.628 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2022-08-15 17:40:48.629 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
[DEBUG] 2022-08-15 17:40:48.630 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=experience_months, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:40:48.630 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property experienceMonths with lazy=false
[DEBUG] 2022-08-15 17:40:48.630 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:experienceMonths]
[DEBUG] 2022-08-15 17:40:48.630 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:40:48.630 [http-nio-8080-exec-2] PropertyBinder - Building property experienceMonths
[DEBUG] 2022-08-15 17:40:48.630 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:40:48.630 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
[DEBUG] 2022-08-15 17:40:48.630 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:fullName]
[DEBUG] 2022-08-15 17:40:48.630 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for fullName
[DEBUG] 2022-08-15 17:40:48.630 [http-nio-8080-exec-2] PropertyBinder - Building property fullName
[DEBUG] 2022-08-15 17:40:48.631 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:40:48.631 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2022-08-15 17:40:48.631 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:password]
[DEBUG] 2022-08-15 17:40:48.631 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2022-08-15 17:40:48.631 [http-nio-8080-exec-2] PropertyBinder - Building property password
[DEBUG] 2022-08-15 17:40:48.632 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=registration_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:40:48.632 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property registrationDate with lazy=false
[DEBUG] 2022-08-15 17:40:48.632 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:registrationDate]
[DEBUG] 2022-08-15 17:40:48.632 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for registrationDate
[DEBUG] 2022-08-15 17:40:48.632 [http-nio-8080-exec-2] PropertyBinder - Building property registrationDate
[DEBUG] 2022-08-15 17:40:48.635 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:40:48.635 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:40:48.636 [http-nio-8080-exec-2] EntityBinder - Import with entity name Card
[DEBUG] 2022-08-15 17:40:48.636 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.card.Card on table card
[DEBUG] 2022-08-15 17:40:48.636 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=cardId, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:40:48.636 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:40:48.636 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:40:48.637 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property cardId with lazy=false
[DEBUG] 2022-08-15 17:40:48.637 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:cardId]
[DEBUG] 2022-08-15 17:40:48.637 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for cardId
[DEBUG] 2022-08-15 17:40:48.637 [http-nio-8080-exec-2] PropertyBinder - Building property cardId
[DEBUG] 2022-08-15 17:40:48.637 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cardId)]), cardId, assigned, , ...)
[DEBUG] 2022-08-15 17:40:48.637 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:40:48.637 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2022-08-15 17:40:48.637 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:description]
[DEBUG] 2022-08-15 17:40:48.638 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2022-08-15 17:40:48.638 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2022-08-15 17:40:48.638 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=memberEmail, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:40:48.638 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property memberEmail with lazy=false
[DEBUG] 2022-08-15 17:40:48.638 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:memberEmail]
[DEBUG] 2022-08-15 17:40:48.638 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for memberEmail
[DEBUG] 2022-08-15 17:40:48.638 [http-nio-8080-exec-2] PropertyBinder - Building property memberEmail
[DEBUG] 2022-08-15 17:40:48.638 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=points, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:40:48.638 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property points with lazy=false
[DEBUG] 2022-08-15 17:40:48.639 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:points]
[DEBUG] 2022-08-15 17:40:48.639 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for points
[DEBUG] 2022-08-15 17:40:48.639 [http-nio-8080-exec-2] PropertyBinder - Building property points
[DEBUG] 2022-08-15 17:40:48.639 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:40:48.639 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2022-08-15 17:40:48.639 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:status]
[DEBUG] 2022-08-15 17:40:48.639 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2022-08-15 17:40:48.639 [http-nio-8080-exec-2] PropertyBinder - Building property status
[DEBUG] 2022-08-15 17:40:48.639 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=tech, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:40:48.639 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property tech with lazy=false
[DEBUG] 2022-08-15 17:40:48.639 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:tech]
[DEBUG] 2022-08-15 17:40:48.640 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for tech
[DEBUG] 2022-08-15 17:40:48.640 [http-nio-8080-exec-2] PropertyBinder - Building property tech
[DEBUG] 2022-08-15 17:40:48.640 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:40:48.640 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:40:48.640 [http-nio-8080-exec-2] EntityBinder - Import with entity name Team
[DEBUG] 2022-08-15 17:40:48.640 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.team.Team on table teams
[DEBUG] 2022-08-15 17:40:48.641 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:40:48.641 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:40:48.641 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:40:48.641 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2022-08-15 17:40:48.641 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamName]
[DEBUG] 2022-08-15 17:40:48.641 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for teamName
[DEBUG] 2022-08-15 17:40:48.641 [http-nio-8080-exec-2] PropertyBinder - Building property teamName
[DEBUG] 2022-08-15 17:40:48.641 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(teamName)]), teamName, assigned, , ...)
[DEBUG] 2022-08-15 17:40:48.641 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamSize, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:40:48.642 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property teamSize with lazy=false
[DEBUG] 2022-08-15 17:40:48.642 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamSize]
[DEBUG] 2022-08-15 17:40:48.642 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for teamSize
[DEBUG] 2022-08-15 17:40:48.642 [http-nio-8080-exec-2] PropertyBinder - Building property teamSize
[DEBUG] 2022-08-15 17:40:48.642 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:40:48.642 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:40:48.642 [http-nio-8080-exec-2] EntityBinder - Import with entity name Board
[DEBUG] 2022-08-15 17:40:48.642 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.board.Board on table boards
[DEBUG] 2022-08-15 17:40:48.642 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(boards), mappingColumn=board_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:40:48.643 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:40:48.643 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:40:48.643 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property board_id with lazy=false
[DEBUG] 2022-08-15 17:40:48.643 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.board.Board:board_id]
[DEBUG] 2022-08-15 17:40:48.643 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for board_id
[DEBUG] 2022-08-15 17:40:48.643 [http-nio-8080-exec-2] PropertyBinder - Building property board_id
[DEBUG] 2022-08-15 17:40:48.643 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(board_id)]), board_id, assigned, , ...)
[DEBUG] 2022-08-15 17:40:48.644 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2022-08-15 17:40:48.644 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:40:48.644 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for fullName
[DEBUG] 2022-08-15 17:40:48.644 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2022-08-15 17:40:48.644 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for registrationDate
[DEBUG] 2022-08-15 17:40:48.644 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for cardId
[DEBUG] 2022-08-15 17:40:48.644 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2022-08-15 17:40:48.644 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for memberEmail
[DEBUG] 2022-08-15 17:40:48.644 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for points
[DEBUG] 2022-08-15 17:40:48.644 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2022-08-15 17:40:48.645 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for tech
[DEBUG] 2022-08-15 17:40:48.645 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for teamName
[DEBUG] 2022-08-15 17:40:48.645 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for teamSize
[DEBUG] 2022-08-15 17:40:48.645 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for board_id
[DEBUG] 2022-08-15 17:40:48.645 [http-nio-8080-exec-2] PrimaryKey - Forcing column [email] to be non-null as it is part of the primary key for table [members]
[DEBUG] 2022-08-15 17:40:48.645 [http-nio-8080-exec-2] PrimaryKey - Forcing column [cardid] to be non-null as it is part of the primary key for table [card]
[DEBUG] 2022-08-15 17:40:48.646 [http-nio-8080-exec-2] PrimaryKey - Forcing column [teamname] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2022-08-15 17:40:48.646 [http-nio-8080-exec-2] PrimaryKey - Forcing column [board_id] to be non-null as it is part of the primary key for table [boards]
[DEBUG] 2022-08-15 17:40:48.685 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2022-08-15 17:40:48.685 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2022-08-15 17:40:48.685 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-08-15 17:40:48.685 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-08-15 17:40:48.685 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2022-08-15 17:40:48.685 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: null
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-08-15 17:40:48.686 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-08-15 17:40:48.687 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-08-15 17:40:48.687 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2022-08-15 17:40:48.687 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-08-15 17:40:48.687 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2022-08-15 17:40:48.687 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2022-08-15 17:40:48.687 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-08-15 17:40:48.687 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2022-08-15 17:40:48.687 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-08-15 17:40:48.687 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-08-15 17:40:48.687 [http-nio-8080-exec-2] Settings - JPA compliance - query : disabled
[DEBUG] 2022-08-15 17:40:48.687 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2022-08-15 17:40:48.687 [http-nio-8080-exec-2] Settings - JPA compliance - lists : disabled
[DEBUG] 2022-08-15 17:40:48.687 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : disabled
[DEBUG] 2022-08-15 17:40:48.710 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:40:48.710 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:40:48.716 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-08-15 17:40:48.716 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, java.class.path=/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/ext/cldrdata.jar:/opt/jdk8u332-b09/jre/lib/ext/dnsns.jar:/opt/jdk8u332-b09/jre/lib/ext/jaccess.jar:/opt/jdk8u332-b09/jre/lib/ext/localedata.jar:/opt/jdk8u332-b09/jre/lib/ext/nashorn.jar:/opt/jdk8u332-b09/jre/lib/ext/sunec.jar:/opt/jdk8u332-b09/jre/lib/ext/sunjce_provider.jar:/opt/jdk8u332-b09/jre/lib/ext/sunpkcs11.jar:/opt/jdk8u332-b09/jre/lib/ext/zipfs.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/management-agent.jar:/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/target/classes:/home/cjester/.m2/repository/org/postgresql/postgresql/42.3.3/postgresql-42.3.3.jar:/home/cjester/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/home/cjester/.m2/repository/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.23/tomcat-embed-core-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.23/tomcat-annotations-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.23/tomcat-embed-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.23/tomcat-embed-el-8.5.23.jar:/home/cjester/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper/8.5.23/tomcat-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.5.23/tomcat-servlet-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-juli/8.5.23/tomcat-juli-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-el-api/8.5.23/tomcat-el-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-api/8.5.23/tomcat-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util-scan/8.5.23/tomcat-util-scan-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util/8.5.23/tomcat-util-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper-el/8.5.23/tomcat-jasper-el-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jsp-api/8.5.23/tomcat-jsp-api-8.5.23.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/home/cjester/.m2/repository/org/hibernate/hibernate-core/5.6.9.Final/hibernate-core-5.6.9.Final.jar:/home/cjester/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/home/cjester/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/cjester/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/cjester/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/cjester/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/home/cjester/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/cjester/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/cjester/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/home/cjester/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/cjester/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/cjester/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/cjester/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/snap/intellij-idea-community/381/lib/idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=America/New_York, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/opt/jdk8u332-b09/jre/lib/amd64, sun.java.command=com.revature.nabnak.MainDriver, sun.cpu.endian=little, user.home=/home/cjester, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/opt/jdk8u332-b09/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/opt/jdk8u332-b09/jre/lib/sunrsasign.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_332-b09, user.name=cjester, path.separator=:, hibernate.connection.username=****, os.version=5.15.0-46-generic, java.endorsed.dirs=/opt/jdk8u332-b09/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/tmp, catalina.home=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, java.version=1.8.0_332, user.dir=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, catalina.base=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@9012488, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Temurin, java.vm.version=25.332-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/opt/jdk8u332-b09/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[DEBUG] 2022-08-15 17:40:48.722 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-08-15 17:40:48.723 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-08-15 17:40:48.723 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17b3bbe1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@273d1de8]
[DEBUG] 2022-08-15 17:40:48.753 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:40:48.753 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:40:48.835 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:40:48.835 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:40:48.839 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:40:48.839 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:40:48.849 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:40:48.849 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:40:48.855 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:40:48.855 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select email from members where email =?
[DEBUG] 2022-08-15 17:40:48.855 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select member_.email, member_.experience_months as experien2_2_, member_.full_name as full_nam3_2_, member_.password as password4_2_, member_.registration_date as registra5_2_ from members member_ where member_.email=?
[DEBUG] 2022-08-15 17:40:48.855 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into members (experience_months, full_name, password, registration_date, email) values (?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:40:48.855 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update members set experience_months=?, full_name=?, password=?, registration_date=? where email=?
[DEBUG] 2022-08-15 17:40:48.855 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from members where email=?
[DEBUG] 2022-08-15 17:40:48.865 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32469ae7]
[DEBUG] 2022-08-15 17:40:48.866 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : experienceMonths
[DEBUG] 2022-08-15 17:40:48.866 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : fullName
[DEBUG] 2022-08-15 17:40:48.866 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-08-15 17:40:48.866 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : registrationDate
[DEBUG] 2022-08-15 17:40:48.866 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:40:48.871 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:40:48.873 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.member.Member)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.member.Member, querySpaceUid=<gen:0>, path=com.revature.nabnak.member.Member)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.member.Member)
          - SQL table alias mapping - member0_
          - alias suffix - 0_
          - suffixed key columns - {email1_2_0_}

[DEBUG] 2022-08-15 17:40:48.874 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.member.Member [NONE]: select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:40:48.874 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:40:48.874 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select teamName from teams where teamName =?
[DEBUG] 2022-08-15 17:40:48.874 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select team_.teamName, team_.teamSize as teamsize2_3_ from teams team_ where team_.teamName=?
[DEBUG] 2022-08-15 17:40:48.874 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into teams (teamSize, teamName) values (?, ?)
[DEBUG] 2022-08-15 17:40:48.874 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update teams set teamSize=? where teamName=?
[DEBUG] 2022-08-15 17:40:48.874 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from teams where teamName=?
[DEBUG] 2022-08-15 17:40:48.874 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@556dba7f]
[DEBUG] 2022-08-15 17:40:48.874 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : teamSize
[DEBUG] 2022-08-15 17:40:48.874 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:40:48.875 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:40:48.875 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.team.Team)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.team.Team, querySpaceUid=<gen:0>, path=com.revature.nabnak.team.Team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.team.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamname1_3_0_}

[DEBUG] 2022-08-15 17:40:48.875 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.team.Team [NONE]: select team0_.teamName as teamname1_3_0_, team0_.teamSize as teamsize2_3_0_ from teams team0_ where team0_.teamName=?
[DEBUG] 2022-08-15 17:40:48.875 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:40:48.875 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select cardId from card where cardId =?
[DEBUG] 2022-08-15 17:40:48.875 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select card_.cardId, card_.description as descript2_1_, card_.memberEmail as memberem3_1_, card_.points as points4_1_, card_.status as status5_1_, card_.tech as tech6_1_ from card card_ where card_.cardId=?
[DEBUG] 2022-08-15 17:40:48.875 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into card (description, memberEmail, points, status, tech, cardId) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:40:48.875 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update card set description=?, memberEmail=?, points=?, status=?, tech=? where cardId=?
[DEBUG] 2022-08-15 17:40:48.875 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from card where cardId=?
[DEBUG] 2022-08-15 17:40:48.875 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af0bb56]
[DEBUG] 2022-08-15 17:40:48.875 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-08-15 17:40:48.875 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : memberEmail
[DEBUG] 2022-08-15 17:40:48.876 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2022-08-15 17:40:48.876 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2022-08-15 17:40:48.876 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : tech
[DEBUG] 2022-08-15 17:40:48.876 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:40:48.876 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:40:48.876 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.card.Card)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.card.Card, querySpaceUid=<gen:0>, path=com.revature.nabnak.card.Card)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.card.Card)
          - SQL table alias mapping - card0_
          - alias suffix - 0_
          - suffixed key columns - {cardid1_1_0_}

[DEBUG] 2022-08-15 17:40:48.876 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.card.Card [NONE]: select card0_.cardId as cardid1_1_0_, card0_.description as descript2_1_0_, card0_.memberEmail as memberem3_1_0_, card0_.points as points4_1_0_, card0_.status as status5_1_0_, card0_.tech as tech6_1_0_ from card card0_ where card0_.cardId=?
[DEBUG] 2022-08-15 17:40:48.876 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:40:48.876 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select board_id from boards where board_id =?
[DEBUG] 2022-08-15 17:40:48.876 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select board_.board_id from boards board_ where board_.board_id=?
[DEBUG] 2022-08-15 17:40:48.876 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into boards (board_id) values (?)
[DEBUG] 2022-08-15 17:40:48.876 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: null
[DEBUG] 2022-08-15 17:40:48.876 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from boards where board_id=?
[DEBUG] 2022-08-15 17:40:48.877 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@402b230d]
[DEBUG] 2022-08-15 17:40:48.877 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:40:48.877 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:40:48.877 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.board.Board)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.board.Board, querySpaceUid=<gen:0>, path=com.revature.nabnak.board.Board)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.board.Board)
          - SQL table alias mapping - board0_
          - alias suffix - 0_
          - suffixed key columns - {board_id1_0_0_}

[DEBUG] 2022-08-15 17:40:48.877 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.board.Board [NONE]: select board0_.board_id as board_id1_0_0_ from boards board0_ where board0_.board_id=?
[INFO ] 2022-08-15 17:40:48.896 [http-nio-8080-exec-2] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3ab880fb] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 2022-08-15 17:40:48.946 [http-nio-8080-exec-2] Table - No alter strings for table : boards
[DEBUG] 2022-08-15 17:40:48.947 [http-nio-8080-exec-2] SQL - alter table if exists card add column cardId int4 not null
[WARN ] 2022-08-15 17:40:48.961 [http-nio-8080-exec-2] ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:581) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:602) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:314) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:78) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:728) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at com.revature.nabnak.util.HibernateUtil.getSession(HibernateUtil.java:39) [classes/:?]
	at com.revature.nabnak.member.MemberDao.findById(MemberDao.java:52) [classes/:?]
	at com.revature.nabnak.member.MemberService.findById(MemberService.java:53) [classes/:?]
	at com.revature.nabnak.member.MemberServlet.doGet(MemberServlet.java:56) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_332]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.lang.Thread.run(Thread.java:750) [?:1.8.0_332]
Caused by: org.postgresql.util.PSQLException: ERROR: column "cardid" of relation "card" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:329) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:315) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:291) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:286) ~[postgresql-42.3.3.jar:42.3.3]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	... 35 more
[DEBUG] 2022-08-15 17:40:48.964 [http-nio-8080-exec-2] Table - No alter strings for table : members
[DEBUG] 2022-08-15 17:40:48.964 [http-nio-8080-exec-2] Table - No alter strings for table : teams
[DEBUG] 2022-08-15 17:40:48.964 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-08-15 17:40:48.964 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-08-15 17:40:48.967 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-08-15 17:40:48.967 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-08-15 17:40:48.968 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-08-15 17:40:48.968 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-08-15 17:40:48.970 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:40:48.972 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6898529
[DEBUG] 2022-08-15 17:40:48.973 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: a57f70e2-9b4b-4bcf-9cb3-b60147a36638 (<unnamed>)
[DEBUG] 2022-08-15 17:40:48.973 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-08-15 17:40:49.001 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-08-15 17:40:49.003 [http-nio-8080-exec-2] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:40:49.003 [http-nio-8080-exec-2] TransactionImpl - begin
[DEBUG] 2022-08-15 17:40:49.008 [http-nio-8080-exec-2] TransactionImpl - committing
[DEBUG] 2022-08-15 17:40:49.008 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:40:49.009 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:41:18.514 [Hibernate Connection Pool Validation Thread] DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
[INFO ] 2022-08-15 17:43:56.505 [http-nio-8080-exec-1] MemberServlet - Email entered ar@mail.com
[DEBUG] 2022-08-15 17:43:56.517 [http-nio-8080-exec-1] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 17:43:56.520 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:43:56.521 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:43:56.522 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 17:43:56.532 [http-nio-8080-exec-1] Version - HHH000412: Hibernate ORM core version 5.4.32.Final
[INFO ] 2022-08-15 17:43:56.533 [http-nio-8080-exec-1] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.postgresql.Driver, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 17:43:56.604 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:43:56.604 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:43:56.604 [http-nio-8080-exec-1] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 17:43:56.607 [http-nio-8080-exec-1] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 17:43:56.607 [http-nio-8080-exec-1] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 17:43:56.613 [http-nio-8080-exec-1] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 17:43:56.614 [http-nio-8080-exec-1] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 17:43:56.623 [http-nio-8080-exec-1] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 17:43:56.637 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6909e161
[DEBUG] 2022-08-15 17:43:56.637 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6909e161
[DEBUG] 2022-08-15 17:43:56.638 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6909e161
[DEBUG] 2022-08-15 17:43:56.638 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@623ffb6e
[DEBUG] 2022-08-15 17:43:56.638 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@86af968
[DEBUG] 2022-08-15 17:43:56.638 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3be3a11d
[DEBUG] 2022-08-15 17:43:56.639 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4018bdd0
[DEBUG] 2022-08-15 17:43:56.639 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4018bdd0
[DEBUG] 2022-08-15 17:43:56.639 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4018bdd0
[DEBUG] 2022-08-15 17:43:56.640 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@51ccdc61
[DEBUG] 2022-08-15 17:43:56.640 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@51ccdc61
[DEBUG] 2022-08-15 17:43:56.640 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@51ccdc61
[DEBUG] 2022-08-15 17:43:56.640 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@e130e3e
[DEBUG] 2022-08-15 17:43:56.641 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@e130e3e
[DEBUG] 2022-08-15 17:43:56.641 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@e130e3e
[DEBUG] 2022-08-15 17:43:56.641 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@34a49990
[DEBUG] 2022-08-15 17:43:56.641 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@34a49990
[DEBUG] 2022-08-15 17:43:56.641 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34a49990
[DEBUG] 2022-08-15 17:43:56.642 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@82eb521
[DEBUG] 2022-08-15 17:43:56.642 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@82eb521
[DEBUG] 2022-08-15 17:43:56.642 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@82eb521
[DEBUG] 2022-08-15 17:43:56.643 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@737080b4
[DEBUG] 2022-08-15 17:43:56.643 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@737080b4
[DEBUG] 2022-08-15 17:43:56.643 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@737080b4
[DEBUG] 2022-08-15 17:43:56.643 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6381a2bd
[DEBUG] 2022-08-15 17:43:56.643 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6381a2bd
[DEBUG] 2022-08-15 17:43:56.644 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6381a2bd
[DEBUG] 2022-08-15 17:43:56.644 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@62b24d45
[DEBUG] 2022-08-15 17:43:56.644 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@62b24d45
[DEBUG] 2022-08-15 17:43:56.645 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@15203477
[DEBUG] 2022-08-15 17:43:56.645 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@15203477
[DEBUG] 2022-08-15 17:43:56.645 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2472153c
[DEBUG] 2022-08-15 17:43:56.645 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2472153c
[DEBUG] 2022-08-15 17:43:56.646 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3ffacbef
[DEBUG] 2022-08-15 17:43:56.646 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@779f0131
[DEBUG] 2022-08-15 17:43:56.646 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5cec9e36
[DEBUG] 2022-08-15 17:43:56.646 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5cec9e36
[DEBUG] 2022-08-15 17:43:56.647 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@c5b24a6
[DEBUG] 2022-08-15 17:43:56.647 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c5b24a6
[DEBUG] 2022-08-15 17:43:56.653 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@83ea589
[DEBUG] 2022-08-15 17:43:56.653 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@83ea589
[DEBUG] 2022-08-15 17:43:56.654 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@36f48f6c
[DEBUG] 2022-08-15 17:43:56.654 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@36f48f6c
[DEBUG] 2022-08-15 17:43:56.655 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2422296d
[DEBUG] 2022-08-15 17:43:56.655 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2422296d
[DEBUG] 2022-08-15 17:43:56.656 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4ea26193
[DEBUG] 2022-08-15 17:43:56.656 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4ea26193
[DEBUG] 2022-08-15 17:43:56.656 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6ce7fb56
[DEBUG] 2022-08-15 17:43:56.657 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6ce7fb56
[DEBUG] 2022-08-15 17:43:56.657 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@130d2c22
[DEBUG] 2022-08-15 17:43:56.657 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@130d2c22
[DEBUG] 2022-08-15 17:43:56.659 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4179eb9f
[DEBUG] 2022-08-15 17:43:56.659 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4179eb9f
[DEBUG] 2022-08-15 17:43:56.660 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@46b1a850
[DEBUG] 2022-08-15 17:43:56.660 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@46b1a850
[DEBUG] 2022-08-15 17:43:56.660 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2fb0f9e
[DEBUG] 2022-08-15 17:43:56.660 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2fb0f9e
[DEBUG] 2022-08-15 17:43:56.661 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1b8090a4
[DEBUG] 2022-08-15 17:43:56.661 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1b8090a4
[DEBUG] 2022-08-15 17:43:56.661 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1b8090a4
[DEBUG] 2022-08-15 17:43:56.662 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@49c4719
[DEBUG] 2022-08-15 17:43:56.662 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@50fb87d4
[DEBUG] 2022-08-15 17:43:56.662 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@50fb87d4
[DEBUG] 2022-08-15 17:43:56.663 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@50fb87d4
[DEBUG] 2022-08-15 17:43:56.663 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@71f5b2dc
[DEBUG] 2022-08-15 17:43:56.663 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@39494142
[DEBUG] 2022-08-15 17:43:56.664 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@a008536
[DEBUG] 2022-08-15 17:43:56.664 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@a008536
[DEBUG] 2022-08-15 17:43:56.664 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3cca6e3b
[DEBUG] 2022-08-15 17:43:56.664 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3cca6e3b
[DEBUG] 2022-08-15 17:43:56.665 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@618e5786
[DEBUG] 2022-08-15 17:43:56.665 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@618e5786
[DEBUG] 2022-08-15 17:43:56.665 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1a3556bb
[DEBUG] 2022-08-15 17:43:56.665 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1a3556bb
[DEBUG] 2022-08-15 17:43:56.666 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43a1260e
[DEBUG] 2022-08-15 17:43:56.666 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43a1260e
[DEBUG] 2022-08-15 17:43:56.666 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@359844b5
[DEBUG] 2022-08-15 17:43:56.667 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@20ad03cc
[DEBUG] 2022-08-15 17:43:56.667 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@20ad03cc
[DEBUG] 2022-08-15 17:43:56.667 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@20ad03cc
[DEBUG] 2022-08-15 17:43:56.667 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@113b8320
[DEBUG] 2022-08-15 17:43:56.667 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@113b8320
[DEBUG] 2022-08-15 17:43:56.667 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@113b8320
[DEBUG] 2022-08-15 17:43:56.668 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@246e12df
[DEBUG] 2022-08-15 17:43:56.668 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2e2af821
[DEBUG] 2022-08-15 17:43:56.669 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7f1180c4
[DEBUG] 2022-08-15 17:43:56.669 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f1180c4
[DEBUG] 2022-08-15 17:43:56.669 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7f1180c4
[DEBUG] 2022-08-15 17:43:56.669 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17e93c2b
[DEBUG] 2022-08-15 17:43:56.669 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17e93c2b
[DEBUG] 2022-08-15 17:43:56.669 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17e93c2b
[DEBUG] 2022-08-15 17:43:56.670 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@10c6d2a0
[DEBUG] 2022-08-15 17:43:56.670 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6e903a4a
[DEBUG] 2022-08-15 17:43:56.670 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1f017f92
[DEBUG] 2022-08-15 17:43:56.671 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f017f92
[DEBUG] 2022-08-15 17:43:56.671 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@18c1d935
[DEBUG] 2022-08-15 17:43:56.671 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@616404b6
[DEBUG] 2022-08-15 17:43:56.671 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@616404b6
[DEBUG] 2022-08-15 17:43:56.672 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@326b9513
[DEBUG] 2022-08-15 17:43:56.672 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@326b9513
[DEBUG] 2022-08-15 17:43:56.672 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@66e76ea6
[DEBUG] 2022-08-15 17:43:56.673 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26dbb0c0
[DEBUG] 2022-08-15 17:43:56.673 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2f476002
[DEBUG] 2022-08-15 17:43:56.675 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@75b376b0
[DEBUG] 2022-08-15 17:43:56.675 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@75b376b0
[DEBUG] 2022-08-15 17:43:56.675 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e224019
[DEBUG] 2022-08-15 17:43:56.675 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@104abf9b
[DEBUG] 2022-08-15 17:43:56.675 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46a2e162
[DEBUG] 2022-08-15 17:43:56.675 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5ef82a00
[DEBUG] 2022-08-15 17:43:56.675 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@32b68b4e
[DEBUG] 2022-08-15 17:43:56.675 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@77455ce4
[DEBUG] 2022-08-15 17:43:56.676 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@26bd0a9f
[DEBUG] 2022-08-15 17:43:56.676 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@398a8c62
[DEBUG] 2022-08-15 17:43:56.691 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 17:43:56.691 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 17:43:56.691 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:43:56.691 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:43:56.692 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 17:43:56.692 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 17:43:56.693 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 17:43:56.693 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:43:56.694 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 17:43:56.694 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 17:43:56.694 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 17:43:56.695 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 17:43:56.695 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:43:56.695 [http-nio-8080-exec-1] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 17:43:56.698 [http-nio-8080-exec-1] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 17:43:56.701 [http-nio-8080-exec-1] pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak]
[INFO ] 2022-08-15 17:43:56.701 [http-nio-8080-exec-1] pooling - HHH10001001: Connection properties: {user=postgres, password=javaReact1000}
[INFO ] 2022-08-15 17:43:56.701 [http-nio-8080-exec-1] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2022-08-15 17:43:56.702 [http-nio-8080-exec-1] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2022-08-15 17:43:56.703 [http-nio-8080-exec-1] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2022-08-15 17:43:56.988 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4
      major : 13
      minor : 4
[DEBUG] 2022-08-15 17:43:56.988 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
[DEBUG] 2022-08-15 17:43:56.989 [http-nio-8080-exec-1] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-08-15 17:43:56.994 [http-nio-8080-exec-1] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 17:43:57.001 [http-nio-8080-exec-1] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-08-15 17:43:57.148 [http-nio-8080-exec-1] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-08-15 17:43:57.149 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3eec532c
[DEBUG] 2022-08-15 17:43:57.149 [http-nio-8080-exec-1] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3eec532c
[DEBUG] 2022-08-15 17:43:57.149 [http-nio-8080-exec-1] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@43a1260e
[DEBUG] 2022-08-15 17:43:57.150 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30275313] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2cf62493]
[DEBUG] 2022-08-15 17:43:57.170 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:43:57.178 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:43:57.180 [http-nio-8080-exec-1] EntityBinder - Import with entity name Member
[DEBUG] 2022-08-15 17:43:57.182 [http-nio-8080-exec-1] EntityBinder - Bind entity com.revature.nabnak.member.Member on table members
[DEBUG] 2022-08-15 17:43:57.191 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:43:57.192 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:43:57.192 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:43:57.192 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2022-08-15 17:43:57.193 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:email]
[DEBUG] 2022-08-15 17:43:57.218 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2022-08-15 17:43:57.220 [http-nio-8080-exec-1] PropertyBinder - Building property email
[DEBUG] 2022-08-15 17:43:57.221 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
[DEBUG] 2022-08-15 17:43:57.221 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=experience_months, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:43:57.221 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property experienceMonths with lazy=false
[DEBUG] 2022-08-15 17:43:57.221 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:experienceMonths]
[DEBUG] 2022-08-15 17:43:57.221 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:43:57.221 [http-nio-8080-exec-1] PropertyBinder - Building property experienceMonths
[DEBUG] 2022-08-15 17:43:57.222 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:43:57.222 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
[DEBUG] 2022-08-15 17:43:57.222 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:fullName]
[DEBUG] 2022-08-15 17:43:57.222 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for fullName
[DEBUG] 2022-08-15 17:43:57.222 [http-nio-8080-exec-1] PropertyBinder - Building property fullName
[DEBUG] 2022-08-15 17:43:57.222 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:43:57.222 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2022-08-15 17:43:57.222 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:password]
[DEBUG] 2022-08-15 17:43:57.222 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2022-08-15 17:43:57.222 [http-nio-8080-exec-1] PropertyBinder - Building property password
[DEBUG] 2022-08-15 17:43:57.223 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=registration_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:43:57.223 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property registrationDate with lazy=false
[DEBUG] 2022-08-15 17:43:57.223 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:registrationDate]
[DEBUG] 2022-08-15 17:43:57.223 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for registrationDate
[DEBUG] 2022-08-15 17:43:57.223 [http-nio-8080-exec-1] PropertyBinder - Building property registrationDate
[DEBUG] 2022-08-15 17:43:57.225 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:43:57.225 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:43:57.225 [http-nio-8080-exec-1] EntityBinder - Import with entity name Card
[DEBUG] 2022-08-15 17:43:57.225 [http-nio-8080-exec-1] EntityBinder - Bind entity com.revature.nabnak.card.Card on table card
[DEBUG] 2022-08-15 17:43:57.226 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=cardId, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:43:57.226 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:43:57.226 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:43:57.226 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property cardId with lazy=false
[DEBUG] 2022-08-15 17:43:57.226 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:cardId]
[DEBUG] 2022-08-15 17:43:57.227 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for cardId
[DEBUG] 2022-08-15 17:43:57.227 [http-nio-8080-exec-1] PropertyBinder - Building property cardId
[DEBUG] 2022-08-15 17:43:57.227 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cardId)]), cardId, assigned, , ...)
[DEBUG] 2022-08-15 17:43:57.227 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:43:57.227 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2022-08-15 17:43:57.227 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:description]
[DEBUG] 2022-08-15 17:43:57.227 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2022-08-15 17:43:57.227 [http-nio-8080-exec-1] PropertyBinder - Building property description
[DEBUG] 2022-08-15 17:43:57.227 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=memberEmail, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:43:57.227 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property memberEmail with lazy=false
[DEBUG] 2022-08-15 17:43:57.228 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:memberEmail]
[DEBUG] 2022-08-15 17:43:57.228 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for memberEmail
[DEBUG] 2022-08-15 17:43:57.228 [http-nio-8080-exec-1] PropertyBinder - Building property memberEmail
[DEBUG] 2022-08-15 17:43:57.228 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=points, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:43:57.228 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property points with lazy=false
[DEBUG] 2022-08-15 17:43:57.228 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:points]
[DEBUG] 2022-08-15 17:43:57.228 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for points
[DEBUG] 2022-08-15 17:43:57.228 [http-nio-8080-exec-1] PropertyBinder - Building property points
[DEBUG] 2022-08-15 17:43:57.228 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:43:57.228 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2022-08-15 17:43:57.228 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:status]
[DEBUG] 2022-08-15 17:43:57.228 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2022-08-15 17:43:57.229 [http-nio-8080-exec-1] PropertyBinder - Building property status
[DEBUG] 2022-08-15 17:43:57.229 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=tech, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:43:57.229 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property tech with lazy=false
[DEBUG] 2022-08-15 17:43:57.229 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:tech]
[DEBUG] 2022-08-15 17:43:57.229 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for tech
[DEBUG] 2022-08-15 17:43:57.229 [http-nio-8080-exec-1] PropertyBinder - Building property tech
[DEBUG] 2022-08-15 17:43:57.229 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:43:57.229 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:43:57.229 [http-nio-8080-exec-1] EntityBinder - Import with entity name Team
[DEBUG] 2022-08-15 17:43:57.229 [http-nio-8080-exec-1] EntityBinder - Bind entity com.revature.nabnak.team.Team on table teams
[DEBUG] 2022-08-15 17:43:57.230 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:43:57.230 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:43:57.230 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:43:57.230 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2022-08-15 17:43:57.230 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamName]
[DEBUG] 2022-08-15 17:43:57.230 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for teamName
[DEBUG] 2022-08-15 17:43:57.230 [http-nio-8080-exec-1] PropertyBinder - Building property teamName
[DEBUG] 2022-08-15 17:43:57.230 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(teamName)]), teamName, assigned, , ...)
[DEBUG] 2022-08-15 17:43:57.231 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamSize, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:43:57.231 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property teamSize with lazy=false
[DEBUG] 2022-08-15 17:43:57.231 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamSize]
[DEBUG] 2022-08-15 17:43:57.231 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for teamSize
[DEBUG] 2022-08-15 17:43:57.231 [http-nio-8080-exec-1] PropertyBinder - Building property teamSize
[DEBUG] 2022-08-15 17:43:57.231 [http-nio-8080-exec-1] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:43:57.231 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:43:57.231 [http-nio-8080-exec-1] EntityBinder - Import with entity name Board
[DEBUG] 2022-08-15 17:43:57.231 [http-nio-8080-exec-1] EntityBinder - Bind entity com.revature.nabnak.board.Board on table boards
[DEBUG] 2022-08-15 17:43:57.232 [http-nio-8080-exec-1] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(boards), mappingColumn=board_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:43:57.232 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:43:57.232 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:43:57.232 [http-nio-8080-exec-1] PropertyBinder - MetadataSourceProcessor property board_id with lazy=false
[DEBUG] 2022-08-15 17:43:57.232 [http-nio-8080-exec-1] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.board.Board:board_id]
[DEBUG] 2022-08-15 17:43:57.232 [http-nio-8080-exec-1] SimpleValueBinder - building SimpleValue for board_id
[DEBUG] 2022-08-15 17:43:57.232 [http-nio-8080-exec-1] PropertyBinder - Building property board_id
[DEBUG] 2022-08-15 17:43:57.232 [http-nio-8080-exec-1] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(board_id)]), board_id, assigned, , ...)
[DEBUG] 2022-08-15 17:43:57.233 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2022-08-15 17:43:57.233 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:43:57.233 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for fullName
[DEBUG] 2022-08-15 17:43:57.233 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2022-08-15 17:43:57.233 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for registrationDate
[DEBUG] 2022-08-15 17:43:57.233 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for cardId
[DEBUG] 2022-08-15 17:43:57.233 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2022-08-15 17:43:57.233 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for memberEmail
[DEBUG] 2022-08-15 17:43:57.233 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for points
[DEBUG] 2022-08-15 17:43:57.233 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2022-08-15 17:43:57.234 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for tech
[DEBUG] 2022-08-15 17:43:57.234 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for teamName
[DEBUG] 2022-08-15 17:43:57.234 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for teamSize
[DEBUG] 2022-08-15 17:43:57.234 [http-nio-8080-exec-1] SimpleValueBinder - Starting fillSimpleValue for board_id
[DEBUG] 2022-08-15 17:43:57.234 [http-nio-8080-exec-1] PrimaryKey - Forcing column [email] to be non-null as it is part of the primary key for table [members]
[DEBUG] 2022-08-15 17:43:57.234 [http-nio-8080-exec-1] PrimaryKey - Forcing column [cardid] to be non-null as it is part of the primary key for table [card]
[DEBUG] 2022-08-15 17:43:57.235 [http-nio-8080-exec-1] PrimaryKey - Forcing column [teamname] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2022-08-15 17:43:57.235 [http-nio-8080-exec-1] PrimaryKey - Forcing column [board_id] to be non-null as it is part of the primary key for table [boards]
[DEBUG] 2022-08-15 17:43:57.248 [http-nio-8080-exec-1] SessionFactoryImpl - Building session factory
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - SessionFactory name : null
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - Statistics: disabled
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - Default entity-mode: pojo
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - Default batch fetch size: -1
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - Maximum outer join fetch depth: null
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - Default null ordering: NONE
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-08-15 17:43:57.249 [http-nio-8080-exec-1] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - Query language substitutions: {}
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - Named query checking : enabled
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - Second-level cache: disabled
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - Second-level query cache: disabled
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - Second-level query cache factory: null
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - Second-level cache region prefix: null
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - JDBC batch size: 15
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - Scrollable result sets: enabled
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - Wrap result sets: disabled
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - JDBC result set fetch size: null
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-08-15 17:43:57.250 [http-nio-8080-exec-1] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-08-15 17:43:57.251 [http-nio-8080-exec-1] Settings - JPA compliance - query : disabled
[DEBUG] 2022-08-15 17:43:57.251 [http-nio-8080-exec-1] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2022-08-15 17:43:57.251 [http-nio-8080-exec-1] Settings - JPA compliance - lists : disabled
[DEBUG] 2022-08-15 17:43:57.251 [http-nio-8080-exec-1] Settings - JPA compliance - transactions : disabled
[DEBUG] 2022-08-15 17:43:57.280 [http-nio-8080-exec-1] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-08-15 17:43:57.280 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, java.class.path=/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/ext/cldrdata.jar:/opt/jdk8u332-b09/jre/lib/ext/dnsns.jar:/opt/jdk8u332-b09/jre/lib/ext/jaccess.jar:/opt/jdk8u332-b09/jre/lib/ext/localedata.jar:/opt/jdk8u332-b09/jre/lib/ext/nashorn.jar:/opt/jdk8u332-b09/jre/lib/ext/sunec.jar:/opt/jdk8u332-b09/jre/lib/ext/sunjce_provider.jar:/opt/jdk8u332-b09/jre/lib/ext/sunpkcs11.jar:/opt/jdk8u332-b09/jre/lib/ext/zipfs.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/management-agent.jar:/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/target/classes:/home/cjester/.m2/repository/org/postgresql/postgresql/42.3.3/postgresql-42.3.3.jar:/home/cjester/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/home/cjester/.m2/repository/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.23/tomcat-embed-core-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.23/tomcat-annotations-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.23/tomcat-embed-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.23/tomcat-embed-el-8.5.23.jar:/home/cjester/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper/8.5.23/tomcat-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.5.23/tomcat-servlet-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-juli/8.5.23/tomcat-juli-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-el-api/8.5.23/tomcat-el-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-api/8.5.23/tomcat-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util-scan/8.5.23/tomcat-util-scan-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util/8.5.23/tomcat-util-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper-el/8.5.23/tomcat-jasper-el-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jsp-api/8.5.23/tomcat-jsp-api-8.5.23.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/home/cjester/.m2/repository/org/hibernate/hibernate-core/5.4.32.Final/hibernate-core-5.4.32.Final.jar:/home/cjester/.m2/repository/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final.jar:/home/cjester/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/cjester/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/home/cjester/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/cjester/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/cjester/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/home/cjester/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/cjester/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/cjester/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/home/cjester/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/home/cjester/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/cjester/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/cjester/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/cjester/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/snap/intellij-idea-community/381/lib/idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=America/New_York, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/opt/jdk8u332-b09/jre/lib/amd64, sun.java.command=com.revature.nabnak.MainDriver, sun.cpu.endian=little, user.home=/home/cjester, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/opt/jdk8u332-b09/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/opt/jdk8u332-b09/jre/lib/sunrsasign.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_332-b09, user.name=cjester, path.separator=:, hibernate.connection.username=****, os.version=5.15.0-46-generic, java.endorsed.dirs=/opt/jdk8u332-b09/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/tmp, catalina.home=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, java.version=1.8.0_332, user.dir=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, catalina.base=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@460edbdc, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Temurin, java.vm.version=25.332-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/opt/jdk8u332-b09/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[DEBUG] 2022-08-15 17:43:57.286 [http-nio-8080-exec-1] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-08-15 17:43:57.287 [http-nio-8080-exec-1] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-08-15 17:43:57.287 [http-nio-8080-exec-1] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30275313] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@23cc3775]
[DEBUG] 2022-08-15 17:43:57.317 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:43:57.317 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:43:57.400 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:43:57.400 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:43:57.404 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:43:57.404 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:43:57.412 [http-nio-8080-exec-1] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:43:57.413 [http-nio-8080-exec-1] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:43:57.419 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:43:57.419 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select email from members where email =?
[DEBUG] 2022-08-15 17:43:57.419 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select member_.email, member_.experience_months as experien2_2_, member_.full_name as full_nam3_2_, member_.password as password4_2_, member_.registration_date as registra5_2_ from members member_ where member_.email=?
[DEBUG] 2022-08-15 17:43:57.419 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into members (experience_months, full_name, password, registration_date, email) values (?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:43:57.419 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update members set experience_months=?, full_name=?, password=?, registration_date=? where email=?
[DEBUG] 2022-08-15 17:43:57.419 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from members where email=?
[DEBUG] 2022-08-15 17:43:57.429 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e79d43a]
[DEBUG] 2022-08-15 17:43:57.430 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : experienceMonths
[DEBUG] 2022-08-15 17:43:57.430 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : fullName
[DEBUG] 2022-08-15 17:43:57.430 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-08-15 17:43:57.430 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : registrationDate
[DEBUG] 2022-08-15 17:43:57.430 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:43:57.435 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:43:57.437 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.member.Member)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.member.Member, querySpaceUid=<gen:0>, path=com.revature.nabnak.member.Member)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.member.Member)
          - SQL table alias mapping - member0_
          - alias suffix - 0_
          - suffixed key columns - {email1_2_0_}

[DEBUG] 2022-08-15 17:43:57.438 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.revature.nabnak.member.Member [NONE]: select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:43:57.438 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:43:57.438 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select teamName from teams where teamName =?
[DEBUG] 2022-08-15 17:43:57.438 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select team_.teamName, team_.teamSize as teamsize2_3_ from teams team_ where team_.teamName=?
[DEBUG] 2022-08-15 17:43:57.438 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into teams (teamSize, teamName) values (?, ?)
[DEBUG] 2022-08-15 17:43:57.438 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update teams set teamSize=? where teamName=?
[DEBUG] 2022-08-15 17:43:57.438 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from teams where teamName=?
[DEBUG] 2022-08-15 17:43:57.438 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@536d8aa5]
[DEBUG] 2022-08-15 17:43:57.438 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : teamSize
[DEBUG] 2022-08-15 17:43:57.439 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:43:57.439 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:43:57.439 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.team.Team)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.team.Team, querySpaceUid=<gen:0>, path=com.revature.nabnak.team.Team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.team.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamname1_3_0_}

[DEBUG] 2022-08-15 17:43:57.439 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.revature.nabnak.team.Team [NONE]: select team0_.teamName as teamname1_3_0_, team0_.teamSize as teamsize2_3_0_ from teams team0_ where team0_.teamName=?
[DEBUG] 2022-08-15 17:43:57.439 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:43:57.439 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select cardId from card where cardId =?
[DEBUG] 2022-08-15 17:43:57.439 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select card_.cardId, card_.description as descript2_1_, card_.memberEmail as memberem3_1_, card_.points as points4_1_, card_.status as status5_1_, card_.tech as tech6_1_ from card card_ where card_.cardId=?
[DEBUG] 2022-08-15 17:43:57.439 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into card (description, memberEmail, points, status, tech, cardId) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:43:57.439 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: update card set description=?, memberEmail=?, points=?, status=?, tech=? where cardId=?
[DEBUG] 2022-08-15 17:43:57.439 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from card where cardId=?
[DEBUG] 2022-08-15 17:43:57.439 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20bcabe6]
[DEBUG] 2022-08-15 17:43:57.439 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-08-15 17:43:57.440 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : memberEmail
[DEBUG] 2022-08-15 17:43:57.440 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2022-08-15 17:43:57.440 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2022-08-15 17:43:57.440 [http-nio-8080-exec-1] MetamodelGraphWalker - Visiting attribute path : tech
[DEBUG] 2022-08-15 17:43:57.440 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:43:57.440 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:43:57.440 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.card.Card)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.card.Card, querySpaceUid=<gen:0>, path=com.revature.nabnak.card.Card)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.card.Card)
          - SQL table alias mapping - card0_
          - alias suffix - 0_
          - suffixed key columns - {cardid1_1_0_}

[DEBUG] 2022-08-15 17:43:57.440 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.revature.nabnak.card.Card [NONE]: select card0_.cardId as cardid1_1_0_, card0_.description as descript2_1_0_, card0_.memberEmail as memberem3_1_0_, card0_.points as points4_1_0_, card0_.status as status5_1_0_, card0_.tech as tech6_1_0_ from card card0_ where card0_.cardId=?
[DEBUG] 2022-08-15 17:43:57.440 [http-nio-8080-exec-1] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:43:57.440 [http-nio-8080-exec-1] AbstractEntityPersister -  Version select: select board_id from boards where board_id =?
[DEBUG] 2022-08-15 17:43:57.440 [http-nio-8080-exec-1] AbstractEntityPersister -  Snapshot select: select board_.board_id from boards board_ where board_.board_id=?
[DEBUG] 2022-08-15 17:43:57.440 [http-nio-8080-exec-1] AbstractEntityPersister -  Insert 0: insert into boards (board_id) values (?)
[DEBUG] 2022-08-15 17:43:57.440 [http-nio-8080-exec-1] AbstractEntityPersister -  Update 0: null
[DEBUG] 2022-08-15 17:43:57.441 [http-nio-8080-exec-1] AbstractEntityPersister -  Delete 0: delete from boards where board_id=?
[DEBUG] 2022-08-15 17:43:57.441 [http-nio-8080-exec-1] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d6059d]
[DEBUG] 2022-08-15 17:43:57.441 [http-nio-8080-exec-1] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:43:57.441 [http-nio-8080-exec-1] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:43:57.441 [http-nio-8080-exec-1] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.board.Board)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.board.Board, querySpaceUid=<gen:0>, path=com.revature.nabnak.board.Board)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.board.Board)
          - SQL table alias mapping - board0_
          - alias suffix - 0_
          - suffixed key columns - {board_id1_0_0_}

[DEBUG] 2022-08-15 17:43:57.441 [http-nio-8080-exec-1] EntityLoader - Static select for entity com.revature.nabnak.board.Board [NONE]: select board0_.board_id as board_id1_0_0_ from boards board0_ where board0_.board_id=?
[INFO ] 2022-08-15 17:43:57.459 [http-nio-8080-exec-1] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@676207fa] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 2022-08-15 17:43:57.500 [http-nio-8080-exec-1] Table - No alter strings for table : boards
[DEBUG] 2022-08-15 17:43:57.500 [http-nio-8080-exec-1] SQL - alter table if exists card add column cardId int4 not null
[WARN ] 2022-08-15 17:43:57.512 [http-nio-8080-exec-1] ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:562) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:583) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:297) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:75) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at com.revature.nabnak.util.HibernateUtil.getSession(HibernateUtil.java:39) [classes/:?]
	at com.revature.nabnak.member.MemberDao.findById(MemberDao.java:52) [classes/:?]
	at com.revature.nabnak.member.MemberService.findById(MemberService.java:53) [classes/:?]
	at com.revature.nabnak.member.MemberServlet.doGet(MemberServlet.java:56) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_332]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.lang.Thread.run(Thread.java:750) [?:1.8.0_332]
Caused by: org.postgresql.util.PSQLException: ERROR: column "cardid" of relation "card" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:329) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:315) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:291) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:286) ~[postgresql-42.3.3.jar:42.3.3]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	... 35 more
[DEBUG] 2022-08-15 17:43:57.514 [http-nio-8080-exec-1] Table - No alter strings for table : members
[DEBUG] 2022-08-15 17:43:57.515 [http-nio-8080-exec-1] Table - No alter strings for table : teams
[DEBUG] 2022-08-15 17:43:57.515 [http-nio-8080-exec-1] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-08-15 17:43:57.515 [http-nio-8080-exec-1] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-08-15 17:43:57.518 [http-nio-8080-exec-1] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-08-15 17:43:57.518 [http-nio-8080-exec-1] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-08-15 17:43:57.519 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-08-15 17:43:57.519 [http-nio-8080-exec-1] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-08-15 17:43:57.523 [http-nio-8080-exec-1] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6005254d
[DEBUG] 2022-08-15 17:43:57.523 [http-nio-8080-exec-1] SessionFactoryRegistry - Registering SessionFactory: df888431-2b7e-4a51-8126-e45f1b5375a3 (<unnamed>)
[DEBUG] 2022-08-15 17:43:57.523 [http-nio-8080-exec-1] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-08-15 17:43:57.552 [http-nio-8080-exec-1] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-08-15 17:43:57.554 [http-nio-8080-exec-1] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:43:57.554 [http-nio-8080-exec-1] TransactionImpl - begin
[DEBUG] 2022-08-15 17:43:57.559 [http-nio-8080-exec-1] TransactionImpl - committing
[DEBUG] 2022-08-15 17:43:57.560 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:43:57.560 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:44:26.986 [Hibernate Connection Pool Validation Thread] DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
[INFO ] 2022-08-15 17:45:45.960 [http-nio-8080-exec-2] MemberServlet - Email entered ar@mail.com
[DEBUG] 2022-08-15 17:45:45.976 [http-nio-8080-exec-2] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 17:45:45.980 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:45:45.981 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:45:45.982 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 17:45:45.992 [http-nio-8080-exec-2] Version - HHH000412: Hibernate ORM core version 5.4.32.Final
[INFO ] 2022-08-15 17:45:45.993 [http-nio-8080-exec-2] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.postgresql.Driver, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 17:45:46.067 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:45:46.067 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:45:46.067 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 17:45:46.069 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 17:45:46.069 [http-nio-8080-exec-2] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 17:45:46.074 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 17:45:46.074 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 17:45:46.082 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 17:45:46.096 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7158c93d
[DEBUG] 2022-08-15 17:45:46.096 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7158c93d
[DEBUG] 2022-08-15 17:45:46.096 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7158c93d
[DEBUG] 2022-08-15 17:45:46.097 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@444d3b4c
[DEBUG] 2022-08-15 17:45:46.097 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7debe3d7
[DEBUG] 2022-08-15 17:45:46.097 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2de110ba
[DEBUG] 2022-08-15 17:45:46.098 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4a831bf4
[DEBUG] 2022-08-15 17:45:46.098 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4a831bf4
[DEBUG] 2022-08-15 17:45:46.098 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4a831bf4
[DEBUG] 2022-08-15 17:45:46.098 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@44d69fd1
[DEBUG] 2022-08-15 17:45:46.099 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@44d69fd1
[DEBUG] 2022-08-15 17:45:46.099 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@44d69fd1
[DEBUG] 2022-08-15 17:45:46.099 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4ef7754f
[DEBUG] 2022-08-15 17:45:46.099 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4ef7754f
[DEBUG] 2022-08-15 17:45:46.099 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ef7754f
[DEBUG] 2022-08-15 17:45:46.100 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3043b7a1
[DEBUG] 2022-08-15 17:45:46.100 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3043b7a1
[DEBUG] 2022-08-15 17:45:46.100 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3043b7a1
[DEBUG] 2022-08-15 17:45:46.101 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@18a793f0
[DEBUG] 2022-08-15 17:45:46.101 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@18a793f0
[DEBUG] 2022-08-15 17:45:46.101 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@18a793f0
[DEBUG] 2022-08-15 17:45:46.101 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@268363a3
[DEBUG] 2022-08-15 17:45:46.101 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@268363a3
[DEBUG] 2022-08-15 17:45:46.101 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@268363a3
[DEBUG] 2022-08-15 17:45:46.102 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6561f335
[DEBUG] 2022-08-15 17:45:46.102 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6561f335
[DEBUG] 2022-08-15 17:45:46.102 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6561f335
[DEBUG] 2022-08-15 17:45:46.103 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1156f612
[DEBUG] 2022-08-15 17:45:46.103 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1156f612
[DEBUG] 2022-08-15 17:45:46.103 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4185a0e8
[DEBUG] 2022-08-15 17:45:46.103 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4185a0e8
[DEBUG] 2022-08-15 17:45:46.104 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d43d8b4
[DEBUG] 2022-08-15 17:45:46.104 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d43d8b4
[DEBUG] 2022-08-15 17:45:46.104 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6816f55c
[DEBUG] 2022-08-15 17:45:46.104 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@361fe72c
[DEBUG] 2022-08-15 17:45:46.105 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@62cd3bc6
[DEBUG] 2022-08-15 17:45:46.105 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62cd3bc6
[DEBUG] 2022-08-15 17:45:46.105 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7391d249
[DEBUG] 2022-08-15 17:45:46.105 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7391d249
[DEBUG] 2022-08-15 17:45:46.112 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@508d26ba
[DEBUG] 2022-08-15 17:45:46.112 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@508d26ba
[DEBUG] 2022-08-15 17:45:46.113 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5fc4446
[DEBUG] 2022-08-15 17:45:46.113 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5fc4446
[DEBUG] 2022-08-15 17:45:46.113 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7f4702d7
[DEBUG] 2022-08-15 17:45:46.113 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7f4702d7
[DEBUG] 2022-08-15 17:45:46.114 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@56e4ace3
[DEBUG] 2022-08-15 17:45:46.114 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@56e4ace3
[DEBUG] 2022-08-15 17:45:46.115 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@41eb164
[DEBUG] 2022-08-15 17:45:46.115 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@41eb164
[DEBUG] 2022-08-15 17:45:46.116 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@217f0162
[DEBUG] 2022-08-15 17:45:46.116 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@217f0162
[DEBUG] 2022-08-15 17:45:46.117 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27d2ee9f
[DEBUG] 2022-08-15 17:45:46.117 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27d2ee9f
[DEBUG] 2022-08-15 17:45:46.118 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1eb6637e
[DEBUG] 2022-08-15 17:45:46.118 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1eb6637e
[DEBUG] 2022-08-15 17:45:46.118 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@26e1f183
[DEBUG] 2022-08-15 17:45:46.119 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@26e1f183
[DEBUG] 2022-08-15 17:45:46.119 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1b040999
[DEBUG] 2022-08-15 17:45:46.119 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1b040999
[DEBUG] 2022-08-15 17:45:46.119 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1b040999
[DEBUG] 2022-08-15 17:45:46.120 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4365059d
[DEBUG] 2022-08-15 17:45:46.120 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6e2a44ee
[DEBUG] 2022-08-15 17:45:46.121 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6e2a44ee
[DEBUG] 2022-08-15 17:45:46.121 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6e2a44ee
[DEBUG] 2022-08-15 17:45:46.121 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@79172f16
[DEBUG] 2022-08-15 17:45:46.121 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@318aafa4
[DEBUG] 2022-08-15 17:45:46.122 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6d505389
[DEBUG] 2022-08-15 17:45:46.122 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d505389
[DEBUG] 2022-08-15 17:45:46.122 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@342b5aa
[DEBUG] 2022-08-15 17:45:46.122 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@342b5aa
[DEBUG] 2022-08-15 17:45:46.123 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b76f595
[DEBUG] 2022-08-15 17:45:46.123 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b76f595
[DEBUG] 2022-08-15 17:45:46.123 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6933f653
[DEBUG] 2022-08-15 17:45:46.123 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6933f653
[DEBUG] 2022-08-15 17:45:46.124 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3c7c4c91
[DEBUG] 2022-08-15 17:45:46.124 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3c7c4c91
[DEBUG] 2022-08-15 17:45:46.124 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@30b5e54f
[DEBUG] 2022-08-15 17:45:46.125 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5c13c9ae
[DEBUG] 2022-08-15 17:45:46.125 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5c13c9ae
[DEBUG] 2022-08-15 17:45:46.125 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5c13c9ae
[DEBUG] 2022-08-15 17:45:46.125 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@c5c5cb4
[DEBUG] 2022-08-15 17:45:46.125 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@c5c5cb4
[DEBUG] 2022-08-15 17:45:46.125 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@c5c5cb4
[DEBUG] 2022-08-15 17:45:46.126 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5ebb6ab2
[DEBUG] 2022-08-15 17:45:46.126 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@33c620b6
[DEBUG] 2022-08-15 17:45:46.126 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@43bc21ee
[DEBUG] 2022-08-15 17:45:46.127 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@43bc21ee
[DEBUG] 2022-08-15 17:45:46.127 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@43bc21ee
[DEBUG] 2022-08-15 17:45:46.127 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@163cf321
[DEBUG] 2022-08-15 17:45:46.127 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@163cf321
[DEBUG] 2022-08-15 17:45:46.127 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@163cf321
[DEBUG] 2022-08-15 17:45:46.127 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@79f40cbe
[DEBUG] 2022-08-15 17:45:46.128 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@561d3ca9
[DEBUG] 2022-08-15 17:45:46.128 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@cb207b4
[DEBUG] 2022-08-15 17:45:46.128 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@cb207b4
[DEBUG] 2022-08-15 17:45:46.129 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6d6bd520
[DEBUG] 2022-08-15 17:45:46.129 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2ee79b7b
[DEBUG] 2022-08-15 17:45:46.129 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2ee79b7b
[DEBUG] 2022-08-15 17:45:46.130 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@18ff4f27
[DEBUG] 2022-08-15 17:45:46.130 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@18ff4f27
[DEBUG] 2022-08-15 17:45:46.130 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@741c6ba4
[DEBUG] 2022-08-15 17:45:46.131 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@38a94d13
[DEBUG] 2022-08-15 17:45:46.131 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@72ef7c68
[DEBUG] 2022-08-15 17:45:46.132 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4e0ee91b
[DEBUG] 2022-08-15 17:45:46.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4e0ee91b
[DEBUG] 2022-08-15 17:45:46.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3b396d31
[DEBUG] 2022-08-15 17:45:46.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2c60d7c
[DEBUG] 2022-08-15 17:45:46.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d5f5877
[DEBUG] 2022-08-15 17:45:46.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4fc396e1
[DEBUG] 2022-08-15 17:45:46.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3fe33acd
[DEBUG] 2022-08-15 17:45:46.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d7c6da0
[DEBUG] 2022-08-15 17:45:46.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a270098
[DEBUG] 2022-08-15 17:45:46.133 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1980e3a3
[DEBUG] 2022-08-15 17:45:46.148 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 17:45:46.149 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 17:45:46.149 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:45:46.149 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:45:46.149 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 17:45:46.150 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 17:45:46.150 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 17:45:46.151 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:45:46.151 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 17:45:46.151 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 17:45:46.152 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 17:45:46.152 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 17:45:46.152 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:45:46.152 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 17:45:46.155 [http-nio-8080-exec-2] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 17:45:46.158 [http-nio-8080-exec-2] pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak]
[INFO ] 2022-08-15 17:45:46.158 [http-nio-8080-exec-2] pooling - HHH10001001: Connection properties: {user=postgres, password=javaReact1000}
[INFO ] 2022-08-15 17:45:46.158 [http-nio-8080-exec-2] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2022-08-15 17:45:46.159 [http-nio-8080-exec-2] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2022-08-15 17:45:46.159 [http-nio-8080-exec-2] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2022-08-15 17:45:46.458 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4
      major : 13
      minor : 4
[DEBUG] 2022-08-15 17:45:46.458 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
[DEBUG] 2022-08-15 17:45:46.458 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-08-15 17:45:46.463 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 17:45:46.469 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-08-15 17:45:46.624 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-08-15 17:45:46.625 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@47dee39e
[DEBUG] 2022-08-15 17:45:46.625 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@47dee39e
[DEBUG] 2022-08-15 17:45:46.625 [http-nio-8080-exec-2] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3c7c4c91
[DEBUG] 2022-08-15 17:45:46.626 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1d9a788c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@59fa5112]
[DEBUG] 2022-08-15 17:45:46.646 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:45:46.654 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:45:46.656 [http-nio-8080-exec-2] EntityBinder - Import with entity name Member
[DEBUG] 2022-08-15 17:45:46.658 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.member.Member on table members
[DEBUG] 2022-08-15 17:45:46.667 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:45:46.668 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:45:46.668 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:45:46.668 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2022-08-15 17:45:46.669 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:email]
[DEBUG] 2022-08-15 17:45:46.670 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2022-08-15 17:45:46.695 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2022-08-15 17:45:46.696 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
[DEBUG] 2022-08-15 17:45:46.697 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=experience_months, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:45:46.697 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property experienceMonths with lazy=false
[DEBUG] 2022-08-15 17:45:46.697 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:experienceMonths]
[DEBUG] 2022-08-15 17:45:46.697 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:45:46.697 [http-nio-8080-exec-2] PropertyBinder - Building property experienceMonths
[DEBUG] 2022-08-15 17:45:46.697 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:45:46.698 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
[DEBUG] 2022-08-15 17:45:46.698 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:fullName]
[DEBUG] 2022-08-15 17:45:46.698 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for fullName
[DEBUG] 2022-08-15 17:45:46.698 [http-nio-8080-exec-2] PropertyBinder - Building property fullName
[DEBUG] 2022-08-15 17:45:46.698 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:45:46.698 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2022-08-15 17:45:46.698 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:password]
[DEBUG] 2022-08-15 17:45:46.698 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2022-08-15 17:45:46.698 [http-nio-8080-exec-2] PropertyBinder - Building property password
[DEBUG] 2022-08-15 17:45:46.699 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=registration_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:45:46.699 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property registrationDate with lazy=false
[DEBUG] 2022-08-15 17:45:46.699 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:registrationDate]
[DEBUG] 2022-08-15 17:45:46.699 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for registrationDate
[DEBUG] 2022-08-15 17:45:46.699 [http-nio-8080-exec-2] PropertyBinder - Building property registrationDate
[DEBUG] 2022-08-15 17:45:46.701 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:45:46.701 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:45:46.701 [http-nio-8080-exec-2] EntityBinder - Import with entity name Card
[DEBUG] 2022-08-15 17:45:46.701 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.card.Card on table card
[DEBUG] 2022-08-15 17:45:46.702 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=cardId, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:45:46.702 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:45:46.702 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:45:46.702 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property cardId with lazy=false
[DEBUG] 2022-08-15 17:45:46.702 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:cardId]
[DEBUG] 2022-08-15 17:45:46.702 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for cardId
[DEBUG] 2022-08-15 17:45:46.702 [http-nio-8080-exec-2] PropertyBinder - Building property cardId
[DEBUG] 2022-08-15 17:45:46.703 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cardId)]), cardId, assigned, , ...)
[DEBUG] 2022-08-15 17:45:46.703 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:45:46.703 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2022-08-15 17:45:46.703 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:description]
[DEBUG] 2022-08-15 17:45:46.703 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2022-08-15 17:45:46.703 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2022-08-15 17:45:46.703 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=memberEmail, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:45:46.703 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property memberEmail with lazy=false
[DEBUG] 2022-08-15 17:45:46.703 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:memberEmail]
[DEBUG] 2022-08-15 17:45:46.703 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for memberEmail
[DEBUG] 2022-08-15 17:45:46.703 [http-nio-8080-exec-2] PropertyBinder - Building property memberEmail
[DEBUG] 2022-08-15 17:45:46.704 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=points, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:45:46.704 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property points with lazy=false
[DEBUG] 2022-08-15 17:45:46.704 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:points]
[DEBUG] 2022-08-15 17:45:46.704 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for points
[DEBUG] 2022-08-15 17:45:46.704 [http-nio-8080-exec-2] PropertyBinder - Building property points
[DEBUG] 2022-08-15 17:45:46.704 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:45:46.704 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2022-08-15 17:45:46.704 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:status]
[DEBUG] 2022-08-15 17:45:46.704 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2022-08-15 17:45:46.704 [http-nio-8080-exec-2] PropertyBinder - Building property status
[DEBUG] 2022-08-15 17:45:46.704 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=tech, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:45:46.705 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property tech with lazy=false
[DEBUG] 2022-08-15 17:45:46.705 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:tech]
[DEBUG] 2022-08-15 17:45:46.705 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for tech
[DEBUG] 2022-08-15 17:45:46.705 [http-nio-8080-exec-2] PropertyBinder - Building property tech
[DEBUG] 2022-08-15 17:45:46.705 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:45:46.705 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:45:46.705 [http-nio-8080-exec-2] EntityBinder - Import with entity name Team
[DEBUG] 2022-08-15 17:45:46.705 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.team.Team on table teams
[DEBUG] 2022-08-15 17:45:46.706 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:45:46.706 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:45:46.706 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:45:46.706 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2022-08-15 17:45:46.706 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamName]
[DEBUG] 2022-08-15 17:45:46.706 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for teamName
[DEBUG] 2022-08-15 17:45:46.706 [http-nio-8080-exec-2] PropertyBinder - Building property teamName
[DEBUG] 2022-08-15 17:45:46.706 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(teamName)]), teamName, assigned, , ...)
[DEBUG] 2022-08-15 17:45:46.706 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamSize, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:45:46.707 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property teamSize with lazy=false
[DEBUG] 2022-08-15 17:45:46.707 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamSize]
[DEBUG] 2022-08-15 17:45:46.707 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for teamSize
[DEBUG] 2022-08-15 17:45:46.707 [http-nio-8080-exec-2] PropertyBinder - Building property teamSize
[DEBUG] 2022-08-15 17:45:46.707 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:45:46.707 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:45:46.707 [http-nio-8080-exec-2] EntityBinder - Import with entity name Board
[DEBUG] 2022-08-15 17:45:46.707 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.board.Board on table boards
[DEBUG] 2022-08-15 17:45:46.707 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(boards), mappingColumn=board_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:45:46.707 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:45:46.708 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:45:46.708 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property board_id with lazy=false
[DEBUG] 2022-08-15 17:45:46.708 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.board.Board:board_id]
[DEBUG] 2022-08-15 17:45:46.708 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for board_id
[DEBUG] 2022-08-15 17:45:46.708 [http-nio-8080-exec-2] PropertyBinder - Building property board_id
[DEBUG] 2022-08-15 17:45:46.708 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(board_id)]), board_id, assigned, , ...)
[DEBUG] 2022-08-15 17:45:46.709 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2022-08-15 17:45:46.709 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:45:46.709 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for fullName
[DEBUG] 2022-08-15 17:45:46.709 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2022-08-15 17:45:46.709 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for registrationDate
[DEBUG] 2022-08-15 17:45:46.709 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for cardId
[DEBUG] 2022-08-15 17:45:46.709 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2022-08-15 17:45:46.709 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for memberEmail
[DEBUG] 2022-08-15 17:45:46.709 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for points
[DEBUG] 2022-08-15 17:45:46.709 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2022-08-15 17:45:46.709 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for tech
[DEBUG] 2022-08-15 17:45:46.709 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for teamName
[DEBUG] 2022-08-15 17:45:46.710 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for teamSize
[DEBUG] 2022-08-15 17:45:46.710 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for board_id
[DEBUG] 2022-08-15 17:45:46.710 [http-nio-8080-exec-2] PrimaryKey - Forcing column [email] to be non-null as it is part of the primary key for table [members]
[DEBUG] 2022-08-15 17:45:46.710 [http-nio-8080-exec-2] PrimaryKey - Forcing column [cardid] to be non-null as it is part of the primary key for table [card]
[DEBUG] 2022-08-15 17:45:46.710 [http-nio-8080-exec-2] PrimaryKey - Forcing column [teamname] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2022-08-15 17:45:46.711 [http-nio-8080-exec-2] PrimaryKey - Forcing column [board_id] to be non-null as it is part of the primary key for table [boards]
[DEBUG] 2022-08-15 17:45:46.724 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: null
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-08-15 17:45:46.725 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - JPA compliance - query : disabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - JPA compliance - lists : disabled
[DEBUG] 2022-08-15 17:45:46.726 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : disabled
[DEBUG] 2022-08-15 17:45:46.755 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-08-15 17:45:46.756 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, java.class.path=/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/ext/cldrdata.jar:/opt/jdk8u332-b09/jre/lib/ext/dnsns.jar:/opt/jdk8u332-b09/jre/lib/ext/jaccess.jar:/opt/jdk8u332-b09/jre/lib/ext/localedata.jar:/opt/jdk8u332-b09/jre/lib/ext/nashorn.jar:/opt/jdk8u332-b09/jre/lib/ext/sunec.jar:/opt/jdk8u332-b09/jre/lib/ext/sunjce_provider.jar:/opt/jdk8u332-b09/jre/lib/ext/sunpkcs11.jar:/opt/jdk8u332-b09/jre/lib/ext/zipfs.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/management-agent.jar:/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/target/classes:/home/cjester/.m2/repository/org/postgresql/postgresql/42.3.3/postgresql-42.3.3.jar:/home/cjester/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/home/cjester/.m2/repository/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.23/tomcat-embed-core-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.23/tomcat-annotations-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.23/tomcat-embed-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.23/tomcat-embed-el-8.5.23.jar:/home/cjester/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper/8.5.23/tomcat-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.5.23/tomcat-servlet-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-juli/8.5.23/tomcat-juli-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-el-api/8.5.23/tomcat-el-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-api/8.5.23/tomcat-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util-scan/8.5.23/tomcat-util-scan-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util/8.5.23/tomcat-util-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper-el/8.5.23/tomcat-jasper-el-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jsp-api/8.5.23/tomcat-jsp-api-8.5.23.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/home/cjester/.m2/repository/org/hibernate/hibernate-core/5.4.32.Final/hibernate-core-5.4.32.Final.jar:/home/cjester/.m2/repository/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final.jar:/home/cjester/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/cjester/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/home/cjester/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/cjester/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/cjester/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/home/cjester/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/cjester/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/cjester/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/home/cjester/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/home/cjester/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/cjester/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/cjester/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/cjester/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/snap/intellij-idea-community/381/lib/idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=America/New_York, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/opt/jdk8u332-b09/jre/lib/amd64, sun.java.command=com.revature.nabnak.MainDriver, sun.cpu.endian=little, user.home=/home/cjester, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/opt/jdk8u332-b09/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/opt/jdk8u332-b09/jre/lib/sunrsasign.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_332-b09, user.name=cjester, path.separator=:, hibernate.connection.username=****, os.version=5.15.0-46-generic, java.endorsed.dirs=/opt/jdk8u332-b09/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/tmp, catalina.home=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, java.version=1.8.0_332, user.dir=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, catalina.base=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5771c680, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Temurin, java.vm.version=25.332-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/opt/jdk8u332-b09/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[DEBUG] 2022-08-15 17:45:46.763 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-08-15 17:45:46.764 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-08-15 17:45:46.764 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1d9a788c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6e519811]
[DEBUG] 2022-08-15 17:45:46.793 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:45:46.793 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:45:46.873 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:45:46.873 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:45:46.877 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:45:46.877 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:45:46.885 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:45:46.885 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:45:46.891 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:45:46.892 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select email from members where email =?
[DEBUG] 2022-08-15 17:45:46.892 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select member_.email, member_.experience_months as experien2_2_, member_.full_name as full_nam3_2_, member_.password as password4_2_, member_.registration_date as registra5_2_ from members member_ where member_.email=?
[DEBUG] 2022-08-15 17:45:46.892 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into members (experience_months, full_name, password, registration_date, email) values (?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:45:46.892 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update members set experience_months=?, full_name=?, password=?, registration_date=? where email=?
[DEBUG] 2022-08-15 17:45:46.892 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from members where email=?
[DEBUG] 2022-08-15 17:45:46.902 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e8bab73]
[DEBUG] 2022-08-15 17:45:46.903 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : experienceMonths
[DEBUG] 2022-08-15 17:45:46.903 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : fullName
[DEBUG] 2022-08-15 17:45:46.903 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-08-15 17:45:46.903 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : registrationDate
[DEBUG] 2022-08-15 17:45:46.903 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:45:46.908 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:45:46.910 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.member.Member)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.member.Member, querySpaceUid=<gen:0>, path=com.revature.nabnak.member.Member)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.member.Member)
          - SQL table alias mapping - member0_
          - alias suffix - 0_
          - suffixed key columns - {email1_2_0_}

[DEBUG] 2022-08-15 17:45:46.911 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.member.Member [NONE]: select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:45:46.911 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:45:46.911 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select teamName from teams where teamName =?
[DEBUG] 2022-08-15 17:45:46.911 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select team_.teamName, team_.teamSize as teamsize2_3_ from teams team_ where team_.teamName=?
[DEBUG] 2022-08-15 17:45:46.911 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into teams (teamSize, teamName) values (?, ?)
[DEBUG] 2022-08-15 17:45:46.911 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update teams set teamSize=? where teamName=?
[DEBUG] 2022-08-15 17:45:46.911 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from teams where teamName=?
[DEBUG] 2022-08-15 17:45:46.911 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a3980c3]
[DEBUG] 2022-08-15 17:45:46.911 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : teamSize
[DEBUG] 2022-08-15 17:45:46.911 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:45:46.911 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:45:46.912 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.team.Team)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.team.Team, querySpaceUid=<gen:0>, path=com.revature.nabnak.team.Team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.team.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamname1_3_0_}

[DEBUG] 2022-08-15 17:45:46.912 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.team.Team [NONE]: select team0_.teamName as teamname1_3_0_, team0_.teamSize as teamsize2_3_0_ from teams team0_ where team0_.teamName=?
[DEBUG] 2022-08-15 17:45:46.912 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:45:46.912 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select cardId from card where cardId =?
[DEBUG] 2022-08-15 17:45:46.912 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select card_.cardId, card_.description as descript2_1_, card_.memberEmail as memberem3_1_, card_.points as points4_1_, card_.status as status5_1_, card_.tech as tech6_1_ from card card_ where card_.cardId=?
[DEBUG] 2022-08-15 17:45:46.912 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into card (description, memberEmail, points, status, tech, cardId) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:45:46.912 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update card set description=?, memberEmail=?, points=?, status=?, tech=? where cardId=?
[DEBUG] 2022-08-15 17:45:46.912 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from card where cardId=?
[DEBUG] 2022-08-15 17:45:46.912 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ff83f0f]
[DEBUG] 2022-08-15 17:45:46.912 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-08-15 17:45:46.912 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : memberEmail
[DEBUG] 2022-08-15 17:45:46.912 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2022-08-15 17:45:46.912 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2022-08-15 17:45:46.913 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : tech
[DEBUG] 2022-08-15 17:45:46.913 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:45:46.913 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:45:46.913 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.card.Card)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.card.Card, querySpaceUid=<gen:0>, path=com.revature.nabnak.card.Card)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.card.Card)
          - SQL table alias mapping - card0_
          - alias suffix - 0_
          - suffixed key columns - {cardid1_1_0_}

[DEBUG] 2022-08-15 17:45:46.913 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.card.Card [NONE]: select card0_.cardId as cardid1_1_0_, card0_.description as descript2_1_0_, card0_.memberEmail as memberem3_1_0_, card0_.points as points4_1_0_, card0_.status as status5_1_0_, card0_.tech as tech6_1_0_ from card card0_ where card0_.cardId=?
[DEBUG] 2022-08-15 17:45:46.913 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:45:46.913 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select board_id from boards where board_id =?
[DEBUG] 2022-08-15 17:45:46.913 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select board_.board_id from boards board_ where board_.board_id=?
[DEBUG] 2022-08-15 17:45:46.913 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into boards (board_id) values (?)
[DEBUG] 2022-08-15 17:45:46.913 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: null
[DEBUG] 2022-08-15 17:45:46.913 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from boards where board_id=?
[DEBUG] 2022-08-15 17:45:46.913 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@570ddcf0]
[DEBUG] 2022-08-15 17:45:46.914 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:45:46.914 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:45:46.914 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.board.Board)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.board.Board, querySpaceUid=<gen:0>, path=com.revature.nabnak.board.Board)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.board.Board)
          - SQL table alias mapping - board0_
          - alias suffix - 0_
          - suffixed key columns - {board_id1_0_0_}

[DEBUG] 2022-08-15 17:45:46.914 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.board.Board [NONE]: select board0_.board_id as board_id1_0_0_ from boards board0_ where board0_.board_id=?
[INFO ] 2022-08-15 17:45:46.931 [http-nio-8080-exec-2] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@152c185f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 2022-08-15 17:45:46.976 [http-nio-8080-exec-2] Table - No alter strings for table : boards
[DEBUG] 2022-08-15 17:45:46.976 [http-nio-8080-exec-2] SQL - alter table if exists card add column cardId int4 not null
[WARN ] 2022-08-15 17:45:46.989 [http-nio-8080-exec-2] ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:562) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:583) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:297) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:75) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708) [hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	at com.revature.nabnak.util.HibernateUtil.getSession(HibernateUtil.java:39) [classes/:?]
	at com.revature.nabnak.member.MemberDao.findById(MemberDao.java:52) [classes/:?]
	at com.revature.nabnak.member.MemberService.findById(MemberService.java:53) [classes/:?]
	at com.revature.nabnak.member.MemberServlet.doGet(MemberServlet.java:56) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_332]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.lang.Thread.run(Thread.java:750) [?:1.8.0_332]
Caused by: org.postgresql.util.PSQLException: ERROR: column "cardid" of relation "card" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:329) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:315) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:291) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:286) ~[postgresql-42.3.3.jar:42.3.3]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.4.32.Final.jar:5.4.32.Final]
	... 35 more
[DEBUG] 2022-08-15 17:45:46.992 [http-nio-8080-exec-2] Table - No alter strings for table : members
[DEBUG] 2022-08-15 17:45:46.992 [http-nio-8080-exec-2] Table - No alter strings for table : teams
[DEBUG] 2022-08-15 17:45:46.992 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-08-15 17:45:46.992 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-08-15 17:45:46.995 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-08-15 17:45:46.995 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-08-15 17:45:46.996 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-08-15 17:45:46.996 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-08-15 17:45:47.000 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@35ff342f
[DEBUG] 2022-08-15 17:45:47.000 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: 4fb68075-9782-4f17-96bc-7db1af328141 (<unnamed>)
[DEBUG] 2022-08-15 17:45:47.000 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-08-15 17:45:47.029 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-08-15 17:45:47.031 [http-nio-8080-exec-2] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:45:47.031 [http-nio-8080-exec-2] TransactionImpl - begin
[DEBUG] 2022-08-15 17:45:47.036 [http-nio-8080-exec-2] SQL - select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:45:47.047 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-08-15 17:45:47.053 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:45:47.053 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 2400
[DEBUG] 2022-08-15 17:45:47.053 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:45:47.053 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `fullName` : value = Adam Ranieri
[DEBUG] 2022-08-15 17:45:47.053 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:45:47.053 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = gatorFan
[DEBUG] 2022-08-15 17:45:47.053 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:45:47.053 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-07-06
[DEBUG] 2022-08-15 17:45:47.053 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:45:47.054 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:45:47.055 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : com.revature.nabnak.member.Member#ar@mail.com
[DEBUG] 2022-08-15 17:45:47.055 [http-nio-8080-exec-2] TransactionImpl - committing
[DEBUG] 2022-08-15 17:45:47.055 [http-nio-8080-exec-2] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2022-08-15 17:45:47.058 [http-nio-8080-exec-2] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2022-08-15 17:45:47.060 [http-nio-8080-exec-2] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2022-08-15 17:45:47.060 [http-nio-8080-exec-2] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2022-08-15 17:45:47.060 [http-nio-8080-exec-2] EntityPrinter - Listing entities:
[DEBUG] 2022-08-15 17:45:47.060 [http-nio-8080-exec-2] EntityPrinter - com.revature.nabnak.member.Member{password=gatorFan, experienceMonths=2400, registrationDate=2022-07-06, fullName=Adam Ranieri, email=ar@mail.com}
[DEBUG] 2022-08-15 17:45:47.070 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:45:47.070 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:46:16.455 [Hibernate Connection Pool Validation Thread] DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
[DEBUG] 2022-08-15 17:50:00.471 [http-nio-8080-exec-2] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[DEBUG] 2022-08-15 17:50:00.476 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:50:00.477 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:50:00.478 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-08-15 17:50:00.488 [http-nio-8080-exec-2] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-08-15 17:50:00.489 [http-nio-8080-exec-2] Environment - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.connection.username=postgres, hibernate.connection.password=****, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.driver_class=org.postgresql.Driver, hibernate.hbm2ddl.auto=update}
[DEBUG] 2022-08-15 17:50:00.561 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-08-15 17:50:00.561 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-08-15 17:50:00.561 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2022-08-15 17:50:00.564 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-08-15 17:50:00.564 [http-nio-8080-exec-2] Configuration - Building session factory using provided StandardServiceRegistry
[DEBUG] 2022-08-15 17:50:00.569 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-08-15 17:50:00.569 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-08-15 17:50:00.577 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-08-15 17:50:00.593 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@28dc697a
[DEBUG] 2022-08-15 17:50:00.594 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@28dc697a
[DEBUG] 2022-08-15 17:50:00.594 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@28dc697a
[DEBUG] 2022-08-15 17:50:00.595 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@41c1baec
[DEBUG] 2022-08-15 17:50:00.595 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7381da
[DEBUG] 2022-08-15 17:50:00.596 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@368b12e6
[DEBUG] 2022-08-15 17:50:00.597 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5b369243
[DEBUG] 2022-08-15 17:50:00.597 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5b369243
[DEBUG] 2022-08-15 17:50:00.597 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b369243
[DEBUG] 2022-08-15 17:50:00.598 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4c06f5b8
[DEBUG] 2022-08-15 17:50:00.598 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4c06f5b8
[DEBUG] 2022-08-15 17:50:00.598 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4c06f5b8
[DEBUG] 2022-08-15 17:50:00.599 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5ff1e77f
[DEBUG] 2022-08-15 17:50:00.599 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5ff1e77f
[DEBUG] 2022-08-15 17:50:00.599 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5ff1e77f
[DEBUG] 2022-08-15 17:50:00.600 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@34b055cb
[DEBUG] 2022-08-15 17:50:00.600 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@34b055cb
[DEBUG] 2022-08-15 17:50:00.600 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34b055cb
[DEBUG] 2022-08-15 17:50:00.601 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6d2ba521
[DEBUG] 2022-08-15 17:50:00.601 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6d2ba521
[DEBUG] 2022-08-15 17:50:00.601 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6d2ba521
[DEBUG] 2022-08-15 17:50:00.602 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@454c0a0b
[DEBUG] 2022-08-15 17:50:00.602 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@454c0a0b
[DEBUG] 2022-08-15 17:50:00.602 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@454c0a0b
[DEBUG] 2022-08-15 17:50:00.603 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@500f3774
[DEBUG] 2022-08-15 17:50:00.603 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@500f3774
[DEBUG] 2022-08-15 17:50:00.603 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@500f3774
[DEBUG] 2022-08-15 17:50:00.604 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72894e54
[DEBUG] 2022-08-15 17:50:00.604 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72894e54
[DEBUG] 2022-08-15 17:50:00.605 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31f70d5e
[DEBUG] 2022-08-15 17:50:00.605 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31f70d5e
[DEBUG] 2022-08-15 17:50:00.606 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2f0ef693
[DEBUG] 2022-08-15 17:50:00.607 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2f0ef693
[DEBUG] 2022-08-15 17:50:00.608 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@70550729
[DEBUG] 2022-08-15 17:50:00.609 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@423a435d
[DEBUG] 2022-08-15 17:50:00.609 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@58433243
[DEBUG] 2022-08-15 17:50:00.610 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@58433243
[DEBUG] 2022-08-15 17:50:00.610 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@36beb296
[DEBUG] 2022-08-15 17:50:00.610 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@36beb296
[DEBUG] 2022-08-15 17:50:00.620 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@184d06d5
[DEBUG] 2022-08-15 17:50:00.620 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@184d06d5
[DEBUG] 2022-08-15 17:50:00.621 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@454e18f4
[DEBUG] 2022-08-15 17:50:00.621 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@454e18f4
[DEBUG] 2022-08-15 17:50:00.622 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4de4a1e
[DEBUG] 2022-08-15 17:50:00.622 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4de4a1e
[DEBUG] 2022-08-15 17:50:00.623 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6646cdf8
[DEBUG] 2022-08-15 17:50:00.623 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6646cdf8
[DEBUG] 2022-08-15 17:50:00.624 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@378188e6
[DEBUG] 2022-08-15 17:50:00.624 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@378188e6
[DEBUG] 2022-08-15 17:50:00.625 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5de60017
[DEBUG] 2022-08-15 17:50:00.625 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5de60017
[DEBUG] 2022-08-15 17:50:00.627 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d2447c7
[DEBUG] 2022-08-15 17:50:00.627 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d2447c7
[DEBUG] 2022-08-15 17:50:00.628 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@cfd3834
[DEBUG] 2022-08-15 17:50:00.628 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@cfd3834
[DEBUG] 2022-08-15 17:50:00.628 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@126d297
[DEBUG] 2022-08-15 17:50:00.629 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@126d297
[DEBUG] 2022-08-15 17:50:00.629 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2c56dc55
[DEBUG] 2022-08-15 17:50:00.629 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2c56dc55
[DEBUG] 2022-08-15 17:50:00.629 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2c56dc55
[DEBUG] 2022-08-15 17:50:00.631 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e34c403
[DEBUG] 2022-08-15 17:50:00.632 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5aa7d6e4
[DEBUG] 2022-08-15 17:50:00.632 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5aa7d6e4
[DEBUG] 2022-08-15 17:50:00.632 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5aa7d6e4
[DEBUG] 2022-08-15 17:50:00.632 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@9985189
[DEBUG] 2022-08-15 17:50:00.633 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@769a9978
[DEBUG] 2022-08-15 17:50:00.633 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@f7128af
[DEBUG] 2022-08-15 17:50:00.633 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@f7128af
[DEBUG] 2022-08-15 17:50:00.634 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3ebd0b06
[DEBUG] 2022-08-15 17:50:00.634 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3ebd0b06
[DEBUG] 2022-08-15 17:50:00.634 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1116931b
[DEBUG] 2022-08-15 17:50:00.634 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1116931b
[DEBUG] 2022-08-15 17:50:00.635 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@d084a1
[DEBUG] 2022-08-15 17:50:00.636 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d084a1
[DEBUG] 2022-08-15 17:50:00.636 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@47e40d43
[DEBUG] 2022-08-15 17:50:00.636 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@47e40d43
[DEBUG] 2022-08-15 17:50:00.637 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@df50aa0
[DEBUG] 2022-08-15 17:50:00.637 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@14ae36b5
[DEBUG] 2022-08-15 17:50:00.637 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@14ae36b5
[DEBUG] 2022-08-15 17:50:00.637 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@14ae36b5
[DEBUG] 2022-08-15 17:50:00.638 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@85c3313
[DEBUG] 2022-08-15 17:50:00.638 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@85c3313
[DEBUG] 2022-08-15 17:50:00.638 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@85c3313
[DEBUG] 2022-08-15 17:50:00.638 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a3c5b4f
[DEBUG] 2022-08-15 17:50:00.639 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2aeb4faf
[DEBUG] 2022-08-15 17:50:00.639 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@af42f6f
[DEBUG] 2022-08-15 17:50:00.639 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@af42f6f
[DEBUG] 2022-08-15 17:50:00.639 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@af42f6f
[DEBUG] 2022-08-15 17:50:00.640 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@61345b29
[DEBUG] 2022-08-15 17:50:00.640 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@61345b29
[DEBUG] 2022-08-15 17:50:00.640 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@61345b29
[DEBUG] 2022-08-15 17:50:00.640 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@662cadf1
[DEBUG] 2022-08-15 17:50:00.640 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6f16da70
[DEBUG] 2022-08-15 17:50:00.641 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@20395f6
[DEBUG] 2022-08-15 17:50:00.641 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@20395f6
[DEBUG] 2022-08-15 17:50:00.641 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@62fc3042
[DEBUG] 2022-08-15 17:50:00.642 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@29501d90
[DEBUG] 2022-08-15 17:50:00.642 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@29501d90
[DEBUG] 2022-08-15 17:50:00.643 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@59228748
[DEBUG] 2022-08-15 17:50:00.643 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@59228748
[DEBUG] 2022-08-15 17:50:00.643 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@770c6416
[DEBUG] 2022-08-15 17:50:00.643 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3ffb3c5f
[DEBUG] 2022-08-15 17:50:00.644 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@55e2264f
[DEBUG] 2022-08-15 17:50:00.646 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@60244964
[DEBUG] 2022-08-15 17:50:00.646 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@60244964
[DEBUG] 2022-08-15 17:50:00.646 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@28b2364c
[DEBUG] 2022-08-15 17:50:00.646 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6a1f3557
[DEBUG] 2022-08-15 17:50:00.646 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c4badbe
[DEBUG] 2022-08-15 17:50:00.646 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@21bea6b3
[DEBUG] 2022-08-15 17:50:00.646 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1807f49e
[DEBUG] 2022-08-15 17:50:00.647 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@ba1df44
[DEBUG] 2022-08-15 17:50:00.647 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a46b5d3
[DEBUG] 2022-08-15 17:50:00.647 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e190916
[DEBUG] 2022-08-15 17:50:00.662 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-08-15 17:50:00.662 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-08-15 17:50:00.663 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:50:00.663 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-08-15 17:50:00.663 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-08-15 17:50:00.663 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-08-15 17:50:00.664 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-08-15 17:50:00.664 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:50:00.665 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-08-15 17:50:00.665 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-08-15 17:50:00.665 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-08-15 17:50:00.665 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-08-15 17:50:00.665 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-08-15 17:50:00.666 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[WARN ] 2022-08-15 17:50:00.669 [http-nio-8080-exec-2] pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO ] 2022-08-15 17:50:00.670 [http-nio-8080-exec-2] pooling - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak]
[INFO ] 2022-08-15 17:50:00.671 [http-nio-8080-exec-2] pooling - HHH10001001: Connection properties: {user=postgres, password=javaReact1000}
[INFO ] 2022-08-15 17:50:00.671 [http-nio-8080-exec-2] pooling - HHH10001003: Autocommit mode: false
[DEBUG] 2022-08-15 17:50:00.672 [http-nio-8080-exec-2] DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
[INFO ] 2022-08-15 17:50:00.672 [http-nio-8080-exec-2] DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
[DEBUG] 2022-08-15 17:50:00.968 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : PostgreSQL
    version : 13.4
      major : 13
      minor : 4
[DEBUG] 2022-08-15 17:50:00.968 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.3.3
      major : 42
      minor : 3
[DEBUG] 2022-08-15 17:50:00.968 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-08-15 17:50:00.974 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
[DEBUG] 2022-08-15 17:50:00.980 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[DEBUG] 2022-08-15 17:50:01.024 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@279c82d
[DEBUG] 2022-08-15 17:50:01.024 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@279c82d
[DEBUG] 2022-08-15 17:50:01.024 [http-nio-8080-exec-2] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@47e40d43
[DEBUG] 2022-08-15 17:50:01.025 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@8bdfab3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a144d08]
[DEBUG] 2022-08-15 17:50:01.038 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-08-15 17:50:01.044 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:50:01.077 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:50:01.079 [http-nio-8080-exec-2] EntityBinder - Import with entity name Member
[DEBUG] 2022-08-15 17:50:01.080 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.member.Member on table members
[DEBUG] 2022-08-15 17:50:01.087 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:50:01.088 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:50:01.088 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:50:01.089 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2022-08-15 17:50:01.089 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:email]
[DEBUG] 2022-08-15 17:50:01.090 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2022-08-15 17:50:01.091 [http-nio-8080-exec-2] PropertyBinder - Building property email
[DEBUG] 2022-08-15 17:50:01.092 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
[DEBUG] 2022-08-15 17:50:01.093 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=experience_months, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:50:01.093 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property experienceMonths with lazy=false
[DEBUG] 2022-08-15 17:50:01.093 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:experienceMonths]
[DEBUG] 2022-08-15 17:50:01.093 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:50:01.093 [http-nio-8080-exec-2] PropertyBinder - Building property experienceMonths
[DEBUG] 2022-08-15 17:50:01.093 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:50:01.093 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
[DEBUG] 2022-08-15 17:50:01.094 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:fullName]
[DEBUG] 2022-08-15 17:50:01.094 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for fullName
[DEBUG] 2022-08-15 17:50:01.094 [http-nio-8080-exec-2] PropertyBinder - Building property fullName
[DEBUG] 2022-08-15 17:50:01.094 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:50:01.094 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2022-08-15 17:50:01.094 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:password]
[DEBUG] 2022-08-15 17:50:01.094 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2022-08-15 17:50:01.094 [http-nio-8080-exec-2] PropertyBinder - Building property password
[DEBUG] 2022-08-15 17:50:01.095 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(members), mappingColumn=registration_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:50:01.095 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property registrationDate with lazy=false
[DEBUG] 2022-08-15 17:50:01.095 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.member.Member:registrationDate]
[DEBUG] 2022-08-15 17:50:01.095 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for registrationDate
[DEBUG] 2022-08-15 17:50:01.095 [http-nio-8080-exec-2] PropertyBinder - Building property registrationDate
[DEBUG] 2022-08-15 17:50:01.098 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:50:01.098 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:50:01.099 [http-nio-8080-exec-2] EntityBinder - Import with entity name Card
[DEBUG] 2022-08-15 17:50:01.099 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.card.Card on table card
[DEBUG] 2022-08-15 17:50:01.099 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=cardId, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:50:01.100 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:50:01.100 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:50:01.100 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property cardId with lazy=false
[DEBUG] 2022-08-15 17:50:01.100 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:cardId]
[DEBUG] 2022-08-15 17:50:01.100 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for cardId
[DEBUG] 2022-08-15 17:50:01.100 [http-nio-8080-exec-2] PropertyBinder - Building property cardId
[DEBUG] 2022-08-15 17:50:01.101 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(cardId)]), cardId, assigned, , ...)
[DEBUG] 2022-08-15 17:50:01.101 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:50:01.101 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2022-08-15 17:50:01.101 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:description]
[DEBUG] 2022-08-15 17:50:01.101 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2022-08-15 17:50:01.101 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2022-08-15 17:50:01.101 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=memberEmail, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:50:01.101 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property memberEmail with lazy=false
[DEBUG] 2022-08-15 17:50:01.101 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:memberEmail]
[DEBUG] 2022-08-15 17:50:01.101 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for memberEmail
[DEBUG] 2022-08-15 17:50:01.101 [http-nio-8080-exec-2] PropertyBinder - Building property memberEmail
[DEBUG] 2022-08-15 17:50:01.102 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=points, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:50:01.102 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property points with lazy=false
[DEBUG] 2022-08-15 17:50:01.102 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:points]
[DEBUG] 2022-08-15 17:50:01.102 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for points
[DEBUG] 2022-08-15 17:50:01.102 [http-nio-8080-exec-2] PropertyBinder - Building property points
[DEBUG] 2022-08-15 17:50:01.102 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:50:01.102 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2022-08-15 17:50:01.102 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:status]
[DEBUG] 2022-08-15 17:50:01.102 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2022-08-15 17:50:01.102 [http-nio-8080-exec-2] PropertyBinder - Building property status
[DEBUG] 2022-08-15 17:50:01.102 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(card), mappingColumn=tech, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:50:01.103 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property tech with lazy=false
[DEBUG] 2022-08-15 17:50:01.103 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.card.Card:tech]
[DEBUG] 2022-08-15 17:50:01.103 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for tech
[DEBUG] 2022-08-15 17:50:01.103 [http-nio-8080-exec-2] PropertyBinder - Building property tech
[DEBUG] 2022-08-15 17:50:01.103 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:50:01.104 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:50:01.104 [http-nio-8080-exec-2] EntityBinder - Import with entity name Team
[DEBUG] 2022-08-15 17:50:01.104 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.team.Team on table teams
[DEBUG] 2022-08-15 17:50:01.104 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamName, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:50:01.104 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:50:01.104 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:50:01.104 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property teamName with lazy=false
[DEBUG] 2022-08-15 17:50:01.105 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamName]
[DEBUG] 2022-08-15 17:50:01.105 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for teamName
[DEBUG] 2022-08-15 17:50:01.105 [http-nio-8080-exec-2] PropertyBinder - Building property teamName
[DEBUG] 2022-08-15 17:50:01.105 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(teamName)]), teamName, assigned, , ...)
[DEBUG] 2022-08-15 17:50:01.105 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=teamSize, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:50:01.105 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property teamSize with lazy=false
[DEBUG] 2022-08-15 17:50:01.105 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.team.Team:teamSize]
[DEBUG] 2022-08-15 17:50:01.105 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for teamSize
[DEBUG] 2022-08-15 17:50:01.105 [http-nio-8080-exec-2] PropertyBinder - Building property teamSize
[DEBUG] 2022-08-15 17:50:01.105 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:50:01.106 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-08-15 17:50:01.106 [http-nio-8080-exec-2] EntityBinder - Import with entity name Board
[DEBUG] 2022-08-15 17:50:01.106 [http-nio-8080-exec-2] EntityBinder - Bind entity com.revature.nabnak.board.Board on table boards
[DEBUG] 2022-08-15 17:50:01.106 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(boards), mappingColumn=board_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-08-15 17:50:01.106 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:50:01.106 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:50:01.106 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property board_id with lazy=false
[DEBUG] 2022-08-15 17:50:01.106 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.revature.nabnak.board.Board:board_id]
[DEBUG] 2022-08-15 17:50:01.106 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for board_id
[DEBUG] 2022-08-15 17:50:01.107 [http-nio-8080-exec-2] PropertyBinder - Building property board_id
[DEBUG] 2022-08-15 17:50:01.107 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(board_id)]), board_id, assigned, , ...)
[DEBUG] 2022-08-15 17:50:01.107 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2022-08-15 17:50:01.107 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for experienceMonths
[DEBUG] 2022-08-15 17:50:01.108 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for fullName
[DEBUG] 2022-08-15 17:50:01.108 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2022-08-15 17:50:01.108 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for registrationDate
[DEBUG] 2022-08-15 17:50:01.108 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for cardId
[DEBUG] 2022-08-15 17:50:01.108 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2022-08-15 17:50:01.108 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for memberEmail
[DEBUG] 2022-08-15 17:50:01.108 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for points
[DEBUG] 2022-08-15 17:50:01.108 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2022-08-15 17:50:01.108 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for tech
[DEBUG] 2022-08-15 17:50:01.109 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for teamName
[DEBUG] 2022-08-15 17:50:01.109 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for teamSize
[DEBUG] 2022-08-15 17:50:01.109 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for board_id
[DEBUG] 2022-08-15 17:50:01.110 [http-nio-8080-exec-2] PrimaryKey - Forcing column [email] to be non-null as it is part of the primary key for table [members]
[DEBUG] 2022-08-15 17:50:01.110 [http-nio-8080-exec-2] PrimaryKey - Forcing column [cardid] to be non-null as it is part of the primary key for table [card]
[DEBUG] 2022-08-15 17:50:01.110 [http-nio-8080-exec-2] PrimaryKey - Forcing column [teamname] to be non-null as it is part of the primary key for table [teams]
[DEBUG] 2022-08-15 17:50:01.110 [http-nio-8080-exec-2] PrimaryKey - Forcing column [board_id] to be non-null as it is part of the primary key for table [boards]
[DEBUG] 2022-08-15 17:50:01.125 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2022-08-15 17:50:01.126 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2022-08-15 17:50:01.126 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-08-15 17:50:01.126 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-08-15 17:50:01.126 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2022-08-15 17:50:01.126 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-08-15 17:50:01.126 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2022-08-15 17:50:01.126 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-08-15 17:50:01.126 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-08-15 17:50:01.126 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-08-15 17:50:01.126 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: null
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-08-15 17:50:01.127 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2022-08-15 17:50:01.128 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2022-08-15 17:50:01.128 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-08-15 17:50:01.128 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2022-08-15 17:50:01.128 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-08-15 17:50:01.128 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-08-15 17:50:01.128 [http-nio-8080-exec-2] Settings - JPA compliance - query : disabled
[DEBUG] 2022-08-15 17:50:01.128 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : disabled
[DEBUG] 2022-08-15 17:50:01.128 [http-nio-8080-exec-2] Settings - JPA compliance - lists : disabled
[DEBUG] 2022-08-15 17:50:01.128 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : disabled
[DEBUG] 2022-08-15 17:50:01.150 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:50:01.151 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:50:01.157 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-08-15 17:50:01.157 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect, java.class.path=/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/ext/cldrdata.jar:/opt/jdk8u332-b09/jre/lib/ext/dnsns.jar:/opt/jdk8u332-b09/jre/lib/ext/jaccess.jar:/opt/jdk8u332-b09/jre/lib/ext/localedata.jar:/opt/jdk8u332-b09/jre/lib/ext/nashorn.jar:/opt/jdk8u332-b09/jre/lib/ext/sunec.jar:/opt/jdk8u332-b09/jre/lib/ext/sunjce_provider.jar:/opt/jdk8u332-b09/jre/lib/ext/sunpkcs11.jar:/opt/jdk8u332-b09/jre/lib/ext/zipfs.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/management-agent.jar:/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/target/classes:/home/cjester/.m2/repository/org/postgresql/postgresql/42.3.3/postgresql-42.3.3.jar:/home/cjester/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/home/cjester/.m2/repository/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.23/tomcat-embed-core-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.23/tomcat-annotations-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.23/tomcat-embed-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.23/tomcat-embed-el-8.5.23.jar:/home/cjester/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper/8.5.23/tomcat-jasper-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-servlet-api/8.5.23/tomcat-servlet-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-juli/8.5.23/tomcat-juli-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-el-api/8.5.23/tomcat-el-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-api/8.5.23/tomcat-api-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util-scan/8.5.23/tomcat-util-scan-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-util/8.5.23/tomcat-util-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jasper-el/8.5.23/tomcat-jasper-el-8.5.23.jar:/home/cjester/.m2/repository/org/apache/tomcat/tomcat-jsp-api/8.5.23/tomcat-jsp-api-8.5.23.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar:/home/cjester/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/home/cjester/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/home/cjester/.m2/repository/org/hibernate/hibernate-core/5.6.9.Final/hibernate-core-5.6.9.Final.jar:/home/cjester/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/home/cjester/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/cjester/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/cjester/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/cjester/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/home/cjester/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/cjester/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/cjester/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/home/cjester/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/cjester/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/cjester/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/cjester/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/cjester/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/snap/intellij-idea-community/381/lib/idea_rt.jar, java.vm.vendor=Temurin, sun.arch.data.model=64, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=America/New_York, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/opt/jdk8u332-b09/jre/lib/amd64, sun.java.command=com.revature.nabnak.MainDriver, sun.cpu.endian=little, user.home=/home/cjester, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/opt/jdk8u332-b09/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/opt/jdk8u332-b09/jre/lib/resources.jar:/opt/jdk8u332-b09/jre/lib/rt.jar:/opt/jdk8u332-b09/jre/lib/sunrsasign.jar:/opt/jdk8u332-b09/jre/lib/jsse.jar:/opt/jdk8u332-b09/jre/lib/jce.jar:/opt/jdk8u332-b09/jre/lib/charsets.jar:/opt/jdk8u332-b09/jre/lib/jfr.jar:/opt/jdk8u332-b09/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_332-b09, user.name=cjester, path.separator=:, hibernate.connection.username=****, os.version=5.15.0-46-generic, java.endorsed.dirs=/opt/jdk8u332-b09/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://jester-db-instance.ckg7r7hyod4k.us-east-1.rds.amazonaws.com:5432/postgres?currentSchema=nabnak, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=/tmp, catalina.home=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, java.version=1.8.0_332, user.dir=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, catalina.base=/home/cjester/Desktop/Revature/batches/stacks-on-stacks/nabnak/tomcat.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2f5ebee4, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Temurin, java.vm.version=25.332-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/opt/jdk8u332-b09/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[DEBUG] 2022-08-15 17:50:01.163 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-08-15 17:50:01.163 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-08-15 17:50:01.164 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@8bdfab3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2bcbbed6]
[DEBUG] 2022-08-15 17:50:01.193 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.member.Member] is safe
[DEBUG] 2022-08-15 17:50:01.193 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:50:01.277 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.team.Team] is safe
[DEBUG] 2022-08-15 17:50:01.277 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:50:01.281 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.card.Card] is safe
[DEBUG] 2022-08-15 17:50:01.281 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:50:01.289 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [com.revature.nabnak.board.Board] is safe
[DEBUG] 2022-08-15 17:50:01.289 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:50:01.294 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.member.Member
[DEBUG] 2022-08-15 17:50:01.295 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select email from members where email =?
[DEBUG] 2022-08-15 17:50:01.295 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select member_.email, member_.experience_months as experien2_2_, member_.full_name as full_nam3_2_, member_.password as password4_2_, member_.registration_date as registra5_2_ from members member_ where member_.email=?
[DEBUG] 2022-08-15 17:50:01.295 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into members (experience_months, full_name, password, registration_date, email) values (?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:50:01.295 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update members set experience_months=?, full_name=?, password=?, registration_date=? where email=?
[DEBUG] 2022-08-15 17:50:01.295 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from members where email=?
[DEBUG] 2022-08-15 17:50:01.305 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fe3f2ea]
[DEBUG] 2022-08-15 17:50:01.305 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : experienceMonths
[DEBUG] 2022-08-15 17:50:01.306 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : fullName
[DEBUG] 2022-08-15 17:50:01.306 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-08-15 17:50:01.306 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : registrationDate
[DEBUG] 2022-08-15 17:50:01.306 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:50:01.311 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:50:01.312 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.member.Member)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.member.Member, querySpaceUid=<gen:0>, path=com.revature.nabnak.member.Member)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.member.Member)
          - SQL table alias mapping - member0_
          - alias suffix - 0_
          - suffixed key columns - {email1_2_0_}

[DEBUG] 2022-08-15 17:50:01.313 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.member.Member [NONE]: select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:50:01.313 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.team.Team
[DEBUG] 2022-08-15 17:50:01.313 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select teamName from teams where teamName =?
[DEBUG] 2022-08-15 17:50:01.313 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select team_.teamName, team_.teamSize as teamsize2_3_ from teams team_ where team_.teamName=?
[DEBUG] 2022-08-15 17:50:01.313 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into teams (teamSize, teamName) values (?, ?)
[DEBUG] 2022-08-15 17:50:01.313 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update teams set teamSize=? where teamName=?
[DEBUG] 2022-08-15 17:50:01.314 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from teams where teamName=?
[DEBUG] 2022-08-15 17:50:01.314 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@587edc2c]
[DEBUG] 2022-08-15 17:50:01.314 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : teamSize
[DEBUG] 2022-08-15 17:50:01.314 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:50:01.314 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:50:01.314 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.team.Team)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.team.Team, querySpaceUid=<gen:0>, path=com.revature.nabnak.team.Team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.team.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamname1_3_0_}

[DEBUG] 2022-08-15 17:50:01.314 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.team.Team [NONE]: select team0_.teamName as teamname1_3_0_, team0_.teamSize as teamsize2_3_0_ from teams team0_ where team0_.teamName=?
[DEBUG] 2022-08-15 17:50:01.314 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.card.Card
[DEBUG] 2022-08-15 17:50:01.314 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select cardId from card where cardId =?
[DEBUG] 2022-08-15 17:50:01.314 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select card_.cardId, card_.description as descript2_1_, card_.memberEmail as memberem3_1_, card_.points as points4_1_, card_.status as status5_1_, card_.tech as tech6_1_ from card card_ where card_.cardId=?
[DEBUG] 2022-08-15 17:50:01.314 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into card (description, memberEmail, points, status, tech, cardId) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2022-08-15 17:50:01.314 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update card set description=?, memberEmail=?, points=?, status=?, tech=? where cardId=?
[DEBUG] 2022-08-15 17:50:01.315 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from card where cardId=?
[DEBUG] 2022-08-15 17:50:01.315 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56cfdc77]
[DEBUG] 2022-08-15 17:50:01.315 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-08-15 17:50:01.315 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : memberEmail
[DEBUG] 2022-08-15 17:50:01.315 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2022-08-15 17:50:01.315 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2022-08-15 17:50:01.315 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : tech
[DEBUG] 2022-08-15 17:50:01.315 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:50:01.315 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:50:01.315 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.card.Card)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.card.Card, querySpaceUid=<gen:0>, path=com.revature.nabnak.card.Card)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.card.Card)
          - SQL table alias mapping - card0_
          - alias suffix - 0_
          - suffixed key columns - {cardid1_1_0_}

[DEBUG] 2022-08-15 17:50:01.315 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.card.Card [NONE]: select card0_.cardId as cardid1_1_0_, card0_.description as descript2_1_0_, card0_.memberEmail as memberem3_1_0_, card0_.points as points4_1_0_, card0_.status as status5_1_0_, card0_.tech as tech6_1_0_ from card card0_ where card0_.cardId=?
[DEBUG] 2022-08-15 17:50:01.315 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: com.revature.nabnak.board.Board
[DEBUG] 2022-08-15 17:50:01.315 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select board_id from boards where board_id =?
[DEBUG] 2022-08-15 17:50:01.316 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select board_.board_id from boards board_ where board_.board_id=?
[DEBUG] 2022-08-15 17:50:01.316 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into boards (board_id) values (?)
[DEBUG] 2022-08-15 17:50:01.316 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: null
[DEBUG] 2022-08-15 17:50:01.316 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from boards where board_id=?
[DEBUG] 2022-08-15 17:50:01.316 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@946b8fc]
[DEBUG] 2022-08-15 17:50:01.316 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-08-15 17:50:01.316 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-08-15 17:50:01.316 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=com.revature.nabnak.board.Board)
    - Returns
       - EntityReturnImpl(entity=com.revature.nabnak.board.Board, querySpaceUid=<gen:0>, path=com.revature.nabnak.board.Board)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.nabnak.board.Board)
          - SQL table alias mapping - board0_
          - alias suffix - 0_
          - suffixed key columns - {board_id1_0_0_}

[DEBUG] 2022-08-15 17:50:01.316 [http-nio-8080-exec-2] EntityLoader - Static select for entity com.revature.nabnak.board.Board [NONE]: select board0_.board_id as board_id1_0_0_ from boards board0_ where board0_.board_id=?
[INFO ] 2022-08-15 17:50:01.335 [http-nio-8080-exec-2] access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@66398995] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 2022-08-15 17:50:01.400 [http-nio-8080-exec-2] Table - No alter strings for table : boards
[DEBUG] 2022-08-15 17:50:01.400 [http-nio-8080-exec-2] SQL - alter table if exists card add column cardId int4 not null
[WARN ] 2022-08-15 17:50:01.433 [http-nio-8080-exec-2] ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table if exists card add column cardId int4 not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:581) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:602) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:314) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:78) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:728) [hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at com.revature.nabnak.util.HibernateUtil.getSession(HibernateUtil.java:39) [classes/:?]
	at com.revature.nabnak.member.MemberDao.findById(MemberDao.java:52) [classes/:?]
	at com.revature.nabnak.member.MemberService.update(MemberService.java:79) [classes/:?]
	at com.revature.nabnak.member.MemberServlet.doPut(MemberServlet.java:114) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:664) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_332]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_332]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.23.jar:8.5.23]
	at java.lang.Thread.run(Thread.java:750) [?:1.8.0_332]
Caused by: org.postgresql.util.PSQLException: ERROR: column "cardid" of relation "card" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:329) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:315) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:291) ~[postgresql-42.3.3.jar:42.3.3]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:286) ~[postgresql-42.3.3.jar:42.3.3]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	... 35 more
[DEBUG] 2022-08-15 17:50:01.436 [http-nio-8080-exec-2] Table - No alter strings for table : members
[DEBUG] 2022-08-15 17:50:01.436 [http-nio-8080-exec-2] Table - No alter strings for table : teams
[DEBUG] 2022-08-15 17:50:01.436 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-08-15 17:50:01.437 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-08-15 17:50:01.439 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-08-15 17:50:01.439 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-08-15 17:50:01.440 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-08-15 17:50:01.440 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-08-15 17:50:01.442 [http-nio-8080-exec-2] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2022-08-15 17:50:01.444 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6908e237
[DEBUG] 2022-08-15 17:50:01.445 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: c4857b52-c0bf-4e48-b13c-00391f622923 (<unnamed>)
[DEBUG] 2022-08-15 17:50:01.445 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-08-15 17:50:01.473 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-08-15 17:50:01.475 [http-nio-8080-exec-2] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:50:01.475 [http-nio-8080-exec-2] TransactionImpl - begin
[DEBUG] 2022-08-15 17:50:01.479 [http-nio-8080-exec-2] SQL - select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:50:01.493 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-08-15 17:50:01.499 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:50:01.499 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 240
[DEBUG] 2022-08-15 17:50:01.499 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:01.499 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `fullName` : value = Jeffrey Jourdan
[DEBUG] 2022-08-15 17:50:01.499 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:01.499 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = bmwSeatWarmers
[DEBUG] 2022-08-15 17:50:01.499 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:01.499 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-12
[DEBUG] 2022-08-15 17:50:01.499 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:01.500 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:50:01.501 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : com.revature.nabnak.member.Member#jj@mail.com
[DEBUG] 2022-08-15 17:50:01.501 [http-nio-8080-exec-2] TransactionImpl - committing
[DEBUG] 2022-08-15 17:50:01.501 [http-nio-8080-exec-2] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2022-08-15 17:50:01.504 [http-nio-8080-exec-2] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2022-08-15 17:50:01.505 [http-nio-8080-exec-2] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2022-08-15 17:50:01.506 [http-nio-8080-exec-2] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2022-08-15 17:50:01.506 [http-nio-8080-exec-2] EntityPrinter - Listing entities:
[DEBUG] 2022-08-15 17:50:01.506 [http-nio-8080-exec-2] EntityPrinter - com.revature.nabnak.member.Member{password=bmwSeatWarmers, experienceMonths=240, registrationDate=2022-08-12, fullName=Jeffrey Jourdan, email=jj@mail.com}
[DEBUG] 2022-08-15 17:50:01.519 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:50:01.519 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:50:01.519 [http-nio-8080-exec-2] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:50:01.519 [http-nio-8080-exec-2] TransactionImpl - begin
[DEBUG] 2022-08-15 17:50:01.520 [http-nio-8080-exec-2] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2022-08-15 17:50:01.526 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity com.revature.nabnak.member.Member: select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:50:01.526 [http-nio-8080-exec-2] Loader - Loading entity: [com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:50:01.526 [http-nio-8080-exec-2] SQL - select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:50:01.542 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2022-08-15 17:50:01.542 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:50:01.542 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:50:01.542 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 240
[DEBUG] 2022-08-15 17:50:01.542 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:01.543 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `fullName` : value = Jeffrey Jourdan
[DEBUG] 2022-08-15 17:50:01.543 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:01.543 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = bmwSeatWarmers
[DEBUG] 2022-08-15 17:50:01.543 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:01.543 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-12
[DEBUG] 2022-08-15 17:50:01.543 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:01.543 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:50:01.543 [http-nio-8080-exec-2] Loader - Done entity load
[DEBUG] 2022-08-15 17:50:01.543 [http-nio-8080-exec-2] TransactionImpl - committing
[DEBUG] 2022-08-15 17:50:01.543 [http-nio-8080-exec-2] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2022-08-15 17:50:01.543 [http-nio-8080-exec-2] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2022-08-15 17:50:01.545 [http-nio-8080-exec-2] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2022-08-15 17:50:01.545 [http-nio-8080-exec-2] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2022-08-15 17:50:01.545 [http-nio-8080-exec-2] EntityPrinter - Listing entities:
[DEBUG] 2022-08-15 17:50:01.545 [http-nio-8080-exec-2] EntityPrinter - com.revature.nabnak.member.Member{password=bmwSeatWarmers, experienceMonths=240, registrationDate=2022-08-12, fullName=Jeff Jordan, email=jj@mail.com}
[DEBUG] 2022-08-15 17:50:01.547 [http-nio-8080-exec-2] SQL - update members set experience_months=?, full_name=?, password=?, registration_date=? where email=?
[DEBUG] 2022-08-15 17:50:01.582 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:50:01.582 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:50:01.582 [http-nio-8080-exec-2] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2022-08-15 17:50:21.093 [http-nio-8080-exec-4] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:50:21.093 [http-nio-8080-exec-4] TransactionImpl - begin
[DEBUG] 2022-08-15 17:50:21.100 [http-nio-8080-exec-4] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4c35484f
[DEBUG] 2022-08-15 17:50:21.112 [http-nio-8080-exec-4] QueryTranslatorImpl - parse() - HQL: from com.revature.nabnak.member.Member where email= :email and password= :password
[DEBUG] 2022-08-15 17:50:21.114 [http-nio-8080-exec-4] ErrorTracker - Keyword  'member' is being interpreted as an identifier due to: expecting IDENT, found 'member'
[DEBUG] 2022-08-15 17:50:21.114 [http-nio-8080-exec-4] ErrorTracker - Keyword  'Member' is being interpreted as an identifier due to: expecting IDENT, found 'Member'
[DEBUG] 2022-08-15 17:50:21.115 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-08-15 17:50:21.118 [http-nio-8080-exec-4] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'revature'
    |           |  |  \-[IDENT] Node: 'nabnak'
    |           |  \-[WEIRD_IDENT] Node: 'member'
    |           \-[WEIRD_IDENT] Node: 'Member'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'email'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'email'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

[DEBUG] 2022-08-15 17:50:21.127 [http-nio-8080-exec-4] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2022-08-15 17:50:21.132 [http-nio-8080-exec-4] FromElement - FromClause{level=1} : com.revature.nabnak.member.Member (<no alias>) -> member0_
[DEBUG] 2022-08-15 17:50:21.133 [http-nio-8080-exec-4] FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
[DEBUG] 2022-08-15 17:50:21.134 [http-nio-8080-exec-4] DotNode - getDataType() : email -> org.hibernate.type.StringType@2f0ef693
[DEBUG] 2022-08-15 17:50:21.134 [http-nio-8080-exec-4] FromReferenceNode - Resolved : {synthetic-alias}.email -> member0_.email
[DEBUG] 2022-08-15 17:50:21.135 [http-nio-8080-exec-4] FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
[DEBUG] 2022-08-15 17:50:21.135 [http-nio-8080-exec-4] DotNode - getDataType() : password -> org.hibernate.type.StringType@2f0ef693
[DEBUG] 2022-08-15 17:50:21.135 [http-nio-8080-exec-4] FromReferenceNode - Resolved : {synthetic-alias}.password -> member0_.password
[DEBUG] 2022-08-15 17:50:21.135 [http-nio-8080-exec-4] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2022-08-15 17:50:21.135 [http-nio-8080-exec-4] HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} members member0_ ) ( where ( and ( = ( member0_.email {synthetic-alias} email ) ? ) ( = ( member0_.password {synthetic-alias} password ) ? ) ) ) )
[DEBUG] 2022-08-15 17:50:21.137 [http-nio-8080-exec-4] HqlSqlWalker - Derived SELECT clause created.
[DEBUG] 2022-08-15 17:50:21.139 [http-nio-8080-exec-4] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Member): [members]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.revature.nabnak.member.Member)
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.revature.nabnak.member.Member)
          |  | path: {synthetic-alias}.email
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.revature.nabnak.member.Member)
          |  |  | originalText: {synthetic-alias}
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: email
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.revature.nabnak.member.Member)
             | path: {synthetic-alias}.password
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.revature.nabnak.member.Member)
             |  | originalText: {synthetic-alias}
             |  \-IdentNode
             |    persister: null
             |    originalText: password
             \-ParameterNode

[DEBUG] 2022-08-15 17:50:21.140 [http-nio-8080-exec-4] JoinProcessor - Using FROM fragment [members member0_]
[DEBUG] 2022-08-15 17:50:21.140 [http-nio-8080-exec-4] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2022-08-15 17:50:21.141 [http-nio-8080-exec-4] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (members)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'member0_.email as email1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=members,tableAlias=member0_,origin=null,columns={,className=com.revature.nabnak.member.Member}}}
    |  \-[SQL_TOKEN] SqlFragment: 'member0_.experience_months as experien2_2_, member0_.full_name as full_nam3_2_, member0_.password as password4_2_, member0_.registration_date as registra5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[member0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'members member0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=members,tableAlias=member0_,origin=null,columns={,className=com.revature.nabnak.member.Member}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'member0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path={synthetic-alias}.email,tableAlias=member0_,className=com.revature.nabnak.member.Member,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'email' {originalText=email}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@2f0ef693}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'member0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=member0_,className=com.revature.nabnak.member.Member,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@2f0ef693}

[DEBUG] 2022-08-15 17:50:21.141 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-08-15 17:50:21.144 [http-nio-8080-exec-4] QueryTranslatorImpl - HQL: from com.revature.nabnak.member.Member where email= :email and password= :password
[DEBUG] 2022-08-15 17:50:21.144 [http-nio-8080-exec-4] QueryTranslatorImpl - SQL: select member0_.email as email1_2_, member0_.experience_months as experien2_2_, member0_.full_name as full_nam3_2_, member0_.password as password4_2_, member0_.registration_date as registra5_2_ from members member0_ where member0_.email=? and member0_.password=?
[DEBUG] 2022-08-15 17:50:21.144 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-08-15 17:50:21.149 [http-nio-8080-exec-4] SQL - select member0_.email as email1_2_, member0_.experience_months as experien2_2_, member0_.full_name as full_nam3_2_, member0_.password as password4_2_, member0_.registration_date as registra5_2_ from members member0_ where member0_.email=? and member0_.password=?
[DEBUG] 2022-08-15 17:50:21.163 [http-nio-8080-exec-4] Loader - Result set row: 0
[DEBUG] 2022-08-15 17:50:21.163 [http-nio-8080-exec-4] Loader - Result row: EntityKey[com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:50:21.163 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:50:21.163 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 2400
[DEBUG] 2022-08-15 17:50:21.163 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:21.163 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `fullName` : value = Adam Ranieri
[DEBUG] 2022-08-15 17:50:21.163 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:21.163 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = gatorFan
[DEBUG] 2022-08-15 17:50:21.163 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:21.163 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-07-06
[DEBUG] 2022-08-15 17:50:21.163 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:21.164 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#ar@mail.com]
[DEBUG] 2022-08-15 17:50:21.165 [http-nio-8080-exec-4] TransactionImpl - committing
[DEBUG] 2022-08-15 17:50:21.165 [http-nio-8080-exec-4] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2022-08-15 17:50:21.165 [http-nio-8080-exec-4] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2022-08-15 17:50:21.165 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2022-08-15 17:50:21.165 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2022-08-15 17:50:21.165 [http-nio-8080-exec-4] EntityPrinter - Listing entities:
[DEBUG] 2022-08-15 17:50:21.165 [http-nio-8080-exec-4] EntityPrinter - com.revature.nabnak.member.Member{password=gatorFan, experienceMonths=2400, registrationDate=2022-07-06, fullName=Adam Ranieri, email=ar@mail.com}
[DEBUG] 2022-08-15 17:50:21.177 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:50:21.177 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:50:22.915 [http-nio-8080-exec-5] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2022-08-15 17:50:22.915 [http-nio-8080-exec-5] TransactionImpl - begin
[DEBUG] 2022-08-15 17:50:22.919 [http-nio-8080-exec-5] SessionImpl - Initializing proxy: [com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:50:22.919 [http-nio-8080-exec-5] SQL - select member0_.email as email1_2_0_, member0_.experience_months as experien2_2_0_, member0_.full_name as full_nam3_2_0_, member0_.password as password4_2_0_, member0_.registration_date as registra5_2_0_ from members member0_ where member0_.email=?
[DEBUG] 2022-08-15 17:50:22.933 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-08-15 17:50:22.933 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:50:22.934 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `experienceMonths` : value = 240
[DEBUG] 2022-08-15 17:50:22.934 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`experienceMonths`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:22.934 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `fullName` : value = Jeff Jordan
[DEBUG] 2022-08-15 17:50:22.934 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`fullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:22.934 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = bmwSeatWarmers
[DEBUG] 2022-08-15 17:50:22.934 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:22.934 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `registrationDate` : value = 2022-08-12
[DEBUG] 2022-08-15 17:50:22.934 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`registrationDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-08-15 17:50:22.934 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.revature.nabnak.member.Member#jj@mail.com]
[DEBUG] 2022-08-15 17:50:22.934 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.revature.nabnak.member.Member#jj@mail.com
[DEBUG] 2022-08-15 17:50:22.935 [http-nio-8080-exec-5] TransactionImpl - committing
[DEBUG] 2022-08-15 17:50:22.935 [http-nio-8080-exec-5] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2022-08-15 17:50:22.935 [http-nio-8080-exec-5] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2022-08-15 17:50:22.935 [http-nio-8080-exec-5] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2022-08-15 17:50:22.935 [http-nio-8080-exec-5] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2022-08-15 17:50:22.935 [http-nio-8080-exec-5] EntityPrinter - Listing entities:
[DEBUG] 2022-08-15 17:50:22.935 [http-nio-8080-exec-5] EntityPrinter - com.revature.nabnak.member.Member{password=bmwSeatWarmers, experienceMonths=240, registrationDate=2022-08-12, fullName=Jeff Jordan, email=jj@mail.com}
[DEBUG] 2022-08-15 17:50:22.936 [http-nio-8080-exec-5] SQL - delete from members where email=?
[DEBUG] 2022-08-15 17:50:22.957 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:50:22.958 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-08-15 17:50:22.958 [http-nio-8080-exec-5] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2022-08-15 17:50:30.966 [Hibernate Connection Pool Validation Thread] DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
